var searchIndex = {};
searchIndex['irc'] = {"items":[[0,"","irc","A simple, thread-safe IRC library."],[0,"client","","A simple, thread-safe IRC client library."],[0,"conn","irc::client","Thread-safe connections on IrcStreams."],[3,"Connection","irc::client::conn","A thread-safe connection."],[4,"NetStream","","An abstraction over different networked streams."],[13,"UnsecuredTcpStream","","An unsecured TcpStream.",0],[13,"SslTcpStream","","An SSL-secured TcpStream.\nThis is only available when compiled with SSL support.",0],[6,"NetConnection","","A Connection over a buffered NetStream."],[11,"connect","","Creates a thread-safe TCP connection to the specified server.",1],[11,"connect_ssl","","Creates a thread-safe TCP connection to the specified server over SSL.\nIf the library is compiled without SSL support, this method panics.",1],[11,"reconnect","","Reconnects to the specified server, dropping the current connection.",1],[11,"set_keepalive","","Sets the keepalive for the network stream.",1],[11,"new","","Creates a new connection from an IrcReader and an IrcWriter.",1],[11,"send","","Sends a Message over this connection.",1],[11,"recv","","Receives a single line from this connection.",1],[11,"reader","","Acquires the Reader lock.",1],[11,"writer","","Acquires the Writer lock.",1],[11,"read","","",0],[11,"write","","",0],[11,"flush","","",0],[0,"data","irc::client","Data related to IRC functionality."],[0,"kinds","irc::client::data","Trait definitions of appropriate Writers and Buffers for use with this library."],[8,"IrcWrite","irc::client::data::kinds","Trait describing all possible Writers for this library."],[8,"IrcRead","","Trait describing all possible Readers for this library."],[0,"command","irc::client::data","Enumeration of all available client commands."],[4,"Command","irc::client::data::command","List of all client commands as defined in [RFC 2812](http://tools.ietf.org/html/rfc2812). This\nalso includes commands from the\n[capabilities extension](https://tools.ietf.org/html/draft-mitchell-irc-capabilities-01).\nAdditionally, this includes some common additional commands from popular IRCds."],[13,"PASS","","PASS :password",2],[13,"NICK","","NICK :nickname",2],[13,"USER","","USER user mode * :realname",2],[13,"OPER","","OPER name :password",2],[13,"MODE","","MODE nickname modes\nMODE channel modes [modeparams]",2],[13,"SERVICE","","SERVICE nickname reserved distribution type reserved :info",2],[13,"QUIT","","QUIT :comment",2],[13,"SQUIT","","SQUIT server :comment",2],[13,"JOIN","","JOIN chanlist [chankeys]",2],[13,"PART","","PART chanlist :[comment]",2],[13,"TOPIC","","TOPIC channel :[topic]",2],[13,"NAMES","","NAMES [chanlist :[target]]",2],[13,"LIST","","LIST [chanlist :[target]]",2],[13,"INVITE","","INVITE nickname channel",2],[13,"KICK","","KICK chanlist userlist :[comment]",2],[13,"PRIVMSG","","PRIVMSG msgtarget :message",2],[13,"NOTICE","","NOTICE msgtarget :message",2],[13,"MOTD","","MOTD :[target]",2],[13,"LUSERS","","LUSERS [mask :[target]]",2],[13,"VERSION","","VERSION :[target]",2],[13,"STATS","","STATS [query :[target]]",2],[13,"LINKS","","LINKS [[remote server] server :mask]",2],[13,"TIME","","TIME :[target]",2],[13,"CONNECT","","CONNECT target server port :[remote server]",2],[13,"TRACE","","TRACE :[target]",2],[13,"ADMIN","","ADMIN :[target]",2],[13,"INFO","","INFO :[target]",2],[13,"SERVLIST","","SERVLIST [mask :[type]]",2],[13,"SQUERY","","SQUERY servicename text",2],[13,"WHO","","WHO [mask [\"o\"]]",2],[13,"WHOIS","","WHOIS [target] masklist",2],[13,"WHOWAS","","WHOWAS nicklist [count :[target]]",2],[13,"KILL","","KILL nickname :comment",2],[13,"PING","","PING server1 :[server2]",2],[13,"PONG","","PONG server :[server2]",2],[13,"ERROR","","ERROR :message",2],[13,"AWAY","","AWAY :[message]",2],[13,"REHASH","","REHASH",2],[13,"DIE","","DIE",2],[13,"RESTART","","RESTART",2],[13,"SUMMON","","SUMMON user [target :[channel]]",2],[13,"USERS","","USERS :[target]",2],[13,"WALLOPS","","WALLOPS :Text to be sent",2],[13,"USERHOST","","USERHOST space-separated nicklist",2],[13,"ISON","","ISON space-separated nicklist",2],[13,"SAJOIN","","SAJOIN nickname channel",2],[13,"SAMODE","","SAMODE target modes [modeparams]",2],[13,"SANICK","","SANICK old nickname new nickname",2],[13,"SAPART","","SAPART nickname :comment",2],[13,"SAQUIT","","SAQUIT nickname :comment",2],[13,"NICKSERV","","NICKSERV message",2],[13,"CHANSERV","","CHANSERV message",2],[13,"OPERSERV","","OPERSERV message",2],[13,"BOTSERV","","BOTSERV message",2],[13,"HOSTSERV","","HOSTSERV message",2],[13,"MEMOSERV","","MEMOSERV message",2],[4,"CapSubCommand","","A list of all of the subcommands for the capabilities extension."],[13,"LS","","Requests a list of the server's capabilities.",3],[13,"LIST","","Requests a list of the server's capabilities.",3],[13,"REQ","","Requests specific capabilities blindly.",3],[13,"ACK","","Acknowledges capabilities.",3],[13,"NAK","","Does not acknowledge certain capabilities.",3],[13,"CLEAR","","Requests that the server clears the capabilities of this client.",3],[13,"END","","Ends the capability negotiation before registration.",3],[11,"eq","","",2],[11,"ne","","",2],[11,"fmt","","",2],[11,"to_message","","Converts a Command into a Message.",2],[11,"from_message","","Converts a Message into a Command.",2],[11,"from_message_io","","Converts a potential Message result into a potential Command result.",2],[11,"eq","","",3],[11,"ne","","",3],[11,"fmt","","",3],[11,"to_str","","Gets the string that corresponds to this subcommand.",3],[6,"Err","",""],[11,"from_str","","",3],[0,"config","irc::client::data","JSON configuration files using libserialize."],[3,"Config","irc::client::data::config","Configuration data."],[12,"owners","","A list of the owners of the bot by nickname.",4],[12,"nickname","","The bot's nickname.",4],[12,"nick_password","","The bot's NICKSERV password.",4],[12,"alt_nicks","","Alternative nicknames for the bots, if the default is taken.",4],[12,"username","","The bot's username.",4],[12,"realname","","The bot's real name.",4],[12,"server","","The server to connect to.",4],[12,"port","","The port to connect on.",4],[12,"password","","The password to connect to the server.",4],[12,"use_ssl","","Whether or not to use SSL.\nBots will automatically panic if this is enabled without SSL support.",4],[12,"encoding","","The encoding type used for this connection.\nThis is typically UTF-8, but could be something else.",4],[12,"channels","","A list of channels to join on connection.",4],[12,"umodes","","User modes to set on connect. Example: \"+RB-x\"",4],[12,"user_info","","The text that'll be sent in response to CTCP USERINFO requests.",4],[12,"options","","A map of additional options to be stored in config.",4],[11,"fmt","","",4],[11,"eq","","",4],[11,"ne","","",4],[11,"default","","",4],[11,"decode","","",4],[11,"clone","","",4],[11,"load","","Loads a JSON configuration from the desired path.",4],[11,"load_utf8","","Loads a JSON configuration using the string as a UTF-8 path.",4],[11,"is_owner","","Determines whether or not the nickname provided is the owner of the bot.",4],[11,"nickname","","Gets the nickname specified in the configuration.\nThis will panic if not specified.",4],[11,"nick_password","","Gets the bot's nickserv password specified in the configuration.\nThis defaults to an empty string when not specified.",4],[11,"get_alternate_nicknames","","Gets the alternate nicknames specified in the configuration.\nThis defaults to an empty vector when not specified.",4],[11,"username","","Gets the username specified in the configuration.\nThis defaults to the user's nickname when not specified.",4],[11,"real_name","","Gets the real name specified in the configuration.\nThis defaults to the user's nickname when not specified.",4],[11,"server","","Gets the address of the server specified in the configuration.\nThis panics when not specified.",4],[11,"port","","Gets the port of the server specified in the configuration.\nThis defaults to 6667 (or 6697 if use_ssl is specified as true) when not specified.",4],[11,"password","","Gets the server password specified in the configuration.\nThis defaults to a blank string when not specified.",4],[11,"use_ssl","","Gets whether or not to use SSL with this connection.\nThis defaults to false when not specified.",4],[11,"encoding","","Gets the encoding to use for this connection. This requires the encode feature to work.\nThis defaults to UTF-8 when not specified.",4],[11,"channels","","Gets the channels to join upon connection.\nThis defaults to an empty vector if it's not specified.",4],[11,"umodes","","Gets the user modes to set on connect specified in the configuration.\nThis defaults to an empty string when not specified.",4],[11,"user_info","","Gets the string to be sent in response to CTCP USERINFO requests.\nThis defaults to an empty string when not specified.",4],[11,"get_option","","Looks up the specified string in the options map.\nThis uses indexing, and thus panics when the string is not present.\nThis will also panic if used and there are no options.",4],[0,"message","irc::client::data","Messages to and from the server."],[3,"Message","irc::client::data::message","IRC Message data."],[12,"prefix","","The message prefix (or source) as defined by [RFC 2812](http://tools.ietf.org/html/rfc2812).",5],[12,"command","","The IRC command as defined by [RFC 2812](http://tools.ietf.org/html/rfc2812).",5],[12,"args","","The command arguments.",5],[12,"suffix","","The message suffix as defined by [RFC 2812](http://tools.ietf.org/html/rfc2812).\nThis is the only part of the message that is allowed to contain spaces.",5],[8,"ToMessage","","A trait representing the ability to be converted into a Message."],[10,"to_message","","Converts this to a Message.",6],[11,"fmt","","",5],[11,"eq","","",5],[11,"ne","","",5],[11,"clone","","",5],[11,"new","","Creates a new Message.",5],[11,"get_source_nickname","","Gets the nickname of the message source, if it exists.",5],[11,"into_string","","Converts a Message into a String according to the IRC protocol.",5],[11,"to_message","","",5],[6,"Err","",""],[11,"from_str","","",5],[0,"response","irc::client::data","Enumeration of all the possible server responses."],[4,"Response","irc::client::data::response","List of all server responses as defined in [RFC 2812](http://tools.ietf.org/html/rfc2812).\nAll commands are documented with their expected form from the RFC."],[13,"RPL_WELCOME","","001 Welcome to the Internet Relay Network <nick>!<user>@<host>",7],[13,"RPL_YOURHOST","","002 Your host is <servername>, running version <ver>",7],[13,"RPL_CREATED","","003 This server was created <date>",7],[13,"RPL_MYINFO","","004 <servername> <version> <available user modes> available channel modes>",7],[13,"RPL_BOUNCE","","005 Try server <server name>, port <port number>",7],[13,"RPL_USERHOST","","302 :*1<reply> *( \" \" <reply> )",7],[13,"RPL_ISON","","303 :*1<nick> *( \" \" <nick> )",7],[13,"RPL_AWAY","","301 <nick> :<away message>",7],[13,"RPL_UNAWAY","","305 :You are no longer marked as being away",7],[13,"RPL_NOWAWAY","","306 :You have been marked as being away",7],[13,"RPL_WHOISUSER","","311 <nick> <user> <host> * :<real name>",7],[13,"RPL_WHOISSERVER","","312 <nick> <server> :<server info>",7],[13,"RPL_WHOISOPERATOR","","313 <nick> :is an IRC operator",7],[13,"RPL_WHOISIDLE","","317 <nick> <integer> :seconds idle",7],[13,"RPL_ENDOFWHOIS","","318 <nick> :End of WHOIS list",7],[13,"RPL_WHOISCHANNELS","","319 <nick> :*( ( \"@\" / \"+\" ) <channel> \" \" )",7],[13,"RPL_WHOWASUSER","","314 <nick> <user> <host> * :<real name>",7],[13,"RPL_ENDOFWHOWAS","","369 <nick> :End of WHOWAS",7],[13,"RPL_LISTSTART","","Obsolete. Not used.",7],[13,"RPL_LIST","","322 <channel> <# visible> :<topic>",7],[13,"RPL_LISTEND","","323 :End of LIST",7],[13,"RPL_UNIQOPIS","","325 <channel> <nickname>",7],[13,"RPL_CHANNELMODEIS","","324 <channel> <mode> <mode params>",7],[13,"RPL_NOTOPIC","","331 <channel> :No topic is set",7],[13,"RPL_TOPIC","","332 <channel> :<topic>",7],[13,"RPL_INVITING","","341 <channel> <nick>",7],[13,"RPL_SUMMONING","","342 <user> :Summoning user to IRC",7],[13,"RPL_INVITELIST","","346 <channel> <invitemask>",7],[13,"RPL_ENDOFINVITELIST","","347 <channel> :End of channel invite list",7],[13,"RPL_EXCEPTLIST","","348 <channel> <exceptionmask>",7],[13,"RPL_ENDOFEXECPTLIST","","349 <channel> :End of channel exception list",7],[13,"RPL_VERSION","","351 <version>.<debuglevel> <server> :<comments>",7],[13,"RPL_WHOREPLY","","352 <channel> <user> <host> <server> <nick> ( \"H\" / \"G\" > [\"*\"] [ ( \"@\" / \"+\" ) ]\n:<hopcount> <real name>",7],[13,"RPL_ENDOFWHO","","315 <name> :End of WHO list",7],[13,"RPL_NAMREPLY","","353 ( \"=\" / \"*\" / \"@\" ) <channel> :[ \"@\" / \"+\" ] <nick> *( \" \" [ \"@\" / \"+\" ] <nick> )",7],[13,"RPL_ENDOFNAMES","","366 <channel> :End of NAMES list",7],[13,"RPL_LINKS","","364 <mask> <server> :<hopcount> <server info>",7],[13,"RPL_ENDOFLINKS","","365 <mask> :End of LINKS list",7],[13,"RPL_BANLIST","","367 <channel> <banmask>",7],[13,"RPL_ENDOFBANLIST","","368 <channel> :End of channel ban list",7],[13,"RPL_INFO","","371 :<string>",7],[13,"RPL_ENDOFINFO","","374 :End of INFO list",7],[13,"RPL_MOTDSTART","","375 :- <server> Message of the day -",7],[13,"RPL_MOTD","","372 :- <text>",7],[13,"RPL_ENDOFMOTD","","376 :End of MOTD command",7],[13,"RPL_YOUREOPER","","381 :You are now an IRC operator",7],[13,"RPL_REHASHING","","382 <config file> :Rehashing",7],[13,"RPL_YOURESERVICE","","383 You are service <servicename>",7],[13,"RPL_TIME","","391 <server> :<string showing server's local time>",7],[13,"RPL_USERSSTART","","392 :UserID   Terminal  Host",7],[13,"RPL_USERS","","393 :<username> <ttyline> <hostname>",7],[13,"RPL_ENDOFUSERS","","394 :End of users",7],[13,"RPL_NOUSERS","","395 :Nobody logged in",7],[13,"RPL_TRACELINK","","200 Link <version & debug level> <destination> <next server> V<protocol version>\n<link uptime in seconds> <backstream sendq> <upstream sendq>",7],[13,"RPL_TRACECONNECTING","","201 Try. <class> <server>",7],[13,"RPL_TRACEHANDSHAKE","","202 H.S. <class> <server>",7],[13,"RPL_TRACEUKNOWN","","203 ???? <class> [<client IP address in dot form>]",7],[13,"RPL_TRACEOPERATOR","","204 Oper <class> <nick>",7],[13,"RPL_TRACEUSER","","205 User <class> <nick>",7],[13,"RPL_TRACESERVER","","206 Serv <class> <int>S <int>C <server> <nick!user|*!*>@<host|server> V<protocol version>",7],[13,"RPL_TRACESERVICE","","207 Service <class> <name> <type> <active type>",7],[13,"RPL_TRACENEWTYPE","","208 <newtype> 0 <client name>",7],[13,"RPL_TRACECLASS","","209 Class <class> <count>",7],[13,"RPL_TRACERECONNECT","","Unused.",7],[13,"RPL_TRACELOG","","261 File <logfile> <debug level>",7],[13,"RPL_TRACEEND","","262 <server name> <version & debug level> :End of TRACE",7],[13,"RPL_STATSLINKINFO","","211 <linkname> <sendq> <sent messages> <sent Kbytes> <received messages> <received Kbytes>\n<time open>",7],[13,"RPL_STATSCOMMANDS","","212 <command> <count> <byte count> <remote count>",7],[13,"RPL_ENDOFSTATS","","219 <stats letter> :End of STATS report",7],[13,"RPL_STATSUPTIME","","242 :Server Up %d days %d:%02d:%02d",7],[13,"RPL_STATSOLINE","","O <hostmask> * <name>",7],[13,"RPL_UMODEIS","","221 <user mode string>",7],[13,"RPL_SERVLIST","","234 <name> <server> <mask> <type> <hopcount> <info>",7],[13,"RPL_SERVLISTEND","","235 <mask> <type> :End of service listing",7],[13,"RPL_LUSERCLIENT","","251 :There are <integer> users and <integer> services on <integer> servers",7],[13,"RPL_LUSEROP","","252 <integer> :operator(s) online",7],[13,"RPL_LUSERUNKNOWN","","253 <integer> :unknown connection(s)",7],[13,"RPL_LUSERCHANNELS","","254 <integer> :channels formed",7],[13,"RPL_LUSERME","","255 :I have <integer> clients and <integer> servers",7],[13,"RPL_ADMINME","","256 <server> :Administrative info",7],[13,"RPL_ADMINLOC1","","257 :<admin info>",7],[13,"RPL_ADMINLOC2","","258 :<admin info>",7],[13,"RPL_ADMINEMAIL","","259 :<admin info>",7],[13,"RPL_TRYAGAIN","","263 <command> :Please wait a while and try again.",7],[13,"ERR_NOSUCHNICK","","401 <nickname> :No such nick/channel",7],[13,"ERR_NOSUCHSERVER","","402 <server name> :No such server",7],[13,"ERR_NOSUCHCHANNEL","","403 <channel name> :No such channel",7],[13,"ERR_CANNOTSENDTOCHAN","","404 <channel name> :Cannot send to channel",7],[13,"ERR_TOOMANYCHANNELS","","405 <channel name> :You have joined too many channels",7],[13,"ERR_WASNOSUCHNICK","","406 <nickname> :There was no such nickname",7],[13,"ERR_TOOMANYTARGETS","","407 <target> :<error code> recipients. <abort message>",7],[13,"ERR_NOSUCHSERVICE","","408 <service name> :No such service",7],[13,"ERR_NOORIGIN","","409 :No origin specified",7],[13,"ERR_NORECIPIENT","","411 :No recipient given (<command>)",7],[13,"ERR_NOTEXTTOSEND","","412 :No text to send",7],[13,"ERR_NOTOPLEVEL","","413 <mask> :No toplevel domain specified",7],[13,"ERR_WILDTOPLEVEL","","414 <mask> :Wildcard in toplevel domain",7],[13,"ERR_BADMASK","","415 <mask> :Bad Server/host mask",7],[13,"ERR_UNKNOWNCOMMAND","","421 <command> :Unknown command",7],[13,"ERR_NOMOTD","","422 :MOTD File is missing",7],[13,"ERR_NOADMININFO","","423 <server> :No administrative info available",7],[13,"ERR_FILEERROR","","424 :File error doing <file op> on <file>",7],[13,"ERR_NONICKNAMEGIVEN","","431 :No nickname given",7],[13,"ERR_ERRONEOUSNICKNAME","","432 <nick> :Erroneous nickname\"",7],[13,"ERR_NICKNAMEINUSE","","433 <nick> :Nickname is already in use",7],[13,"ERR_NICKCOLLISION","","436 <nick> :Nickname collision KILL from <user>@<host>",7],[13,"ERR_UNAVAILRESOURCE","","437 <nick/channel> :Nick/channel is temporarily unavailable",7],[13,"ERR_USERNOTINCHANNEL","","441 <nick> <channel> :They aren't on that channel",7],[13,"ERR_NOTONCHANNEL","","442 <channel> :You're not on that channel",7],[13,"ERR_USERONCHANNEL","","443 <user> <channel> :is already on channel",7],[13,"ERR_NOLOGIN","","444 <user> :User not logged in",7],[13,"ERR_SUMMONDISABLED","","445 :SUMMON has been disabled",7],[13,"ERR_USERSDISABLED","","446 :USERS has been disabled",7],[13,"ERR_NOTREGISTERED","","451 :You have not registered",7],[13,"ERR_NEEDMOREPARAMS","","461 <command> :Not enough parameters",7],[13,"ERR_ALREADYREGISTRED","","462 :Unauthorized command (already registered)",7],[13,"ERR_NOPERMFORHOST","","463 :Your host isn't among the privileged",7],[13,"ERR_PASSWDMISMATCH","","464 :Password incorrect",7],[13,"ERR_YOUREBANNEDCREEP","","465 :You are banned from this server",7],[13,"ERR_YOUWILLBEBANNED","","466",7],[13,"ERR_KEYSET","","467 <channel> :Channel key already set",7],[13,"ERR_CHANNELISFULL","","471 <channel> :Cannot join channel (+l)",7],[13,"ERR_UNKNOWNMODE","","472 <char> :is unknown mode char to me for <channel>",7],[13,"ERR_INVITEONLYCHAN","","473 <channel> :Cannot join channel (+i)",7],[13,"ERR_BANNEDFROMCHAN","","474 <channel> :Cannot join channel (+b)",7],[13,"ERR_BADCHANNELKEY","","475 <channel> :Cannot join channel (+k)",7],[13,"ERR_BADCHANMASK","","476 <channel> :Bad Channel Mask",7],[13,"ERR_NOCHANMODES","","477 <channel> :Channel doesn't support modes",7],[13,"ERR_BANLISTFULL","","478 <channel> <char> :Channel list is full",7],[13,"ERR_NOPRIVILEGES","","481 :Permission Denied- You're not an IRC operator",7],[13,"ERR_CHANOPRIVSNEEDED","","482 <channel> :You're not channel operator",7],[13,"ERR_CANTKILLSERVER","","483 :You can't kill a server!",7],[13,"ERR_RESTRICTED","","484 :Your connection is restricted!",7],[13,"ERR_UNIQOPPRIVSNEEDED","","485 :You're not the original channel operator",7],[13,"ERR_NOOPERHOST","","491 :No O-lines for your host",7],[13,"ERR_UMODEUNKNOWNFLAG","","501 :Unknown MODE flag",7],[13,"ERR_USERSDONTMATCH","","502 :Cannot change mode for other users",7],[11,"from_i64","","",7],[11,"from_u64","","",7],[11,"eq","","",7],[11,"ne","","",7],[11,"fmt","","",7],[11,"from_message","","Gets a response from a message.",7],[11,"is_error","","Determines whether or not this response is an error response.",7],[6,"Err","",""],[11,"from_str","","",7],[0,"user","irc::client::data","Data for tracking user information."],[3,"User","irc::client::data::user","IRC User data."],[4,"AccessLevel","","The user's access level."],[13,"Owner","","The channel owner (~).",8],[13,"Admin","","A channel administrator (&).",8],[13,"Oper","","A channel operator (@),",8],[13,"HalfOp","","A channel half-oper (%),",8],[13,"Voice","","A user with voice (+),",8],[13,"Member","","A normal user,",8],[11,"fmt","","",9],[11,"clone","","",9],[11,"new","","Creates a new User.",9],[11,"get_name","","Gets the nickname of the user.",9],[11,"highest_access_level","","Gets the user's highest access level.",9],[11,"access_levels","","Gets all the user's access levels.",9],[11,"update_access_level","","Updates the user's access level.",9],[11,"eq","","",9],[11,"fmt","","",8],[11,"clone","","",8],[11,"eq","","",8],[11,"ne","","",8],[11,"partial_cmp","","",8],[6,"Err","",""],[11,"from_str","","",8],[0,"server","irc::client","Interface for working with IRC Servers."],[3,"IrcServer","irc::client::server","A thread-safe implementation of an IRC Server connection."],[3,"ServerIterator","","An Iterator over an IrcServer's incoming Messages."],[0,"utils","","Utilities and shortcuts for working with IRC servers."],[8,"ServerExt","irc::client::server::utils","Extensions for Server capabilities that make it easier to work directly with the protocol."],[11,"identify","","Sends a NICK and USER to identify.",10],[11,"send_pong","","Sends a PONG with the specified message.",10],[11,"send_join","","Joins the specified channel or chanlist.",10],[11,"send_oper","","Attempts to oper up using the specified username and password.",10],[11,"send_privmsg","","Sends a message to the specified target.",10],[11,"send_notice","","Sends a notice to the specified target.",10],[11,"send_topic","","Sets the topic of a channel or requests the current one.\nIf `topic` is an empty string, it won't be included in the message.",10],[11,"send_kill","","Kills the target with the provided message.",10],[11,"send_kick","","Kicks the listed nicknames from the listed channels with a comment.\nIf `message` is an empty string, it won't be included in the message.",10],[11,"send_mode","","Changes the mode of the target.\nIf `modeparmas` is an empty string, it won't be included in the message.",10],[11,"send_samode","","Changes the mode of the target by force.\nIf `modeparams` is an empty string, it won't be included in the message.",10],[11,"send_sanick","","Forces a user to change from the old nickname to the new nickname.",10],[11,"send_invite","","Invites a user to the specified channel.",10],[11,"send_quit","","Quits the server entirely with a message.\nThis defaults to `Powered by Rust.` if none is specified.",10],[11,"send_ctcp","","Sends a CTCP-escaped message to the specified target.\nThis requires the CTCP feature to be enabled.",10],[11,"send_action","","Sends an action command to the specified target.\nThis requires the CTCP feature to be enabled.",10],[11,"send_finger","","Sends a finger request to the specified target.\nThis requires the CTCP feature to be enabled.",10],[11,"send_version","","Sends a version request to the specified target.\nThis requires the CTCP feature to be enabled.",10],[11,"send_source","","Sends a source request to the specified target.\nThis requires the CTCP feature to be enabled.",10],[11,"send_user_info","","Sends a user info request to the specified target.\nThis requires the CTCP feature to be enabled.",10],[11,"send_ctcp_ping","","Sends a finger request to the specified target.\nThis requires the CTCP feature to be enabled.",10],[11,"send_time","","Sends a time request to the specified target.\nThis requires the CTCP feature to be enabled.",10],[6,"NetIrcServer","irc::client::server","An IrcServer over a buffered NetStream."],[6,"ServerCmdIterator","","An Iterator over an IrcServer's incoming Commands."],[8,"Server","","Trait describing core Server functionality."],[10,"config","","Gets the configuration being used with this Server.",11],[10,"send","","Sends a Command to this Server.",11],[10,"iter","","Gets an Iterator over Messages received by this Server.",11],[10,"iter_cmd","","Gets an Iterator over Commands received by this Server.",11],[10,"list_users","","Gets a list of Users in the specified channel. This will be none if the channel is not\nbeing tracked, or if tracking is not supported altogether.",11],[11,"new","","Creates a new IRC Server connection from the configuration at the specified path,\nconnecting immediately.",12],[11,"from_config","","Creates a new IRC server connection from the specified configuration, connecting\nimmediately.",12],[11,"reconnect","","Reconnects to the IRC server.",12],[11,"config","","",12],[11,"send","","",12],[11,"iter","","",12],[11,"iter_cmd","","",12],[11,"list_users","","",12],[11,"from_connection","","Creates an IRC server from the specified configuration, and any arbitrary Connection.",12],[11,"conn","","Gets a reference to the IRC server's connection.",12],[11,"new","","Creates a new ServerIterator for the desired IrcServer.",13],[6,"Item","",""],[11,"next","","",13],[0,"prelude","irc::client","A client-side IRC prelude, re-exporting all the necessary basics."],[0,"server","irc","A simple, thread-safe IRC server library."]],"paths":[[4,"NetStream"],[3,"Connection"],[4,"Command"],[4,"CapSubCommand"],[3,"Config"],[3,"Message"],[8,"ToMessage"],[4,"Response"],[4,"AccessLevel"],[3,"User"],[8,"ServerExt"],[8,"Server"],[3,"IrcServer"],[3,"ServerIterator"]]};
searchIndex['rustc-serialize'] = {"items":[[0,"","rustc-serialize","Support code for encoding and decoding types."],[11,"encode","collections::string","",0],[11,"decode","","",0],[11,"encode","alloc::boxed","",1],[11,"decode","","",1],[11,"decode","","",1],[11,"encode","alloc::rc","",2],[11,"decode","","",2],[11,"encode","collections::vec","",3],[11,"decode","","",3],[11,"encode","core::option","",4],[11,"decode","","",4],[11,"encode","std::old_path::posix","",5],[11,"decode","","",5],[11,"encode","std::old_path::windows","",6],[11,"decode","","",6],[11,"encode","std::path","",7],[11,"encode","","",8],[11,"decode","","",8],[11,"encode","core::cell","",9],[11,"decode","","",9],[11,"encode","","",10],[11,"decode","","",10],[11,"encode","alloc::arc","",11],[11,"decode","","",11],[11,"encode","collections::linked_list","",12],[11,"decode","","",12],[11,"encode","collections::vec_deque","",13],[11,"decode","","",13],[11,"encode","collections::btree::map","",14],[11,"decode","","",14],[11,"encode","collections::btree::set","",15],[11,"decode","","",15],[11,"encode","std::collections::hash::map","",16],[11,"decode","","",16],[11,"encode","std::collections::hash::set","",17],[11,"decode","","",17],[11,"encode","collections::vec_map","",18],[11,"decode","","",18],[0,"base64","rustc-serialize","Base64 binary-to-text encoding"],[3,"Config","rustc-serialize::base64","Contains configuration parameters for `to_base64`."],[12,"char_set","","Character set to use",19],[12,"newline","","Newline to use",19],[12,"pad","","True to pad output with `=` characters",19],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",19],[4,"CharacterSet","","Available encoding character sets"],[13,"Standard","","The standard character set (uses `+` and `/`)",20],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",20],[4,"Newline","","Available newline types"],[13,"LF","","A linefeed (i.e. Unix-style newline)",21],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",21],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string"],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",22],[13,"InvalidBase64Length","","The input had an invalid length",22],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding"],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding"],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding"],[8,"ToBase64","","A trait for converting a value to base64 encoding."],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",23],[8,"FromBase64","","A trait for converting from base64 encoded values."],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",24],[11,"fmt","","",22],[11,"description","","",22],[11,"fmt","","",22],[0,"hex","rustc-serialize","Hex binary-to-text encoding"],[4,"FromHexError","rustc-serialize::hex","Errors that can occur when decoding a hex encoded string"],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",25],[13,"InvalidHexLength","","The input had an invalid length",25],[8,"ToHex","","A trait for converting a value to hexadecimal encoding"],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",26],[8,"FromHex","","A trait for converting hexadecimal encoded values"],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",27],[11,"fmt","","",25],[11,"description","","",25],[11,"fmt","","",25],[0,"json","rustc-serialize","JSON parsing and serialization"],[3,"PrettyJson","rustc-serialize::json",""],[3,"AsJson","",""],[3,"AsPrettyJson","",""],[3,"Encoder","","A structure for implementing serialization to JSON."],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x"],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char."],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure."],[3,"Decoder","","A structure to decode JSON to values in rust."],[4,"Json","","Represents a json value"],[13,"I64","","",28],[13,"U64","","",28],[13,"F64","","",28],[13,"String","","",28],[13,"Boolean","","",28],[13,"Array","","",28],[13,"Object","","",28],[13,"Null","","",28],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream."],[13,"InvalidSyntax","","",29],[13,"InvalidNumber","","",29],[13,"EOFWhileParsingObject","","",29],[13,"EOFWhileParsingArray","","",29],[13,"EOFWhileParsingValue","","",29],[13,"EOFWhileParsingString","","",29],[13,"KeyMustBeAString","","",29],[13,"ExpectedColon","","",29],[13,"TrailingCharacters","","",29],[13,"TrailingComma","","",29],[13,"InvalidEscape","","",29],[13,"InvalidUnicodeCodePoint","","",29],[13,"LoneLeadingSurrogateInHexEscape","","",29],[13,"UnexpectedEndOfHexEscape","","",29],[13,"UnrecognizedHex","","",29],[13,"NotFourDigit","","",29],[13,"NotUtf8","","",29],[4,"ParserError","",""],[13,"SyntaxError","","msg, line, col",30],[13,"IoError","","",30],[4,"DecoderError","",""],[13,"ParseError","","",31],[13,"ExpectedError","","",31],[13,"MissingFieldError","","",31],[13,"UnknownVariantError","","",31],[13,"ApplicationError","","",31],[4,"EncoderError","",""],[13,"FmtError","","",32],[13,"BadHashmapKey","","",32],[4,"JsonEvent","","The output of the streaming parser."],[13,"ObjectStart","","",33],[13,"ObjectEnd","","",33],[13,"ArrayStart","","",33],[13,"ArrayEnd","","",33],[13,"BooleanValue","","",33],[13,"I64Value","","",33],[13,"U64Value","","",33],[13,"F64Value","","",33],[13,"StringValue","","",33],[13,"NullValue","","",33],[13,"Error","","",33],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x"],[13,"Index","","",34],[13,"Key","","",34],[5,"error_str","","Returns a readable error string for a given error code."],[5,"decode","","Shortcut function to decode a JSON `&str` into an object"],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`"],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`"],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`"],[6,"Array","",""],[6,"Object","",""],[6,"BuilderError","",""],[6,"EncodeResult","",""],[6,"DecodeResult","",""],[8,"ToJson","","A trait for converting values to JSON"],[10,"to_json","","Converts the value of `self` to an instance of JSON",35],[11,"fmt","","",28],[11,"partial_cmp","","",28],[11,"lt","","",28],[11,"le","","",28],[11,"gt","","",28],[11,"ge","","",28],[11,"eq","","",28],[11,"ne","","",28],[11,"clone","","",28],[11,"eq","","",29],[11,"ne","","",29],[11,"clone","","",29],[11,"fmt","","",30],[11,"eq","","",30],[11,"ne","","",30],[11,"clone","","",30],[11,"fmt","","",31],[11,"eq","","",31],[11,"ne","","",31],[11,"clone","","",31],[11,"fmt","","",32],[11,"fmt","","",29],[11,"description","","",31],[11,"cause","","",31],[11,"fmt","","",31],[11,"description","","",30],[11,"fmt","","",30],[11,"description","","",32],[11,"fmt","","",32],[11,"from_error","","",32],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",36],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",36],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",36],[6,"Error","",""],[11,"emit_nil","","",36],[11,"emit_usize","","",36],[11,"emit_u64","","",36],[11,"emit_u32","","",36],[11,"emit_u16","","",36],[11,"emit_u8","","",36],[11,"emit_isize","","",36],[11,"emit_i64","","",36],[11,"emit_i32","","",36],[11,"emit_i16","","",36],[11,"emit_i8","","",36],[11,"emit_bool","","",36],[11,"emit_f64","","",36],[11,"emit_f32","","",36],[11,"emit_char","","",36],[11,"emit_str","","",36],[11,"emit_enum","","",36],[11,"emit_enum_variant","","",36],[11,"emit_enum_variant_arg","","",36],[11,"emit_enum_struct_variant","","",36],[11,"emit_enum_struct_variant_field","","",36],[11,"emit_struct","","",36],[11,"emit_struct_field","","",36],[11,"emit_tuple","","",36],[11,"emit_tuple_arg","","",36],[11,"emit_tuple_struct","","",36],[11,"emit_tuple_struct_arg","","",36],[11,"emit_option","","",36],[11,"emit_option_none","","",36],[11,"emit_option_some","","",36],[11,"emit_seq","","",36],[11,"emit_seq_elt","","",36],[11,"emit_map","","",36],[11,"emit_map_elt_key","","",36],[11,"emit_map_elt_val","","",36],[11,"encode","","",28],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",28],[11,"from_str","","Decodes a json value from a string",28],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",28],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",28],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",28],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",28],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",28],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",28],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",28],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",28],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",28],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",28],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",28],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",28],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",28],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",28],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",28],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",28],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",28],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",28],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",28],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",28],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",28],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",28],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",28],[6,"Output","",""],[11,"index","","",28],[6,"Output","",""],[11,"index","","",28],[11,"fmt","","",33],[11,"clone","","",33],[11,"eq","","",33],[11,"ne","","",33],[11,"fmt","","",34],[11,"clone","","",34],[11,"eq","","",34],[11,"ne","","",34],[11,"new","","",37],[11,"len","","Returns The number of elements in the Stack.",37],[11,"is_empty","","Returns true if the stack is empty.",37],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",37],[11,"is_equal_to","","Compares this stack with an array of StackElements.",37],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",37],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",37],[11,"top","","Returns the top-most element (if any).",37],[6,"Item","",""],[11,"next","","",38],[11,"new","","Creates the JSON parser.",38],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",38],[11,"new","","Create a JSON Builder.",39],[11,"build","","",39],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",40],[6,"Error","",""],[11,"read_nil","","",40],[11,"read_usize","","",40],[11,"read_u8","","",40],[11,"read_u16","","",40],[11,"read_u32","","",40],[11,"read_u64","","",40],[11,"read_isize","","",40],[11,"read_i8","","",40],[11,"read_i16","","",40],[11,"read_i32","","",40],[11,"read_i64","","",40],[11,"read_f32","","",40],[11,"read_f64","","",40],[11,"read_bool","","",40],[11,"read_char","","",40],[11,"read_str","","",40],[11,"read_enum","","",40],[11,"read_enum_variant","","",40],[11,"read_enum_variant_arg","","",40],[11,"read_enum_struct_variant","","",40],[11,"read_enum_struct_variant_field","","",40],[11,"read_struct","","",40],[11,"read_struct_field","","",40],[11,"read_tuple","","",40],[11,"read_tuple_arg","","",40],[11,"read_tuple_struct","","",40],[11,"read_tuple_struct_arg","","",40],[11,"read_option","","",40],[11,"read_seq","","",40],[11,"read_seq_elt","","",40],[11,"read_map","","",40],[11,"read_map_elt_key","","",40],[11,"read_map_elt_val","","",40],[11,"error","","",40],[11,"to_json","","",28],[11,"to_json","collections::string","",0],[11,"to_json","collections::vec","",3],[11,"to_json","collections::btree::map","",14],[11,"to_json","std::collections::hash::map","",16],[11,"to_json","core::option","",4],[11,"fmt","rustc-serialize::json","Encodes a json value into a string",28],[11,"fmt","","Encodes a json value into a string",41],[11,"fmt","","Encodes a json value into a string",42],[11,"indent","","Set the indentation level for the emitted JSON",43],[11,"fmt","","Encodes a json value into a string",43],[6,"Err","",""],[11,"from_str","","",28],[11,"encode","collections::string","",0],[11,"decode","","",0],[11,"encode","alloc::boxed","",1],[11,"decode","","",1],[11,"decode","","",1],[11,"encode","alloc::rc","",2],[11,"decode","","",2],[11,"encode","collections::vec","",3],[11,"decode","","",3],[11,"encode","core::option","",4],[11,"decode","","",4],[11,"encode","std::old_path::posix","",5],[11,"decode","","",5],[11,"encode","std::old_path::windows","",6],[11,"decode","","",6],[11,"encode","std::path","",7],[11,"encode","","",8],[11,"decode","","",8],[11,"encode","core::cell","",9],[11,"decode","","",9],[11,"encode","","",10],[11,"decode","","",10],[11,"encode","alloc::arc","",11],[11,"decode","","",11],[8,"Decoder","rustc-serialize",""],[16,"Error","rustc-serialize::Decoder",""],[10,"read_nil","rustc-serialize","",44],[10,"read_usize","","",44],[10,"read_u64","","",44],[10,"read_u32","","",44],[10,"read_u16","","",44],[10,"read_u8","","",44],[10,"read_isize","","",44],[10,"read_i64","","",44],[10,"read_i32","","",44],[10,"read_i16","","",44],[10,"read_i8","","",44],[10,"read_bool","","",44],[10,"read_f64","","",44],[10,"read_f32","","",44],[10,"read_char","","",44],[10,"read_str","","",44],[10,"read_enum","","",44],[10,"read_enum_variant","","",44],[10,"read_enum_variant_arg","","",44],[10,"read_enum_struct_variant","","",44],[10,"read_enum_struct_variant_field","","",44],[10,"read_struct","","",44],[10,"read_struct_field","","",44],[10,"read_tuple","","",44],[10,"read_tuple_arg","","",44],[10,"read_tuple_struct","","",44],[10,"read_tuple_struct_arg","","",44],[10,"read_option","","",44],[10,"read_seq","","",44],[10,"read_seq_elt","","",44],[10,"read_map","","",44],[10,"read_map_elt_key","","",44],[10,"read_map_elt_val","","",44],[10,"error","","",44],[8,"Encoder","",""],[16,"Error","rustc-serialize::Encoder",""],[10,"emit_nil","rustc-serialize","",45],[10,"emit_usize","","",45],[10,"emit_u64","","",45],[10,"emit_u32","","",45],[10,"emit_u16","","",45],[10,"emit_u8","","",45],[10,"emit_isize","","",45],[10,"emit_i64","","",45],[10,"emit_i32","","",45],[10,"emit_i16","","",45],[10,"emit_i8","","",45],[10,"emit_bool","","",45],[10,"emit_f64","","",45],[10,"emit_f32","","",45],[10,"emit_char","","",45],[10,"emit_str","","",45],[10,"emit_enum","","",45],[10,"emit_enum_variant","","",45],[10,"emit_enum_variant_arg","","",45],[10,"emit_enum_struct_variant","","",45],[10,"emit_enum_struct_variant_field","","",45],[10,"emit_struct","","",45],[10,"emit_struct_field","","",45],[10,"emit_tuple","","",45],[10,"emit_tuple_arg","","",45],[10,"emit_tuple_struct","","",45],[10,"emit_tuple_struct_arg","","",45],[10,"emit_option","","",45],[10,"emit_option_none","","",45],[10,"emit_option_some","","",45],[10,"emit_seq","","",45],[10,"emit_seq_elt","","",45],[10,"emit_map","","",45],[10,"emit_map_elt_key","","",45],[10,"emit_map_elt_val","","",45],[8,"Decodable","",""],[10,"decode","","",46],[8,"Encodable","",""],[10,"encode","","",47],[8,"DecoderHelpers","",""],[10,"read_to_vec","","",48],[8,"EncoderHelpers","",""],[10,"emit_from_vec","","",49]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[3,"Vec"],[4,"Option"],[3,"Path"],[3,"Path"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"VecMap"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};

searchIndex['openssl'] = {"items":[[0,"","openssl",""],[0,"asn1","",""],[3,"Asn1Time","openssl::asn1",""],[11,"new","","Wraps existing ASN1_TIME and takes ownership",0],[11,"days_from_now","","Creates a new time on specified interval in days from now",0],[11,"get_handle","","Returns raw handle",0],[11,"drop","","",0],[0,"bn","openssl",""],[3,"BigNum","openssl::bn",""],[4,"RNGProperty","",""],[13,"MsbMaybeZero","","",1],[13,"MsbOne","","",1],[13,"TwoMsbOne","","",1],[0,"unchecked","",""],[6,"Output","openssl::bn::unchecked",""],[6,"Output","",""],[6,"Output","",""],[6,"Output","",""],[6,"Output","",""],[6,"Output","",""],[6,"Output","",""],[11,"clone","openssl::bn","",2],[6,"Output","openssl::bn::unchecked",""],[11,"neg","openssl::bn","",2],[11,"new","","",2],[11,"new_from","","",2],[11,"from_dec_str","","",2],[11,"from_hex_str","","",2],[11,"new_from_slice","","",2],[11,"checked_sqr","","",2],[11,"checked_nnmod","","",2],[11,"checked_mod_add","","",2],[11,"checked_mod_sub","","",2],[11,"checked_mod_mul","","",2],[11,"checked_mod_sqr","","",2],[11,"checked_exp","","",2],[11,"checked_mod_exp","","",2],[11,"checked_mod_inv","","",2],[11,"add_word","","",2],[11,"sub_word","","",2],[11,"mul_word","","",2],[11,"div_word","","",2],[11,"mod_word","","",2],[11,"checked_gcd","","",2],[11,"checked_generate_prime","","",2],[11,"is_prime","","",2],[11,"is_prime_fast","","",2],[11,"checked_new_random","","",2],[11,"checked_new_pseudo_random","","",2],[11,"checked_rand_in_range","","",2],[11,"checked_pseudo_rand_in_range","","",2],[11,"set_bit","","",2],[11,"clear_bit","","",2],[11,"is_bit_set","","",2],[11,"mask_bits","","",2],[11,"checked_shl1","","",2],[11,"checked_shr1","","",2],[11,"checked_add","","",2],[11,"checked_sub","","",2],[11,"checked_mul","","",2],[11,"checked_div","","",2],[11,"checked_mod","","",2],[11,"checked_shl","","",2],[11,"checked_shr","","",2],[11,"negate","","",2],[11,"abs_cmp","","",2],[11,"is_negative","","",2],[11,"num_bits","","",2],[11,"num_bytes","","",2],[11,"to_vec","","",2],[11,"to_dec_str","","",2],[11,"to_hex_str","","",2],[11,"fmt","","",2],[11,"eq","","",2],[11,"cmp","","",2],[11,"partial_cmp","","",2],[11,"drop","","",2],[0,"bio","openssl",""],[3,"MemBio","openssl::bio",""],[11,"drop","","",3],[11,"new","","Creates a new owned memory based BIO",3],[11,"borrowed","","Returns a \"borrow\", i.e. it has no ownership",3],[11,"unwrap","","Consumes current bio and returns wrapped value\nNote that data ownership is lost and\nshould be managed manually",3],[11,"get_handle","","Temporarily gets wrapped value",3],[11,"read","","",3],[11,"write","","",3],[11,"flush","","",3],[0,"crypto","openssl",""],[0,"hash","openssl::crypto",""],[3,"Hasher","openssl::crypto::hash","Provides message digest (hash) computation."],[4,"Type","","Message digest (hash) type."],[13,"MD5","","",4],[13,"SHA1","","",4],[13,"SHA224","","",4],[13,"SHA256","","",4],[13,"SHA384","","",4],[13,"SHA512","","",4],[13,"RIPEMD160","","",4],[5,"hash","","Computes the hash of the `data` with the hash `t`."],[11,"md_len","","Returns the length of the message digest.",4],[11,"evp_md","","Internal interface subject to removal.",4],[11,"new","","Creates a new `Hasher` with the specified hash type.",5],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",5],[11,"write","","",5],[11,"flush","","",5],[11,"clone","","",5],[11,"drop","","",5],[0,"hmac","openssl::crypto",""],[3,"HMAC","openssl::crypto::hmac","Provides HMAC computation."],[5,"hmac","","Computes the HMAC of the `data` with the hash `t` and `key`."],[11,"new","","Creates a new `HMAC` with the specified hash type using the `key`.",6],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",6],[11,"write","","",6],[11,"flush","","",6],[11,"clone","","",6],[11,"drop","","",6],[0,"pkcs5","openssl::crypto",""],[5,"pbkdf2_hmac_sha1","openssl::crypto::pkcs5","Derives a key from a password and salt using the PBKDF2-HMAC-SHA1 algorithm."],[0,"pkey","openssl::crypto",""],[3,"PKey","openssl::crypto::pkey",""],[4,"Role","","Represents a role an asymmetric key might be appropriate for."],[13,"Encrypt","","",7],[13,"Decrypt","","",7],[13,"Sign","","",7],[13,"Verify","","",7],[4,"EncryptionPadding","","Type of encryption padding to use."],[13,"OAEP","","",8],[13,"PKCS1v15","","",8],[11,"new","","",9],[11,"gen","","",9],[11,"save_pub","","Returns a serialized form of the public key, suitable for load_pub().",9],[11,"load_pub","","Loads a serialized form of the public key, as produced by save_pub().",9],[11,"save_priv","","Returns a serialized form of the public and private keys, suitable for\nload_priv().",9],[11,"load_priv","","Loads a serialized form of the public and private keys, as produced by\nsave_priv().",9],[11,"write_pem","","Stores private key as a PEM",9],[11,"size","","Returns the size of the public key modulus.",9],[11,"can","","Returns whether this pkey object can perform the specified role.",9],[11,"max_data","","Returns the maximum amount of data that can be encrypted by an encrypt()\ncall.",9],[11,"encrypt_with_padding","","",9],[11,"decrypt_with_padding","","",9],[11,"encrypt","","Encrypts data using OAEP padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",9],[11,"decrypt","","Decrypts data, expecting OAEP padding, returning the decrypted data.",9],[11,"sign","","Signs data, using OpenSSL's default scheme and sha256. Unlike encrypt(),\ncan process an arbitrary amount of data; returns the signature.",9],[11,"verify","","Verifies a signature s (using OpenSSL's default scheme and sha256) on a\nmessage m. Returns true if the signature is valid, and false otherwise.",9],[11,"sign_with_hash","","",9],[11,"verify_with_hash","","",9],[11,"get_handle","","",9],[11,"drop","","",9],[0,"rand","openssl::crypto",""],[5,"rand_bytes","openssl::crypto::rand",""],[0,"symm","openssl::crypto",""],[3,"Crypter","openssl::crypto::symm","Represents a symmetric cipher context."],[4,"Mode","",""],[13,"Encrypt","","",10],[13,"Decrypt","","",10],[4,"Type","",""],[13,"AES_128_ECB","","",11],[13,"AES_128_CBC","","",11],[13,"AES_256_ECB","","",11],[13,"AES_256_CBC","","",11],[13,"RC4_128","","",11],[5,"encrypt","","Encrypts data, using the specified crypter type in encrypt mode with the\nspecified key and iv; returns the resulting (encrypted) data."],[5,"decrypt","","Decrypts data, using the specified crypter type in decrypt mode with the\nspecified key and iv; returns the resulting (decrypted) data."],[11,"new","","",12],[11,"pad","","Enables or disables padding. If padding is disabled, total amount of\ndata encrypted must be a multiple of block size.",12],[11,"init","","Initializes this crypter.",12],[11,"update","","Update this crypter with more data to encrypt or decrypt. Returns\nencrypted or decrypted bytes.",12],[11,"finalize","","Finish crypting. Returns the remaining partial block of output, if any.",12],[11,"drop","","",12],[0,"memcmp","openssl::crypto",""],[5,"eq","openssl::crypto::memcmp","Returns `true` iff `a` and `b` contain the same bytes."],[0,"ssl","openssl",""],[3,"SslContext","openssl::ssl","An SSL context object"],[3,"Ssl","",""],[3,"SslStream","","A stream wrapper which handles SSL encryption for an underlying stream."],[4,"SslMethod","","Determines the SSL method supported"],[13,"Sslv23","","Support the SSLv2, SSLv3 and TLSv1 protocols.",13],[13,"Sslv3","","Only support the SSLv3 protocol.",13],[13,"Tlsv1","","Only support the TLSv1 protocol.",13],[4,"SslVerifyMode","","Determines the type of certificate verification used"],[13,"SslVerifyPeer","","Verify that the server's certificate is trusted",14],[13,"SslVerifyNone","","Do not verify the server's certificate",14],[4,"MaybeSslStream","","A utility type to help in cases where the use of SSL is decided at runtime."],[13,"Ssl","","A connection using SSL",15],[13,"Normal","","A connection not using SSL",15],[0,"error","",""],[4,"SslError","openssl::ssl::error","An SSL error"],[13,"StreamError","","The underlying stream reported an error",16],[13,"SslSessionClosed","","The SSL session has been closed by the other end",16],[13,"OpenSslErrors","","An error in the OpenSSL library",16],[4,"OpensslError","","An error from the OpenSSL library"],[13,"UnknownError","","An unknown error",17],[12,"library","openssl::ssl::error::OpensslError","The library reporting the error",17],[12,"function","","The function reporting the error",17],[12,"reason","","The reason for the error",17],[11,"eq","openssl::ssl::error","",16],[11,"ne","","",16],[11,"clone","","",16],[11,"fmt","","",16],[11,"fmt","","",16],[11,"description","","",16],[11,"cause","","",16],[11,"eq","","",17],[11,"ne","","",17],[11,"clone","","",17],[11,"fmt","","",17],[11,"get","","Creates a new `OpenSslErrors` with the current contents of the error\nstack.",16],[11,"from_error","","Creates an `SslError` from the raw numeric error code.",16],[6,"VerifyCallback","openssl::ssl","The signature of functions that can be used to manually verify certificates"],[6,"VerifyCallbackData","","The signature of functions that can be used to manually verify certificates\nwhen user-data should be carried for all verification process"],[11,"eq","","",13],[11,"ne","","",13],[11,"hash","","",13],[11,"fmt","","",13],[11,"clone","","",13],[11,"fmt","","",14],[11,"clone","","",14],[11,"fmt","","",18],[11,"drop","","",18],[11,"new","","Creates a new SSL context.",18],[11,"set_verify","","Configures the certificate verification method for new connections.",18],[11,"set_verify_with_data","","Configures the certificate verification method for new connections also\ncarrying supplied data.",18],[11,"set_verify_depth","","Sets verification depth",18],[11,"set_CA_file","","Specifies the file that contains trusted CA certificates.",18],[11,"set_certificate_file","","Specifies the file that contains certificate",18],[11,"set_private_key_file","","Specifies the file that contains private key",18],[11,"set_cipher_list","","",18],[11,"fmt","","",19],[11,"drop","","",19],[11,"new","","",19],[11,"set_hostname","","Set the host name to be used with SNI (Server Name Indication).",19],[11,"get_peer_certificate","","",19],[11,"clone","","",20],[11,"try_clone","","Create a new independently owned handle to the underlying socket.",20],[11,"fmt","","",20],[11,"new_server_from","","",20],[11,"new_from","","Attempts to create a new SSL stream from a given `Ssl` instance.",20],[11,"new","","Creates a new SSL stream",20],[11,"new_server","","Creates a new SSL server stream",20],[11,"get_inner","","Returns a mutable reference to the underlying stream.",20],[11,"get_ref","","Returns a reference to the underlying stream.",20],[11,"get_mut","","Returns a mutable reference to the underlying stream.",20],[11,"get_compression","","Get the compression currently in use.  The result will be\neither None, indicating no compression is in use, or a string\nwith the compression name.",20],[11,"read","","",20],[11,"write","","",20],[11,"flush","","",20],[11,"fmt","","",15],[11,"read","","",15],[11,"write","","",15],[11,"flush","","",15],[11,"get_ref","","Returns a reference to the underlying stream.",15],[11,"get_mut","","Returns a mutable reference to the underlying stream.",15],[0,"x509","openssl",""],[3,"X509StoreContext","openssl::x509",""],[3,"X509Generator","","Generator of private key/certificate pairs"],[3,"X509","","A public key certificate"],[3,"X509Name","",""],[4,"X509FileType","",""],[13,"PEM","","",21],[13,"ASN1","","",21],[13,"Default","","",21],[4,"KeyUsage","",""],[13,"DigitalSignature","","",22],[13,"NonRepudiation","","",22],[13,"KeyEncipherment","","",22],[13,"DataEncipherment","","",22],[13,"KeyAgreement","","",22],[13,"KeyCertSign","","",22],[13,"CRLSign","","",22],[13,"EncipherOnly","","",22],[13,"DecipherOnly","","",22],[4,"ExtKeyUsage","",""],[13,"ServerAuth","","",23],[13,"ClientAuth","","",23],[13,"CodeSigning","","",23],[13,"EmailProtection","","",23],[13,"TimeStamping","","",23],[13,"MsCodeInd","","",23],[13,"MsCodeCom","","",23],[13,"MsCtlSign","","",23],[13,"MsSgc","","",23],[13,"MsEfs","","",23],[13,"NsSgc","","",23],[4,"X509ValidationError","",""],[13,"X509UnableToGetIssuerCert","","",24],[13,"X509UnableToGetCrl","","",24],[13,"X509UnableToDecryptCertSignature","","",24],[13,"X509UnableToDecryptCrlSignature","","",24],[13,"X509UnableToDecodeIssuerPublicKey","","",24],[13,"X509CertSignatureFailure","","",24],[13,"X509CrlSignatureFailure","","",24],[13,"X509CertNotYetValid","","",24],[13,"X509CertHasExpired","","",24],[13,"X509CrlNotYetValid","","",24],[13,"X509CrlHasExpired","","",24],[13,"X509ErrorInCertNotBeforeField","","",24],[13,"X509ErrorInCertNotAfterField","","",24],[13,"X509ErrorInCrlLastUpdateField","","",24],[13,"X509ErrorInCrlNextUpdateField","","",24],[13,"X509OutOfMem","","",24],[13,"X509DepthZeroSelfSignedCert","","",24],[13,"X509SelfSignedCertInChain","","",24],[13,"X509UnableToGetIssuerCertLocally","","",24],[13,"X509UnableToVerifyLeafSignature","","",24],[13,"X509CertChainTooLong","","",24],[13,"X509CertRevoked","","",24],[13,"X509InvalidCA","","",24],[13,"X509PathLengthExceeded","","",24],[13,"X509InvalidPurpose","","",24],[13,"X509CertUntrusted","","",24],[13,"X509CertRejected","","",24],[13,"X509SubjectIssuerMismatch","","",24],[13,"X509AkidSkidMismatch","","",24],[13,"X509AkidIssuerSerialMismatch","","",24],[13,"X509KeyusageNoCertsign","","",24],[13,"X509UnableToGetCrlIssuer","","",24],[13,"X509UnhandledCriticalExtension","","",24],[13,"X509KeyusageNoCrlSign","","",24],[13,"X509UnhandledCriticalCrlExtension","","",24],[13,"X509InvalidNonCA","","",24],[13,"X509ProxyPathLengthExceeded","","",24],[13,"X509KeyusageNoDigitalSignature","","",24],[13,"X509ProxyCertificatesNotAllowed","","",24],[13,"X509InvalidExtension","","",24],[13,"X509InavlidPolicyExtension","","",24],[13,"X509NoExplicitPolicy","","",24],[13,"X509DifferentCrlScope","","",24],[13,"X509UnsupportedExtensionFeature","","",24],[13,"X509UnnestedResource","","",24],[13,"X509PermittedVolation","","",24],[13,"X509ExcludedViolation","","",24],[13,"X509SubtreeMinmax","","",24],[13,"X509UnsupportedConstraintType","","",24],[13,"X509UnsupportedConstraintSyntax","","",24],[13,"X509UnsupportedNameSyntax","","",24],[13,"X509CrlPathValidationError","","",24],[13,"X509ApplicationVerification","","",24],[13,"X509UnknownError","","",24],[11,"new","","",25],[11,"get_error","","",25],[11,"get_current_cert","","",25],[11,"clone","","",22],[11,"clone","","",23],[11,"new","","Creates a new generator with the following defaults:",26],[11,"set_bitlength","","Sets desired bit length",26],[11,"set_valid_period","","Sets certificate validity period in days since today",26],[11,"set_CN","","Sets Common Name of certificate",26],[11,"set_usage","","Sets what for certificate could be used",26],[11,"set_ext_usage","","Sets allowed extended usage of certificate",26],[11,"set_sign_hash","","",26],[11,"generate","","Generates a private key and a signed certificate and returns them",26],[11,"new","","Creates new from handle with desired ownership.",27],[11,"new_in_ctx","","Creates a new certificate from context. Doesn't take ownership\nof handle.",27],[11,"from_pem","","Reads certificate from PEM, takes ownership of handle",27],[11,"subject_name","","",27],[11,"fingerprint","","Returns certificate fingerprint calculated using provided hash",27],[11,"write_pem","","Writes certificate as PEM",27],[11,"drop","","",27]],"paths":[[3,"Asn1Time"],[4,"RNGProperty"],[3,"BigNum"],[3,"MemBio"],[4,"Type"],[3,"Hasher"],[3,"HMAC"],[4,"Role"],[4,"EncryptionPadding"],[3,"PKey"],[4,"Mode"],[4,"Type"],[3,"Crypter"],[4,"SslMethod"],[4,"SslVerifyMode"],[4,"MaybeSslStream"],[4,"SslError"],[4,"OpensslError"],[3,"SslContext"],[3,"Ssl"],[3,"SslStream"],[4,"X509FileType"],[4,"KeyUsage"],[4,"ExtKeyUsage"],[4,"X509ValidationError"],[3,"X509StoreContext"],[3,"X509Generator"],[3,"X509"]]};

searchIndex['openssl-sys'] = {"items":[[0,"","openssl-sys",""],[3,"EVP_MD_CTX","",""],[3,"HMAC_CTX","",""],[3,"X509V3_CTX","",""],[3,"BIGNUM","",""],[12,"d","","",0],[12,"top","","",0],[12,"dmax","","",0],[12,"neg","","",0],[12,"flags","","",0],[5,"init","",""],[5,"BIO_eof","",""],[5,"ASN1_INTEGER_set","",""],[5,"ASN1_STRING_type_new","",""],[5,"ASN1_TIME_free","",""],[5,"BIO_ctrl","",""],[5,"BIO_free_all","",""],[5,"BIO_new","",""],[5,"BIO_read","",""],[5,"BIO_write","",""],[5,"BIO_s_mem","",""],[5,"BN_new","",""],[5,"BN_dup","",""],[5,"BN_clear_free","",""],[5,"BN_CTX_new","",""],[5,"BN_CTX_free","",""],[5,"BN_num_bits","",""],[5,"BN_set_negative","",""],[5,"BN_set_word","",""],[5,"BN_add","",""],[5,"BN_div","",""],[5,"BN_exp","",""],[5,"BN_gcd","",""],[5,"BN_mod_add","",""],[5,"BN_mod_exp","",""],[5,"BN_mod_inverse","",""],[5,"BN_mod_mul","",""],[5,"BN_mod_sqr","",""],[5,"BN_mod_sub","",""],[5,"BN_mul","",""],[5,"BN_nnmod","",""],[5,"BN_add_word","",""],[5,"BN_sub_word","",""],[5,"BN_mul_word","",""],[5,"BN_div_word","",""],[5,"BN_mod_word","",""],[5,"BN_sqr","",""],[5,"BN_sub","",""],[5,"BN_clear_bit","",""],[5,"BN_is_bit_set","",""],[5,"BN_lshift","",""],[5,"BN_lshift1","",""],[5,"BN_mask_bits","",""],[5,"BN_rshift","",""],[5,"BN_set_bit","",""],[5,"BN_rshift1","",""],[5,"BN_cmp","",""],[5,"BN_ucmp","",""],[5,"BN_generate_prime_ex","",""],[5,"BN_is_prime_ex","",""],[5,"BN_is_prime_fasttest_ex","",""],[5,"BN_rand","",""],[5,"BN_pseudo_rand","",""],[5,"BN_rand_range","",""],[5,"BN_pseudo_rand_range","",""],[5,"BN_bin2bn","",""],[5,"BN_bn2bin","",""],[5,"BN_dec2bn","",""],[5,"BN_bn2dec","",""],[5,"BN_hex2bn","",""],[5,"BN_bn2hex","",""],[5,"CRYPTO_num_locks","",""],[5,"CRYPTO_set_locking_callback","",""],[5,"CRYPTO_free","",""],[5,"CRYPTO_memcmp","",""],[5,"ERR_get_error","",""],[5,"ERR_lib_error_string","",""],[5,"ERR_func_error_string","",""],[5,"ERR_reason_error_string","",""],[5,"ERR_load_crypto_strings","",""],[5,"EVP_md5","",""],[5,"EVP_ripemd160","",""],[5,"EVP_sha1","",""],[5,"EVP_sha224","",""],[5,"EVP_sha256","",""],[5,"EVP_sha384","",""],[5,"EVP_sha512","",""],[5,"EVP_aes_128_cbc","",""],[5,"EVP_aes_128_ecb","",""],[5,"EVP_aes_256_cbc","",""],[5,"EVP_aes_256_ecb","",""],[5,"EVP_rc4","",""],[5,"EVP_CIPHER_CTX_new","",""],[5,"EVP_CIPHER_CTX_set_padding","",""],[5,"EVP_CIPHER_CTX_free","",""],[5,"EVP_CipherInit","",""],[5,"EVP_CipherUpdate","",""],[5,"EVP_CipherFinal","",""],[5,"EVP_DigestInit","",""],[5,"EVP_DigestInit_ex","",""],[5,"EVP_DigestUpdate","",""],[5,"EVP_DigestFinal","",""],[5,"EVP_DigestFinal_ex","",""],[5,"EVP_MD_CTX_create","",""],[5,"EVP_MD_CTX_copy_ex","",""],[5,"EVP_MD_CTX_destroy","",""],[5,"EVP_PKEY_new","",""],[5,"EVP_PKEY_free","",""],[5,"EVP_PKEY_assign","",""],[5,"EVP_PKEY_get1_RSA","",""],[5,"EVP_PKEY_set1_RSA","",""],[5,"HMAC_CTX_init","",""],[5,"HMAC_CTX_cleanup","",""],[5,"HMAC_CTX_copy","",""],[5,"HMAC_Init_ex_shim","",""],[5,"HMAC_Final_shim","",""],[5,"HMAC_Update_shim","",""],[5,"PEM_read_bio_X509","",""],[5,"PEM_write_bio_PrivateKey","",""],[5,"PEM_write_bio_X509","",""],[5,"PKCS5_PBKDF2_HMAC_SHA1","",""],[5,"RAND_bytes","",""],[5,"RSA_generate_key","",""],[5,"RSA_private_decrypt","",""],[5,"RSA_public_encrypt","",""],[5,"RSA_sign","",""],[5,"RSA_size","",""],[5,"RSA_verify","",""],[5,"SSL_library_init","",""],[5,"SSL_load_error_strings","",""],[5,"SSLv3_method","",""],[5,"TLSv1_method","",""],[5,"SSLv23_method","",""],[5,"SSL_new","",""],[5,"SSL_free","",""],[5,"SSL_set_bio","",""],[5,"SSL_get_rbio","",""],[5,"SSL_get_wbio","",""],[5,"SSL_accept","",""],[5,"SSL_connect","",""],[5,"SSL_ctrl","",""],[5,"SSL_get_error","",""],[5,"SSL_read","",""],[5,"SSL_write","",""],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","",""],[5,"SSL_get_SSL_CTX","",""],[5,"SSL_get_current_compression","",""],[5,"SSL_get_peer_certificate","",""],[5,"SSL_COMP_get_name","",""],[5,"SSL_CTX_new","",""],[5,"SSL_CTX_free","",""],[5,"SSL_CTX_set_verify","",""],[5,"SSL_CTX_set_verify_depth","",""],[5,"SSL_CTX_load_verify_locations","",""],[5,"SSL_CTX_get_ex_new_index","",""],[5,"SSL_CTX_set_ex_data","",""],[5,"SSL_CTX_get_ex_data","",""],[5,"SSL_CTX_use_certificate_file","",""],[5,"SSL_CTX_use_PrivateKey_file","",""],[5,"SSL_CTX_set_cipher_list","",""],[5,"X509_add_ext","",""],[5,"X509_digest","",""],[5,"X509_free","",""],[5,"X509_get_serialNumber","",""],[5,"X509_get_subject_name","",""],[5,"X509_gmtime_adj","",""],[5,"X509_new","",""],[5,"X509_set_issuer_name","",""],[5,"X509_set_notAfter","",""],[5,"X509_set_notBefore","",""],[5,"X509_set_version","",""],[5,"X509_set_pubkey","",""],[5,"X509_sign","",""],[5,"X509_EXTENSION_free","",""],[5,"X509_NAME_add_entry_by_txt","",""],[5,"X509_NAME_get_index_by_NID","",""],[5,"X509_NAME_get_entry","",""],[5,"X509_NAME_ENTRY_get_data","",""],[5,"ASN1_STRING_to_UTF8","",""],[5,"X509_STORE_CTX_get_current_cert","",""],[5,"X509_STORE_CTX_get_error","",""],[5,"X509_STORE_CTX_get_ex_data","",""],[5,"X509V3_EXT_conf_nid","",""],[5,"X509V3_set_ctx","",""],[5,"i2d_RSA_PUBKEY","",""],[5,"d2i_RSA_PUBKEY","",""],[5,"i2d_RSAPrivateKey","",""],[5,"d2i_RSAPrivateKey","",""],[0,"probe","",""],[3,"ProbeResult","openssl-sys::probe",""],[12,"cert_file","","",1],[12,"cert_dir","","",1],[5,"find_certs_dirs","","Probe the system for the directory in which CA certificates should likely be\nfound."],[5,"init_ssl_cert_env_vars","",""],[5,"probe","",""],[6,"ASN1_INTEGER","openssl-sys",""],[6,"ASN1_STRING","",""],[6,"ASN1_TIME","",""],[6,"BIO","",""],[6,"BIO_METHOD","",""],[6,"BN_CTX","",""],[6,"COMP_METHOD","",""],[6,"CRYPTO_EX_DATA","",""],[6,"ENGINE","",""],[6,"EVP_CIPHER","",""],[6,"EVP_CIPHER_CTX","",""],[6,"EVP_MD","",""],[6,"EVP_PKEY","",""],[6,"EVP_PKEY_CTX","",""],[6,"RSA","",""],[6,"SSL","",""],[6,"SSL_CTX","",""],[6,"SSL_METHOD","",""],[6,"X509","",""],[6,"X509_CRL","",""],[6,"X509_EXTENSION","",""],[6,"X509_NAME","",""],[6,"X509_NAME_ENTRY","",""],[6,"X509_REQ","",""],[6,"X509_STORE_CTX","",""],[6,"CRYPTO_EX_new","",""],[6,"CRYPTO_EX_dup","",""],[6,"CRYPTO_EX_free","",""],[6,"PasswordCallback","",""],[17,"BIO_CTRL_EOF","",""],[17,"CRYPTO_LOCK","",""],[17,"MBSTRING_ASC","",""],[17,"MBSTRING_BMP","",""],[17,"MBSTRING_FLAG","",""],[17,"MBSTRING_UNIV","",""],[17,"MBSTRING_UTF8","",""],[17,"NID_ext_key_usage","",""],[17,"NID_key_usage","",""],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","",""],[17,"SSL_ERROR_NONE","",""],[17,"SSL_ERROR_SSL","",""],[17,"SSL_ERROR_SYSCALL","",""],[17,"SSL_ERROR_WANT_ACCEPT","",""],[17,"SSL_ERROR_WANT_CONNECT","",""],[17,"SSL_ERROR_WANT_READ","",""],[17,"SSL_ERROR_WANT_WRITE","",""],[17,"SSL_ERROR_WANT_X509_LOOKUP","",""],[17,"SSL_ERROR_ZERO_RETURN","",""],[17,"SSL_VERIFY_NONE","",""],[17,"SSL_VERIFY_PEER","",""],[17,"TLSEXT_NAMETYPE_host_name","",""],[17,"V_ASN1_GENERALIZEDTIME","",""],[17,"V_ASN1_UTCTIME","",""],[17,"X509_FILETYPE_ASN1","",""],[17,"X509_FILETYPE_DEFAULT","",""],[17,"X509_FILETYPE_PEM","",""],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","",""],[17,"X509_V_ERR_AKID_SKID_MISMATCH","",""],[17,"X509_V_ERR_APPLICATION_VERIFICATION","",""],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","",""],[17,"X509_V_ERR_CERT_HAS_EXPIRED","",""],[17,"X509_V_ERR_CERT_NOT_YET_VALID","",""],[17,"X509_V_ERR_CERT_REJECTED","",""],[17,"X509_V_ERR_CERT_REVOKED","",""],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","",""],[17,"X509_V_ERR_CERT_UNTRUSTED","",""],[17,"X509_V_ERR_CRL_HAS_EXPIRED","",""],[17,"X509_V_ERR_CRL_NOT_YET_VALID","",""],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","",""],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","",""],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","",""],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","",""],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","",""],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","",""],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","",""],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","",""],[17,"X509_V_ERR_EXCLUDED_VIOLATION","",""],[17,"X509_V_ERR_INVALID_CA","",""],[17,"X509_V_ERR_INVALID_EXTENSION","",""],[17,"X509_V_ERR_INVALID_NON_CA","",""],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","",""],[17,"X509_V_ERR_INVALID_PURPOSE","",""],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","",""],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","",""],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","",""],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","",""],[17,"X509_V_ERR_OUT_OF_MEM","",""],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","",""],[17,"X509_V_ERR_PERMITTED_VIOLATION","",""],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","",""],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","",""],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","",""],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","",""],[17,"X509_V_ERR_SUBTREE_MINMAX","",""],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","",""],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","",""],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","",""],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","",""],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","",""],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","",""],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","",""],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","",""],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","",""],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","",""],[17,"X509_V_ERR_UNNESTED_RESOURCE","",""],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","",""],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","",""],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","",""],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","",""],[17,"X509_V_OK","",""]],"paths":[[3,"BIGNUM"],[3,"ProbeResult"]]};

searchIndex['encoding'] = {"items":[[0,"","encoding","# Encoding 0.2.24"],[0,"types","","Interface to the character encoding."],[3,"CodecError","encoding::types","Error information from either encoder or decoder."],[12,"upto","","The byte position of the first remaining byte, with respect to the *current* input.\nFor the `finish` call, this should be no more than zero (since there is no input).\nIt can be negative if the remaining byte is in the prior inputs,\nas long as the remaining byte is not yet processed.\nThe caller should feed the bytes starting from this point again\nin order to continue encoding or decoding after an error.",0],[12,"cause","","A human-readable cause of the error.",0],[4,"DecoderTrap","","Trap, which handles decoder errors."],[13,"Strict","","Immediately fails on errors.\nCorresponds to WHATWG \"fatal\" error algorithm.",1],[13,"Replace","","Replaces an error with a U+FFFD (decoder).\nCorresponds to WHATWG \"replacement\" error algorithm.",1],[13,"Ignore","","Silently ignores an error, effectively replacing it with an empty sequence.",1],[13,"Call","","Calls given function to handle decoder errors.\nThe function is given the current decoder, input and output writer,\nand should return true only when it is fine to keep going.",1],[4,"EncoderTrap","",""],[13,"Strict","","Immediately fails on errors.\nCorresponds to WHATWG \"fatal\" error algorithm.",2],[13,"Replace","","Replaces an error with `?` in given encoding.\nNote that this fails when `?` cannot be represented in given encoding.\nCorresponds to WHATWG \"URL\" error algorithms.",2],[13,"Ignore","","Silently ignores an error, effectively replacing it with an empty sequence.",2],[13,"NcrEscape","","Replaces an error with XML numeric character references (e.g. `&#1234;`).\nThe encoder trap fails when NCRs cannot be represented in given encoding.\nCorresponds to WHATWG \"<form>\" error algorithms.",2],[13,"Call","","Calls given function to handle encoder errors.\nThe function is given the current encoder, input and output writer,\nand should return true only when it is fine to keep going.",2],[5,"decode","","Determine the encoding by looking for a Byte Order Mark (BOM)\nand decoded a single string in memory.\nReturn the result and the used encoding."],[6,"EncodingRef","","A trait object using dynamic dispatch which is a sendable reference to the encoding,\nfor code where the encoding is not known at compile-time."],[6,"EncoderTrapFunc","","A type of the bare function in `EncoderTrap` values."],[6,"DecoderTrapFunc","","A type of the bare function in `DecoderTrap` values."],[8,"ByteWriter","","Byte writer used by encoders. In most cases this will be an owned vector of `u8`."],[11,"writer_hint","","Hints an expected lower bound on the length (in bytes) of the output\nuntil the next call to `writer_hint`,\nso that the writer can reserve the memory for writing.\n`RawEncoder`s are recommended but not required to call this method\nwith an appropriate estimate.\nBy default this method does nothing.",3],[10,"write_byte","","Writes a single byte.",3],[10,"write_bytes","","Writes a number of bytes.",3],[8,"StringWriter","","String writer used by decoders. In most cases this will be an owned string."],[11,"writer_hint","","Hints an expected lower bound on the length (in bytes) of the output\nuntil the next call to `writer_hint`,\nso that the writer can reserve the memory for writing.\n`RawDecoder`s are recommended but not required to call this method\nwith an appropriate estimate.\nBy default this method does nothing.",4],[10,"write_char","","Writes a single character.",4],[10,"write_str","","Writes a string.",4],[8,"RawEncoder","","Encoder converting a Unicode string into a byte sequence.\nThis is a lower level interface, and normally `Encoding::encode` should be used instead."],[10,"from_self","","Creates a fresh `RawEncoder` instance which parameters are same as `self`.",5],[11,"is_ascii_compatible","","Returns true if this encoding is compatible to ASCII,\ni.e. U+0000 through U+007F always map to bytes 00 through 7F and nothing else.",5],[10,"raw_feed","","Feeds given portion of string to the encoder,\npushes the an encoded byte sequence at the end of the given output,\nand returns a byte offset to the first unprocessed character\n(that can be zero when the first such character appeared in the prior calls to `raw_feed`)\nand optional error information (None means success).",5],[10,"raw_finish","","Finishes the encoder,\npushes the an encoded byte sequence at the end of the given output,\nand returns optional error information (None means success).\n`remaining` value of the error information, if any, is always an empty string.",5],[8,"RawDecoder","","Decoder converting a byte sequence into a Unicode string.\nThis is a lower level interface, and normally `Encoding::decode` should be used instead."],[10,"from_self","","Creates a fresh `RawDecoder` instance which parameters are same as `self`.",6],[11,"is_ascii_compatible","","Returns true if this encoding is compatible to ASCII,\ni.e. bytes 00 through 7F always map to U+0000 through U+007F and nothing else.",6],[10,"raw_feed","","Feeds given portion of byte sequence to the encoder,\npushes the a decoded string at the end of the given output,\nand returns an offset to the first unprocessed byte\n(that can be zero when the first such byte appeared in the prior calls to `raw_feed`)\nand optional error information (None means success).",6],[10,"raw_finish","","Finishes the decoder,\npushes the a decoded string at the end of the given output,\nand returns optional error information (None means success).",6],[8,"Encoding","","Character encoding."],[10,"name","","Returns the canonical name of given encoding.\nThis name is guaranteed to be unique across built-in encodings,\nbut it is not normative and would be at most arbitrary.",7],[11,"whatwg_name","","Returns a name of given encoding defined in the WHATWG Encoding standard, if any.\nThis name often differs from `name` due to the compatibility reason.",7],[10,"raw_encoder","","Creates a new encoder.",7],[10,"raw_decoder","","Creates a new decoder.",7],[11,"encode","","An easy-to-use interface to `RawEncoder`.\nOn the encoder error `trap` is called,\nwhich may return a replacement sequence to continue processing,\nor a failure to return the error.",7],[11,"decode","","An easy-to-use interface to `RawDecoder`.\nOn the decoder error `trap` is called,\nwhich may return a replacement string to continue processing,\nor a failure to return the error.",7],[11,"writer_hint","collections::vec","",8],[11,"write_byte","","",8],[11,"write_bytes","","",8],[11,"writer_hint","collections::string","",9],[11,"write_char","","",9],[11,"write_str","","",9],[0,"codec","encoding","Codec implementations."],[0,"error","encoding::codec","A placeholder encoding that returns encoder/decoder error for every case."],[3,"ErrorEncoding","encoding::codec::error","An encoding that returns encoder/decoder error for every case."],[3,"ErrorEncoder","","An encoder that always returns error."],[3,"ErrorDecoder","","A decoder that always returns error."],[11,"clone","","",10],[11,"name","","",10],[11,"raw_encoder","","",10],[11,"raw_decoder","","",10],[11,"clone","","",11],[11,"new","","",11],[11,"from_self","","",11],[11,"raw_feed","","",11],[11,"raw_finish","","",11],[11,"clone","","",12],[11,"new","","",12],[11,"from_self","","",12],[11,"raw_feed","","",12],[11,"raw_finish","","",12],[0,"ascii","encoding::codec","7-bit ASCII encoding."],[3,"ASCIIEncoding","encoding::codec::ascii","ASCII, also known as ISO/IEC 646:US."],[3,"ASCIIEncoder","","An encoder for ASCII."],[3,"ASCIIDecoder","","A decoder for ASCII."],[11,"clone","","",13],[11,"name","","",13],[11,"raw_encoder","","",13],[11,"raw_decoder","","",13],[11,"clone","","",14],[11,"new","","",14],[11,"from_self","","",14],[11,"is_ascii_compatible","","",14],[11,"raw_feed","","",14],[11,"raw_finish","","",14],[11,"clone","","",15],[11,"new","","",15],[11,"from_self","","",15],[11,"is_ascii_compatible","","",15],[11,"raw_feed","","",15],[11,"raw_finish","","",15],[0,"singlebyte","encoding::codec","Common codec implementation for single-byte encodings."],[3,"SingleByteEncoding","encoding::codec::singlebyte","A common framework for single-byte encodings based on ASCII."],[12,"name","","",16],[12,"whatwg_name","","",16],[12,"index_forward","","",16],[12,"index_backward","","",16],[3,"SingleByteEncoder","","An encoder for single-byte encodings based on ASCII."],[3,"SingleByteDecoder","","A decoder for single-byte encodings based on ASCII."],[0,"iso_8859_1","","Algorithmic mapping for ISO 8859-1."],[5,"forward","encoding::codec::singlebyte::iso_8859_1",""],[5,"backward","",""],[11,"name","encoding::codec::singlebyte","",16],[11,"whatwg_name","","",16],[11,"raw_encoder","","",16],[11,"raw_decoder","","",16],[11,"clone","","",17],[11,"new","","",17],[11,"from_self","","",17],[11,"is_ascii_compatible","","",17],[11,"raw_feed","","",17],[11,"raw_finish","","",17],[11,"clone","","",18],[11,"new","","",18],[11,"from_self","","",18],[11,"is_ascii_compatible","","",18],[11,"raw_feed","","",18],[11,"raw_finish","","",18],[0,"utf_8","encoding::codec","UTF-8, the universal encoding."],[3,"UTF8Encoding","encoding::codec::utf_8","UTF-8 (UCS Transformation Format, 8-bit)."],[3,"UTF8Encoder","","An encoder for UTF-8."],[3,"UTF8Decoder","","A decoder for UTF-8."],[5,"from_utf8","","Almost equivalent to `std::str::from_utf8`.\nThis function is provided for the fair benchmark against the stdlib's UTF-8 conversion\nfunctions, as rust-encoding always allocates a new string."],[11,"clone","","",19],[11,"name","","",19],[11,"whatwg_name","","",19],[11,"raw_encoder","","",19],[11,"raw_decoder","","",19],[11,"clone","","",20],[11,"new","","",20],[11,"from_self","","",20],[11,"is_ascii_compatible","","",20],[11,"raw_feed","","",20],[11,"raw_finish","","",20],[11,"clone","","",21],[11,"new","","",21],[11,"from_self","","",21],[11,"is_ascii_compatible","","",21],[11,"raw_feed","","",21],[11,"raw_finish","","",21],[0,"utf_16","encoding::codec","UTF-16."],[3,"Little","encoding::codec::utf_16","An implementation type for little endian."],[3,"Big","","An implementation type for big endian."],[3,"UTF16Encoding","","UTF-16 (UCS Transformation Format, 16-bit)."],[3,"UTF16Encoder","","An encoder for UTF-16."],[3,"UTF16Decoder","","A decoder for UTF-16."],[6,"UTF16LEEncoding","","A type for UTF-16 in little endian."],[6,"UTF16BEEncoding","","A type for UTF-16 in big endian."],[17,"UTF_16LE_ENCODING","","An instance for UTF-16 in little endian."],[17,"UTF_16BE_ENCODING","","An instance for UTF-16 in big endian."],[11,"clone","","",22],[11,"clone","","",23],[11,"clone","","",24],[11,"name","","",24],[11,"whatwg_name","","",24],[11,"raw_encoder","","",24],[11,"raw_decoder","","",24],[11,"clone","","",25],[11,"from_self","","",25],[11,"raw_feed","","",25],[11,"raw_finish","","",25],[11,"new","","",26],[11,"from_self","","",26],[11,"raw_feed","","",26],[11,"raw_finish","","",26],[0,"korean","encoding::codec","Legacy Korean encodings based on KS X 1001."],[3,"Windows949Encoding","encoding::codec::korean","Windows code page 949."],[3,"Windows949Encoder","","An encoder for Windows code page 949."],[3,"Windows949Decoder","","A decoder for Windows code page 949."],[11,"clone","","",27],[11,"name","","",27],[11,"whatwg_name","","",27],[11,"raw_encoder","","",27],[11,"raw_decoder","","",27],[11,"clone","","",28],[11,"new","","",28],[11,"from_self","","",28],[11,"is_ascii_compatible","","",28],[11,"raw_feed","","",28],[11,"raw_finish","","",28],[11,"clone","","",29],[11,"new","","",29],[11,"from_self","","",29],[11,"is_ascii_compatible","","",29],[11,"raw_feed","","",29],[11,"raw_finish","","",29],[0,"japanese","encoding::codec","Legacy Japanese encodings based on JIS X 0208 and JIS X 0212."],[3,"EUCJPEncoding","encoding::codec::japanese","EUC-JP. (XXX with asymmetric JIS X 0212 support)"],[3,"EUCJPEncoder","","An encoder for EUC-JP with unused G3 character set."],[3,"EUCJP0212Decoder","","A decoder for EUC-JP with JIS X 0212 in G3."],[3,"Windows31JEncoding","","Windows code page 932, i.e. Shift_JIS with IBM/NEC extensions."],[3,"Windows31JEncoder","","An encoder for Shift_JIS with IBM/NEC extensions."],[3,"Windows31JDecoder","","A decoder for Shift_JIS with IBM/NEC extensions."],[3,"ISO2022JPEncoding","","ISO-2022-JP."],[3,"ISO2022JPEncoder","","An encoder for ISO-2022-JP without JIS X 0212/0213 support."],[3,"ISO2022JPDecoder","","A decoder for ISO-2022-JP with JIS X 0212 support."],[11,"clone","","",30],[11,"name","","",30],[11,"whatwg_name","","",30],[11,"raw_encoder","","",30],[11,"raw_decoder","","",30],[11,"clone","","",31],[11,"new","","",31],[11,"from_self","","",31],[11,"is_ascii_compatible","","",31],[11,"raw_feed","","",31],[11,"raw_finish","","",31],[11,"clone","","",32],[11,"new","","",32],[11,"from_self","","",32],[11,"is_ascii_compatible","","",32],[11,"raw_feed","","",32],[11,"raw_finish","","",32],[11,"clone","","",33],[11,"name","","",33],[11,"whatwg_name","","",33],[11,"raw_encoder","","",33],[11,"raw_decoder","","",33],[11,"clone","","",34],[11,"new","","",34],[11,"from_self","","",34],[11,"is_ascii_compatible","","",34],[11,"raw_feed","","",34],[11,"raw_finish","","",34],[11,"clone","","",35],[11,"new","","",35],[11,"from_self","","",35],[11,"is_ascii_compatible","","",35],[11,"raw_feed","","",35],[11,"raw_finish","","",35],[11,"clone","","",36],[11,"name","","",36],[11,"whatwg_name","","",36],[11,"raw_encoder","","",36],[11,"raw_decoder","","",36],[11,"clone","","",37],[11,"new","","",37],[11,"from_self","","",37],[11,"is_ascii_compatible","","",37],[11,"raw_feed","","",37],[11,"raw_finish","","",37],[11,"clone","","",38],[11,"new","","",38],[11,"from_self","","",38],[11,"is_ascii_compatible","","",38],[11,"raw_feed","","",38],[11,"raw_finish","","",38],[0,"simpchinese","encoding::codec","Legacy simplified Chinese encodings based on GB 2312 and GB 18030."],[3,"GB18030Encoding","encoding::codec::simpchinese","GB 18030-2005."],[3,"GB18030Encoder","","An encoder for GB 18030."],[3,"GB18030Decoder","","A decoder for GB 18030."],[3,"HZEncoding","","HZ. (RFC 1843)"],[3,"HZEncoder","","An encoder for HZ."],[3,"HZDecoder","","A decoder for HZ."],[11,"clone","","",39],[11,"name","","",39],[11,"whatwg_name","","",39],[11,"raw_encoder","","",39],[11,"raw_decoder","","",39],[11,"clone","","",40],[11,"new","","",40],[11,"from_self","","",40],[11,"is_ascii_compatible","","",40],[11,"raw_feed","","",40],[11,"raw_finish","","",40],[11,"clone","","",41],[11,"new","","",41],[11,"from_self","","",41],[11,"is_ascii_compatible","","",41],[11,"raw_feed","","",41],[11,"raw_finish","","",41],[11,"clone","","",42],[11,"name","","",42],[11,"whatwg_name","","",42],[11,"raw_encoder","","",42],[11,"raw_decoder","","",42],[11,"clone","","",43],[11,"new","","",43],[11,"from_self","","",43],[11,"is_ascii_compatible","","",43],[11,"raw_feed","","",43],[11,"raw_finish","","",43],[11,"clone","","",44],[11,"new","","",44],[11,"from_self","","",44],[11,"is_ascii_compatible","","",44],[11,"raw_feed","","",44],[11,"raw_finish","","",44],[0,"tradchinese","encoding::codec","Legacy traditional Chinese encodings."],[3,"BigFive2003Encoding","encoding::codec::tradchinese","Big5-2003 with common extensions. (XXX with asymmetric HKSCS-2008 support)"],[3,"BigFive2003Encoder","","An encoder for Big5-2003."],[3,"BigFive2003HKSCS2008Decoder","","A decoder for Big5-2003 with HKSCS-2008 extension."],[11,"clone","","",45],[11,"name","","",45],[11,"whatwg_name","","",45],[11,"raw_encoder","","",45],[11,"raw_decoder","","",45],[11,"clone","","",46],[11,"new","","",46],[11,"from_self","","",46],[11,"is_ascii_compatible","","",46],[11,"raw_feed","","",46],[11,"raw_finish","","",46],[11,"clone","","",47],[11,"new","","",47],[11,"from_self","","",47],[11,"is_ascii_compatible","","",47],[11,"raw_feed","","",47],[11,"raw_finish","","",47],[0,"whatwg","encoding::codec","Asymmetric or special encoding constructions required by the WHATWG Encoding standard."],[3,"EncoderOnlyUTF8Encoding","encoding::codec::whatwg","Replacement encoding used to solve a particular attack vector due to mismatching server and\nclient supports for encodings. It is rarely useful outside."],[0,"x_user_defined","","Algorithmic mapping for `x-user-defined` encoding."],[5,"forward","encoding::codec::whatwg::x_user_defined",""],[5,"backward","",""],[11,"clone","encoding::codec::whatwg","",48],[11,"name","","",48],[11,"whatwg_name","","",48],[11,"raw_encoder","","",48],[11,"raw_decoder","","",48],[0,"all","encoding","A list of all supported encodings. Useful for encodings fixed in the compile time."],[0,"whatwg","encoding::all",""],[7,"X_USER_DEFINED","encoding::all::whatwg",""],[7,"ISO_8859_8_I","",""],[7,"REPLACEMENT","",""],[7,"ERROR","encoding::all",""],[7,"ASCII","",""],[7,"IBM866","",""],[7,"ISO_8859_1","",""],[7,"ISO_8859_2","",""],[7,"ISO_8859_3","",""],[7,"ISO_8859_4","",""],[7,"ISO_8859_5","",""],[7,"ISO_8859_6","",""],[7,"ISO_8859_7","",""],[7,"ISO_8859_8","",""],[7,"ISO_8859_10","",""],[7,"ISO_8859_13","",""],[7,"ISO_8859_14","",""],[7,"ISO_8859_15","",""],[7,"ISO_8859_16","",""],[7,"KOI8_R","",""],[7,"KOI8_U","",""],[7,"MAC_ROMAN","",""],[7,"WINDOWS_874","",""],[7,"WINDOWS_1250","",""],[7,"WINDOWS_1251","",""],[7,"WINDOWS_1252","",""],[7,"WINDOWS_1253","",""],[7,"WINDOWS_1254","",""],[7,"WINDOWS_1255","",""],[7,"WINDOWS_1256","",""],[7,"WINDOWS_1257","",""],[7,"WINDOWS_1258","",""],[7,"MAC_CYRILLIC","",""],[7,"UTF_8","",""],[7,"UTF_16LE","",""],[7,"UTF_16BE","",""],[7,"WINDOWS_949","",""],[7,"EUC_JP","",""],[7,"WINDOWS_31J","",""],[7,"ISO_2022_JP","",""],[7,"GB18030","",""],[7,"HZ","",""],[7,"BIG5_2003","",""],[0,"label","encoding","An interface for retrieving an encoding (or a set of encodings) from a string/numeric label."],[5,"encoding_from_whatwg_label","encoding::label","Returns an encoding from given label, defined in the WHATWG Encoding standard, if any.\nImplements \"get an encoding\" algorithm: http://encoding.spec.whatwg.org/#concept-encoding-get"],[5,"encoding_from_windows_code_page","","Returns an encoding from Windows code page number.\nhttp://msdn.microsoft.com/en-us/library/windows/desktop/dd317756%28v=vs.85%29.aspx\nSometimes it can return a *superset* of the requested encoding, e.g. for several CJK encodings."]],"paths":[[3,"CodecError"],[4,"DecoderTrap"],[4,"EncoderTrap"],[8,"ByteWriter"],[8,"StringWriter"],[8,"RawEncoder"],[8,"RawDecoder"],[8,"Encoding"],[3,"Vec"],[3,"String"],[3,"ErrorEncoding"],[3,"ErrorEncoder"],[3,"ErrorDecoder"],[3,"ASCIIEncoding"],[3,"ASCIIEncoder"],[3,"ASCIIDecoder"],[3,"SingleByteEncoding"],[3,"SingleByteEncoder"],[3,"SingleByteDecoder"],[3,"UTF8Encoding"],[3,"UTF8Encoder"],[3,"UTF8Decoder"],[3,"Little"],[3,"Big"],[3,"UTF16Encoding"],[3,"UTF16Encoder"],[3,"UTF16Decoder"],[3,"Windows949Encoding"],[3,"Windows949Encoder"],[3,"Windows949Decoder"],[3,"EUCJPEncoding"],[3,"EUCJPEncoder"],[3,"EUCJP0212Decoder"],[3,"Windows31JEncoding"],[3,"Windows31JEncoder"],[3,"Windows31JDecoder"],[3,"ISO2022JPEncoding"],[3,"ISO2022JPEncoder"],[3,"ISO2022JPDecoder"],[3,"GB18030Encoding"],[3,"GB18030Encoder"],[3,"GB18030Decoder"],[3,"HZEncoding"],[3,"HZEncoder"],[3,"HZDecoder"],[3,"BigFive2003Encoding"],[3,"BigFive2003Encoder"],[3,"BigFive2003HKSCS2008Decoder"],[3,"EncoderOnlyUTF8Encoding"]]};

searchIndex['time'] = {"items":[[0,"","time","Simple time handling."],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds."],[12,"sec","","",0],[12,"nsec","","",0],[3,"PreciseTime","","An opaque structure representing a moment in time."],[3,"SteadyTime","","A structure representing a moment in time."],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month, day, and so on),\nalso called a broken-down time value."],[12,"tm_sec","","Seconds after the minute - [0, 60]",1],[12,"tm_min","","Minutes after the hour - [0, 59]",1],[12,"tm_hour","","Hours after midnight - [0, 23]",1],[12,"tm_mday","","Day of the month - [1, 31]",1],[12,"tm_mon","","Months since January - [0, 11]",1],[12,"tm_year","","Years since 1900",1],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1],[12,"tm_yday","","Days since January 1 - [0, 365]",1],[12,"tm_isdst","","Daylight Saving Time flag.",1],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time value, including any\nadjustment for Daylight Saving Time. This is the number of seconds east of UTC. For example,\nfor U.S. Pacific Daylight Time, the value is -7*60*60 = -25200.",1],[12,"tm_nsec","","Nanoseconds after the second - [0, 10<sup>9</sup> - 1]",1],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display."],[4,"ParseError","",""],[13,"InvalidSecond","","",2],[13,"InvalidMinute","","",2],[13,"InvalidHour","","",2],[13,"InvalidDay","","",2],[13,"InvalidMonth","","",2],[13,"InvalidYear","","",2],[13,"InvalidDayOfWeek","","",2],[13,"InvalidDayOfMonth","","",2],[13,"InvalidDayOfYear","","",2],[13,"InvalidZoneOffset","","",2],[13,"InvalidTime","","",2],[13,"MissingFormatConverter","","",2],[13,"InvalidFormatSpecifier","","",2],[13,"UnexpectedCharacter","","",2],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z."],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch."],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch."],[5,"tzset","",""],[5,"empty_tm","",""],[5,"at_utc","","Returns the specified time in UTC"],[5,"now_utc","","Returns the current time in UTC"],[5,"at","","Returns the specified time in the local timezone"],[5,"now","","Returns the current time in the local timezone"],[5,"strptime","","Parses the time from the string according to the format string."],[5,"strftime","","Formats the time according to the format string."],[11,"fmt","","",0],[11,"cmp","","",0],[11,"partial_cmp","","",0],[11,"lt","","",0],[11,"le","","",0],[11,"gt","","",0],[11,"ge","","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"clone","","",0],[11,"new","","",0],[6,"Output","",""],[11,"add","","",0],[6,"Output","",""],[11,"sub","","",0],[6,"Output","",""],[11,"sub","","",0],[11,"clone","","",3],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",3],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",3],[11,"fmt","","",4],[11,"eq","","",4],[11,"ne","","",4],[11,"cmp","","",4],[11,"partial_cmp","","",4],[11,"lt","","",4],[11,"le","","",4],[11,"gt","","",4],[11,"ge","","",4],[11,"clone","","",4],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",4],[11,"fmt","","",4],[6,"Output","",""],[11,"sub","","",4],[6,"Output","",""],[11,"sub","","",4],[6,"Output","",""],[11,"add","","",4],[11,"fmt","","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"clone","","",1],[6,"Output","",""],[11,"add","","The resulting Tm is in UTC.",1],[6,"Output","",""],[11,"sub","","The resulting Tm is in UTC.",1],[11,"partial_cmp","","",1],[11,"cmp","","",1],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1],[11,"to_local","","Convert time to the local timezone",1],[11,"to_utc","","Convert time to the UTC",1],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1],[11,"strftime","","Formats the time according to the format string.",1],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1],[11,"fmt","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"fmt","","",2],[11,"fmt","","",5],[11,"fmt","","",5]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"PreciseTime"],[3,"SteadyTime"],[3,"TmFmt"]]};

searchIndex['encoding-index-simpchinese'] = {"items":[[0,"","encoding-index-simpchinese","Simplified Chinese index tables for\n[rust-encoding](https://github.com/lifthrasiir/rust-encoding)."],[0,"gb18030","","GB 18030 two-byte area."],[5,"forward","encoding-index-simpchinese::gb18030","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"gb18030_ranges","encoding-index-simpchinese","GB 18030 four-byte area."],[5,"forward","encoding-index-simpchinese::gb18030_ranges","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."]],"paths":[]};

searchIndex['encoding-index-singlebyte'] = {"items":[[0,"","encoding-index-singlebyte","Single-byte index tables for\n[rust-encoding](https://github.com/lifthrasiir/rust-encoding)."],[0,"ibm866","","IBM code page 866."],[5,"forward","encoding-index-singlebyte::ibm866","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"iso_8859_2","encoding-index-singlebyte","ISO 8859-2."],[5,"forward","encoding-index-singlebyte::iso_8859_2","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"iso_8859_3","encoding-index-singlebyte","ISO 8859-3."],[5,"forward","encoding-index-singlebyte::iso_8859_3","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"iso_8859_4","encoding-index-singlebyte","ISO 8859-4."],[5,"forward","encoding-index-singlebyte::iso_8859_4","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"iso_8859_5","encoding-index-singlebyte","ISO 8859-5."],[5,"forward","encoding-index-singlebyte::iso_8859_5","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"iso_8859_6","encoding-index-singlebyte","ISO 8859-6."],[5,"forward","encoding-index-singlebyte::iso_8859_6","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"iso_8859_7","encoding-index-singlebyte","ISO 8859-7."],[5,"forward","encoding-index-singlebyte::iso_8859_7","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"iso_8859_8","encoding-index-singlebyte","ISO 8859-8 (either visual or logical)."],[5,"forward","encoding-index-singlebyte::iso_8859_8","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"iso_8859_10","encoding-index-singlebyte","ISO 8859-10."],[5,"forward","encoding-index-singlebyte::iso_8859_10","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"iso_8859_13","encoding-index-singlebyte","ISO 8859-13."],[5,"forward","encoding-index-singlebyte::iso_8859_13","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"iso_8859_14","encoding-index-singlebyte","ISO 8859-14."],[5,"forward","encoding-index-singlebyte::iso_8859_14","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"iso_8859_15","encoding-index-singlebyte","ISO 8859-15."],[5,"forward","encoding-index-singlebyte::iso_8859_15","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"iso_8859_16","encoding-index-singlebyte","ISO 8859-16."],[5,"forward","encoding-index-singlebyte::iso_8859_16","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"koi8_r","encoding-index-singlebyte","KOI8-R."],[5,"forward","encoding-index-singlebyte::koi8_r","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"koi8_u","encoding-index-singlebyte","KOI8-U."],[5,"forward","encoding-index-singlebyte::koi8_u","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"macintosh","encoding-index-singlebyte","MacRoman."],[5,"forward","encoding-index-singlebyte::macintosh","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"windows_874","encoding-index-singlebyte","Windows code page 874."],[5,"forward","encoding-index-singlebyte::windows_874","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"windows_1250","encoding-index-singlebyte","Windows code page 1250."],[5,"forward","encoding-index-singlebyte::windows_1250","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"windows_1251","encoding-index-singlebyte","Windows code page 1251."],[5,"forward","encoding-index-singlebyte::windows_1251","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"windows_1252","encoding-index-singlebyte","Windows code page 1252."],[5,"forward","encoding-index-singlebyte::windows_1252","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"windows_1253","encoding-index-singlebyte","Windows code page 1253."],[5,"forward","encoding-index-singlebyte::windows_1253","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"windows_1254","encoding-index-singlebyte","Windows code page 1254."],[5,"forward","encoding-index-singlebyte::windows_1254","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"windows_1255","encoding-index-singlebyte","Windows code page 1254."],[5,"forward","encoding-index-singlebyte::windows_1255","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"windows_1256","encoding-index-singlebyte","Windows code page 1256."],[5,"forward","encoding-index-singlebyte::windows_1256","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"windows_1257","encoding-index-singlebyte","Windows code page 1257."],[5,"forward","encoding-index-singlebyte::windows_1257","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"windows_1258","encoding-index-singlebyte","Windows code page 1258."],[5,"forward","encoding-index-singlebyte::windows_1258","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[0,"x_mac_cyrillic","encoding-index-singlebyte","MacCyrillic."],[5,"forward","encoding-index-singlebyte::x_mac_cyrillic","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."]],"paths":[]};

searchIndex['encoding-index-japanese'] = {"items":[[0,"","encoding-index-japanese","Japanese index tables for [rust-encoding](https://github.com/lifthrasiir/rust-encoding)."],[0,"jis0208","","JIS X 0208 with common extensions."],[5,"forward","encoding-index-japanese::jis0208","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."],[5,"backward_remapped","","Returns the index shift_jis pointer for code point `code`."],[0,"jis0212","encoding-index-japanese","JIS X 0212."],[5,"forward","encoding-index-japanese::jis0212","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."]],"paths":[]};

searchIndex['encoding-index-tradchinese'] = {"items":[[0,"","encoding-index-tradchinese","Traditional Chinese index tables for\n[rust-encoding](https://github.com/lifthrasiir/rust-encoding)."],[0,"big5","","Big5 and HKSCS."],[5,"forward","encoding-index-tradchinese::big5","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."]],"paths":[]};

searchIndex['encoding-index-korean'] = {"items":[[0,"","encoding-index-korean","Korean index tables for [rust-encoding](https://github.com/lifthrasiir/rust-encoding)."],[0,"euc_kr","","KS X 1001 plus Unified Hangul Code."],[5,"forward","encoding-index-korean::euc_kr","Returns the index code point for pointer `code` in this index."],[5,"backward","","Returns the index pointer for code point `code` in this index."]],"paths":[]};

searchIndex['gcc'] = {"items":[[0,"","gcc","A library for build scripts to compile custom C code"],[3,"Config","","Extra configuration to pass to gcc."],[5,"compile_library","","Compile a library from the given set of input C files."],[11,"new","","Construct a new instance of a blank set of configuration.",0],[11,"include","","Add a directory to the `-I` or include path for headers",0],[11,"define","","Specify a `-D` variable with an optional value.",0],[11,"object","","Add an arbitrary object file to link in",0],[11,"flag","","Add an arbitrary flag to the invocation of the compiler",0],[11,"file","","Add a file which will be compiled",0],[11,"compile","","Run the compiler, generating the file `output`",0]],"paths":[[3,"Config"]]};

searchIndex['pkg-config'] = {"items":[[0,"","pkg-config","A build dependency for Cargo libraries to find system artifacts through the\n`pkg-config` utility."],[3,"Config","",""],[3,"Library","",""],[12,"libs","","",0],[12,"link_paths","","",0],[12,"frameworks","","",0],[12,"framework_paths","","",0],[12,"include_paths","","",0],[5,"target_supported","",""],[5,"find_library","","Simple shortcut for using all default options for finding a library."],[11,"clone","","",1],[11,"fmt","","",0],[11,"new","","Creates a new set of configuration options which are all initially set\nto \"blank\".",1],[11,"statik","","Indicate whether the `--static` flag should be passed.",1],[11,"atleast_version","","Indicate that the library must be at least version `vers`.",1],[11,"find","","Run `pkg-config` to find the library `name`.",1]],"paths":[[3,"Library"],[3,"Config"]]};

searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries"],[0,"types","",""],[0,"common","libc::types",""],[0,"c95","libc::types::common",""],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C."],[13,"__variant1","","",0],[13,"__variant2","","",0],[4,"FILE","",""],[4,"fpos_t","",""],[0,"c99","libc::types::common",""],[6,"int8_t","libc::types::common::c99",""],[6,"int16_t","",""],[6,"int32_t","",""],[6,"int64_t","",""],[6,"uint8_t","",""],[6,"uint16_t","",""],[6,"uint32_t","",""],[6,"uint64_t","",""],[0,"posix88","libc::types::common",""],[4,"DIR","libc::types::common::posix88",""],[4,"dirent_t","",""],[0,"os","libc::types",""],[0,"common","libc::types::os",""],[0,"posix01","libc::types::os::common",""],[3,"glob_t","libc::types::os::common::posix01",""],[12,"gl_pathc","","",1],[12,"__unused1","","",1],[12,"gl_offs","","",1],[12,"__unused2","","",1],[12,"gl_pathv","","",1],[12,"__unused3","","",1],[12,"__unused4","","",1],[12,"__unused5","","",1],[12,"__unused6","","",1],[12,"__unused7","","",1],[12,"__unused8","","",1],[3,"timeval","",""],[12,"tv_sec","","",2],[12,"tv_usec","","",2],[3,"timespec","",""],[12,"tv_sec","","",3],[12,"tv_nsec","","",3],[4,"timezone","",""],[6,"pthread_t","",""],[6,"sighandler_t","",""],[0,"bsd44","libc::types::os::common",""],[3,"sockaddr","libc::types::os::common::bsd44",""],[12,"sa_len","","",4],[12,"sa_family","","",4],[12,"sa_data","","",4],[3,"sockaddr_storage","",""],[12,"ss_len","","",5],[12,"ss_family","","",5],[12,"__ss_pad1","","",5],[12,"__ss_align","","",5],[12,"__ss_pad2","","",5],[3,"sockaddr_in","",""],[12,"sin_len","","",6],[12,"sin_family","","",6],[12,"sin_port","","",6],[12,"sin_addr","","",6],[12,"sin_zero","","",6],[3,"in_addr","",""],[12,"s_addr","","",7],[3,"sockaddr_in6","",""],[12,"sin6_len","","",8],[12,"sin6_family","","",8],[12,"sin6_port","","",8],[12,"sin6_flowinfo","","",8],[12,"sin6_addr","","",8],[12,"sin6_scope_id","","",8],[3,"in6_addr","",""],[12,"s6_addr","","",9],[3,"ip_mreq","",""],[12,"imr_multiaddr","","",10],[12,"imr_interface","","",10],[3,"ip6_mreq","",""],[12,"ipv6mr_multiaddr","","",11],[12,"ipv6mr_interface","","",11],[3,"addrinfo","",""],[12,"ai_flags","","",12],[12,"ai_family","","",12],[12,"ai_socktype","","",12],[12,"ai_protocol","","",12],[12,"ai_addrlen","","",12],[12,"ai_canonname","","",12],[12,"ai_addr","","",12],[12,"ai_next","","",12],[3,"sockaddr_un","",""],[12,"sun_len","","",13],[12,"sun_family","","",13],[12,"sun_path","","",13],[3,"ifaddrs","",""],[12,"ifa_next","","",14],[12,"ifa_name","","",14],[12,"ifa_flags","","",14],[12,"ifa_addr","","",14],[12,"ifa_netmask","","",14],[12,"ifa_dstaddr","","",14],[12,"ifa_data","","",14],[6,"socklen_t","",""],[6,"sa_family_t","",""],[6,"in_port_t","",""],[6,"in_addr_t","",""],[0,"arch","libc::types::os",""],[0,"c95","libc::types::os::arch",""],[6,"c_char","libc::types::os::arch::c95",""],[6,"c_schar","",""],[6,"c_uchar","",""],[6,"c_short","",""],[6,"c_ushort","",""],[6,"c_int","",""],[6,"c_uint","",""],[6,"c_long","",""],[6,"c_ulong","",""],[6,"c_float","",""],[6,"c_double","",""],[6,"size_t","",""],[6,"ptrdiff_t","",""],[6,"clock_t","",""],[6,"time_t","",""],[6,"suseconds_t","",""],[6,"wchar_t","",""],[0,"c99","libc::types::os::arch",""],[6,"c_longlong","libc::types::os::arch::c99",""],[6,"c_ulonglong","",""],[6,"intptr_t","",""],[6,"uintptr_t","",""],[6,"intmax_t","",""],[6,"uintmax_t","",""],[0,"posix88","libc::types::os::arch",""],[6,"off_t","libc::types::os::arch::posix88",""],[6,"dev_t","",""],[6,"ino_t","",""],[6,"pid_t","",""],[6,"uid_t","",""],[6,"gid_t","",""],[6,"useconds_t","",""],[6,"mode_t","",""],[6,"ssize_t","",""],[0,"posix01","libc::types::os::arch",""],[3,"stat","libc::types::os::arch::posix01",""],[12,"st_dev","","",15],[12,"st_mode","","",15],[12,"st_nlink","","",15],[12,"st_ino","","",15],[12,"st_uid","","",15],[12,"st_gid","","",15],[12,"st_rdev","","",15],[12,"st_atime","","",15],[12,"st_atime_nsec","","",15],[12,"st_mtime","","",15],[12,"st_mtime_nsec","","",15],[12,"st_ctime","","",15],[12,"st_ctime_nsec","","",15],[12,"st_birthtime","","",15],[12,"st_birthtime_nsec","","",15],[12,"st_size","","",15],[12,"st_blocks","","",15],[12,"st_blksize","","",15],[12,"st_flags","","",15],[12,"st_gen","","",15],[12,"st_lspare","","",15],[12,"st_qspare","","",15],[3,"utimbuf","",""],[12,"actime","","",16],[12,"modtime","","",16],[3,"pthread_attr_t","",""],[12,"__sig","","",17],[12,"__opaque","","",17],[6,"nlink_t","",""],[6,"blksize_t","",""],[6,"blkcnt_t","",""],[0,"extra","libc::types::os::arch",""],[3,"mach_timebase_info","libc::types::os::arch::extra",""],[12,"numer","","",18],[12,"denom","","",18],[6,"mach_timebase_info_data_t","",""],[0,"consts","libc",""],[0,"os","libc::consts",""],[0,"c95","libc::consts::os",""],[17,"EXIT_FAILURE","libc::consts::os::c95",""],[17,"EXIT_SUCCESS","",""],[17,"RAND_MAX","",""],[17,"EOF","",""],[17,"SEEK_SET","",""],[17,"SEEK_CUR","",""],[17,"SEEK_END","",""],[17,"_IOFBF","",""],[17,"_IONBF","",""],[17,"_IOLBF","",""],[17,"BUFSIZ","",""],[17,"FOPEN_MAX","",""],[17,"FILENAME_MAX","",""],[17,"L_tmpnam","",""],[17,"TMP_MAX","",""],[0,"posix88","libc::consts::os",""],[17,"O_RDONLY","libc::consts::os::posix88",""],[17,"O_WRONLY","",""],[17,"O_RDWR","",""],[17,"O_APPEND","",""],[17,"O_CREAT","",""],[17,"O_EXCL","",""],[17,"O_TRUNC","",""],[17,"S_IFIFO","",""],[17,"S_IFCHR","",""],[17,"S_IFBLK","",""],[17,"S_IFDIR","",""],[17,"S_IFREG","",""],[17,"S_IFLNK","",""],[17,"S_IFMT","",""],[17,"S_IEXEC","",""],[17,"S_IWRITE","",""],[17,"S_IREAD","",""],[17,"S_IRWXU","",""],[17,"S_IXUSR","",""],[17,"S_IWUSR","",""],[17,"S_IRUSR","",""],[17,"F_OK","",""],[17,"R_OK","",""],[17,"W_OK","",""],[17,"X_OK","",""],[17,"STDIN_FILENO","",""],[17,"STDOUT_FILENO","",""],[17,"STDERR_FILENO","",""],[17,"F_LOCK","",""],[17,"F_TEST","",""],[17,"F_TLOCK","",""],[17,"F_ULOCK","",""],[17,"SIGHUP","",""],[17,"SIGINT","",""],[17,"SIGQUIT","",""],[17,"SIGILL","",""],[17,"SIGABRT","",""],[17,"SIGFPE","",""],[17,"SIGKILL","",""],[17,"SIGSEGV","",""],[17,"SIGPIPE","",""],[17,"SIGALRM","",""],[17,"SIGTERM","",""],[17,"PROT_NONE","",""],[17,"PROT_READ","",""],[17,"PROT_WRITE","",""],[17,"PROT_EXEC","",""],[17,"MAP_FILE","",""],[17,"MAP_SHARED","",""],[17,"MAP_PRIVATE","",""],[17,"MAP_FIXED","",""],[17,"MAP_ANON","",""],[17,"MAP_FAILED","",""],[17,"MCL_CURRENT","",""],[17,"MCL_FUTURE","",""],[17,"MS_ASYNC","",""],[17,"MS_INVALIDATE","",""],[17,"MS_SYNC","",""],[17,"MS_KILLPAGES","",""],[17,"MS_DEACTIVATE","",""],[17,"EPERM","",""],[17,"ENOENT","",""],[17,"ESRCH","",""],[17,"EINTR","",""],[17,"EIO","",""],[17,"ENXIO","",""],[17,"E2BIG","",""],[17,"ENOEXEC","",""],[17,"EBADF","",""],[17,"ECHILD","",""],[17,"EDEADLK","",""],[17,"ENOMEM","",""],[17,"EACCES","",""],[17,"EFAULT","",""],[17,"ENOTBLK","",""],[17,"EBUSY","",""],[17,"EEXIST","",""],[17,"EXDEV","",""],[17,"ENODEV","",""],[17,"ENOTDIR","",""],[17,"EISDIR","",""],[17,"EINVAL","",""],[17,"ENFILE","",""],[17,"EMFILE","",""],[17,"ENOTTY","",""],[17,"ETXTBSY","",""],[17,"EFBIG","",""],[17,"ENOSPC","",""],[17,"ESPIPE","",""],[17,"EROFS","",""],[17,"EMLINK","",""],[17,"EPIPE","",""],[17,"EDOM","",""],[17,"ERANGE","",""],[17,"EAGAIN","",""],[17,"EWOULDBLOCK","",""],[17,"EINPROGRESS","",""],[17,"EALREADY","",""],[17,"ENOTSOCK","",""],[17,"EDESTADDRREQ","",""],[17,"EMSGSIZE","",""],[17,"EPROTOTYPE","",""],[17,"ENOPROTOOPT","",""],[17,"EPROTONOSUPPORT","",""],[17,"ESOCKTNOSUPPORT","",""],[17,"ENOTSUP","",""],[17,"EPFNOSUPPORT","",""],[17,"EAFNOSUPPORT","",""],[17,"EADDRINUSE","",""],[17,"EADDRNOTAVAIL","",""],[17,"ENETDOWN","",""],[17,"ENETUNREACH","",""],[17,"ENETRESET","",""],[17,"ECONNABORTED","",""],[17,"ECONNRESET","",""],[17,"ENOBUFS","",""],[17,"EISCONN","",""],[17,"ENOTCONN","",""],[17,"ESHUTDOWN","",""],[17,"ETOOMANYREFS","",""],[17,"ETIMEDOUT","",""],[17,"ECONNREFUSED","",""],[17,"ELOOP","",""],[17,"ENAMETOOLONG","",""],[17,"EHOSTDOWN","",""],[17,"EHOSTUNREACH","",""],[17,"ENOTEMPTY","",""],[17,"EPROCLIM","",""],[17,"EUSERS","",""],[17,"EDQUOT","",""],[17,"ESTALE","",""],[17,"EREMOTE","",""],[17,"EBADRPC","",""],[17,"ERPCMISMATCH","",""],[17,"EPROGUNAVAIL","",""],[17,"EPROGMISMATCH","",""],[17,"EPROCUNAVAIL","",""],[17,"ENOLCK","",""],[17,"ENOSYS","",""],[17,"EFTYPE","",""],[17,"EAUTH","",""],[17,"ENEEDAUTH","",""],[17,"EPWROFF","",""],[17,"EDEVERR","",""],[17,"EOVERFLOW","",""],[17,"EBADEXEC","",""],[17,"EBADARCH","",""],[17,"ESHLIBVERS","",""],[17,"EBADMACHO","",""],[17,"ECANCELED","",""],[17,"EIDRM","",""],[17,"ENOMSG","",""],[17,"EILSEQ","",""],[17,"ENOATTR","",""],[17,"EBADMSG","",""],[17,"EMULTIHOP","",""],[17,"ENODATA","",""],[17,"ENOLINK","",""],[17,"ENOSR","",""],[17,"ENOSTR","",""],[17,"EPROTO","",""],[17,"ETIME","",""],[17,"EOPNOTSUPP","",""],[17,"ENOPOLICY","",""],[17,"ENOTRECOVERABLE","",""],[17,"EOWNERDEAD","",""],[17,"EQFULL","",""],[17,"ELAST","",""],[0,"posix01","libc::consts::os",""],[17,"F_DUPFD","libc::consts::os::posix01",""],[17,"F_GETFD","",""],[17,"F_SETFD","",""],[17,"F_GETFL","",""],[17,"F_SETFL","",""],[17,"SIGTRAP","",""],[17,"SIGPIPE","",""],[17,"SIG_IGN","",""],[17,"GLOB_APPEND","",""],[17,"GLOB_DOOFFS","",""],[17,"GLOB_ERR","",""],[17,"GLOB_MARK","",""],[17,"GLOB_NOCHECK","",""],[17,"GLOB_NOSORT","",""],[17,"GLOB_NOESCAPE","",""],[17,"GLOB_NOSPACE","",""],[17,"GLOB_ABORTED","",""],[17,"GLOB_NOMATCH","",""],[17,"POSIX_MADV_NORMAL","",""],[17,"POSIX_MADV_RANDOM","",""],[17,"POSIX_MADV_SEQUENTIAL","",""],[17,"POSIX_MADV_WILLNEED","",""],[17,"POSIX_MADV_DONTNEED","",""],[17,"_SC_IOV_MAX","",""],[17,"_SC_GETGR_R_SIZE_MAX","",""],[17,"_SC_GETPW_R_SIZE_MAX","",""],[17,"_SC_LOGIN_NAME_MAX","",""],[17,"_SC_MQ_PRIO_MAX","",""],[17,"_SC_THREAD_ATTR_STACKADDR","",""],[17,"_SC_THREAD_ATTR_STACKSIZE","",""],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","",""],[17,"_SC_THREAD_KEYS_MAX","",""],[17,"_SC_THREAD_PRIO_INHERIT","",""],[17,"_SC_THREAD_PRIO_PROTECT","",""],[17,"_SC_THREAD_PRIORITY_SCHEDULING","",""],[17,"_SC_THREAD_PROCESS_SHARED","",""],[17,"_SC_THREAD_SAFE_FUNCTIONS","",""],[17,"_SC_THREAD_STACK_MIN","",""],[17,"_SC_THREAD_THREADS_MAX","",""],[17,"_SC_THREADS","",""],[17,"_SC_TTY_NAME_MAX","",""],[17,"_SC_ATEXIT_MAX","",""],[17,"_SC_XOPEN_CRYPT","",""],[17,"_SC_XOPEN_ENH_I18N","",""],[17,"_SC_XOPEN_LEGACY","",""],[17,"_SC_XOPEN_REALTIME","",""],[17,"_SC_XOPEN_REALTIME_THREADS","",""],[17,"_SC_XOPEN_SHM","",""],[17,"_SC_XOPEN_UNIX","",""],[17,"_SC_XOPEN_VERSION","",""],[17,"_SC_XOPEN_XCU_VERSION","",""],[17,"PTHREAD_CREATE_JOINABLE","",""],[17,"PTHREAD_CREATE_DETACHED","",""],[17,"PTHREAD_STACK_MIN","",""],[0,"bsd44","libc::consts::os",""],[17,"MADV_NORMAL","libc::consts::os::bsd44",""],[17,"MADV_RANDOM","",""],[17,"MADV_SEQUENTIAL","",""],[17,"MADV_WILLNEED","",""],[17,"MADV_DONTNEED","",""],[17,"MADV_FREE","",""],[17,"MADV_ZERO_WIRED_PAGES","",""],[17,"MADV_FREE_REUSABLE","",""],[17,"MADV_FREE_REUSE","",""],[17,"MADV_CAN_REUSE","",""],[17,"MINCORE_INCORE","",""],[17,"MINCORE_REFERENCED","",""],[17,"MINCORE_MODIFIED","",""],[17,"MINCORE_REFERENCED_OTHER","",""],[17,"MINCORE_MODIFIED_OTHER","",""],[17,"AF_UNIX","",""],[17,"AF_INET","",""],[17,"AF_INET6","",""],[17,"SOCK_STREAM","",""],[17,"SOCK_DGRAM","",""],[17,"SOCK_RAW","",""],[17,"IPPROTO_TCP","",""],[17,"IPPROTO_IP","",""],[17,"IPPROTO_IPV6","",""],[17,"IP_MULTICAST_TTL","",""],[17,"IP_MULTICAST_LOOP","",""],[17,"IP_TTL","",""],[17,"IP_HDRINCL","",""],[17,"IP_ADD_MEMBERSHIP","",""],[17,"IP_DROP_MEMBERSHIP","",""],[17,"IPV6_ADD_MEMBERSHIP","",""],[17,"IPV6_DROP_MEMBERSHIP","",""],[17,"TCP_NODELAY","",""],[17,"TCP_KEEPALIVE","",""],[17,"SOL_SOCKET","",""],[17,"SO_KEEPALIVE","",""],[17,"SO_BROADCAST","",""],[17,"SO_REUSEADDR","",""],[17,"SO_ERROR","",""],[17,"IFF_LOOPBACK","",""],[17,"SHUT_RD","",""],[17,"SHUT_WR","",""],[17,"SHUT_RDWR","",""],[0,"extra","libc::consts::os",""],[17,"O_DSYNC","libc::consts::os::extra",""],[17,"O_SYNC","",""],[17,"O_NONBLOCK","",""],[17,"F_FULLFSYNC","",""],[17,"MAP_COPY","",""],[17,"MAP_RENAME","",""],[17,"MAP_NORESERVE","",""],[17,"MAP_NOEXTEND","",""],[17,"MAP_HASSEMAPHORE","",""],[17,"MAP_NOCACHE","",""],[17,"MAP_JIT","",""],[17,"MAP_STACK","",""],[17,"IPPROTO_RAW","",""],[0,"sysconf","libc::consts::os",""],[17,"_SC_ARG_MAX","libc::consts::os::sysconf",""],[17,"_SC_CHILD_MAX","",""],[17,"_SC_CLK_TCK","",""],[17,"_SC_NGROUPS_MAX","",""],[17,"_SC_OPEN_MAX","",""],[17,"_SC_JOB_CONTROL","",""],[17,"_SC_SAVED_IDS","",""],[17,"_SC_VERSION","",""],[17,"_SC_BC_BASE_MAX","",""],[17,"_SC_BC_DIM_MAX","",""],[17,"_SC_BC_SCALE_MAX","",""],[17,"_SC_BC_STRING_MAX","",""],[17,"_SC_COLL_WEIGHTS_MAX","",""],[17,"_SC_EXPR_NEST_MAX","",""],[17,"_SC_LINE_MAX","",""],[17,"_SC_RE_DUP_MAX","",""],[17,"_SC_2_VERSION","",""],[17,"_SC_2_C_BIND","",""],[17,"_SC_2_C_DEV","",""],[17,"_SC_2_CHAR_TERM","",""],[17,"_SC_2_FORT_DEV","",""],[17,"_SC_2_FORT_RUN","",""],[17,"_SC_2_LOCALEDEF","",""],[17,"_SC_2_SW_DEV","",""],[17,"_SC_2_UPE","",""],[17,"_SC_STREAM_MAX","",""],[17,"_SC_TZNAME_MAX","",""],[17,"_SC_ASYNCHRONOUS_IO","",""],[17,"_SC_PAGESIZE","",""],[17,"_SC_MEMLOCK","",""],[17,"_SC_MEMLOCK_RANGE","",""],[17,"_SC_MEMORY_PROTECTION","",""],[17,"_SC_MESSAGE_PASSING","",""],[17,"_SC_PRIORITIZED_IO","",""],[17,"_SC_PRIORITY_SCHEDULING","",""],[17,"_SC_REALTIME_SIGNALS","",""],[17,"_SC_SEMAPHORES","",""],[17,"_SC_FSYNC","",""],[17,"_SC_SHARED_MEMORY_OBJECTS","",""],[17,"_SC_SYNCHRONIZED_IO","",""],[17,"_SC_TIMERS","",""],[17,"_SC_AIO_LISTIO_MAX","",""],[17,"_SC_AIO_MAX","",""],[17,"_SC_AIO_PRIO_DELTA_MAX","",""],[17,"_SC_DELAYTIMER_MAX","",""],[17,"_SC_MQ_OPEN_MAX","",""],[17,"_SC_MAPPED_FILES","",""],[17,"_SC_RTSIG_MAX","",""],[17,"_SC_SEM_NSEMS_MAX","",""],[17,"_SC_SEM_VALUE_MAX","",""],[17,"_SC_SIGQUEUE_MAX","",""],[17,"_SC_TIMER_MAX","",""],[17,"_SC_XBS5_ILP32_OFF32","",""],[17,"_SC_XBS5_ILP32_OFFBIG","",""],[17,"_SC_XBS5_LP64_OFF64","",""],[17,"_SC_XBS5_LPBIG_OFFBIG","",""],[0,"funcs","libc",""],[0,"c95","libc::funcs",""],[0,"ctype","libc::funcs::c95",""],[5,"isalnum","libc::funcs::c95::ctype",""],[5,"isalpha","",""],[5,"iscntrl","",""],[5,"isdigit","",""],[5,"isgraph","",""],[5,"islower","",""],[5,"isprint","",""],[5,"ispunct","",""],[5,"isspace","",""],[5,"isupper","",""],[5,"isxdigit","",""],[5,"tolower","",""],[5,"toupper","",""],[0,"stdio","libc::funcs::c95",""],[5,"fopen","libc::funcs::c95::stdio",""],[5,"freopen","",""],[5,"fflush","",""],[5,"fclose","",""],[5,"remove","",""],[5,"rename","",""],[5,"tmpfile","",""],[5,"setvbuf","",""],[5,"setbuf","",""],[5,"fgetc","",""],[5,"fgets","",""],[5,"fputc","",""],[5,"fputs","",""],[5,"puts","",""],[5,"ungetc","",""],[5,"fread","",""],[5,"fwrite","",""],[5,"fseek","",""],[5,"ftell","",""],[5,"rewind","",""],[5,"fgetpos","",""],[5,"fsetpos","",""],[5,"feof","",""],[5,"ferror","",""],[5,"perror","",""],[0,"stdlib","libc::funcs::c95",""],[5,"abs","libc::funcs::c95::stdlib",""],[5,"labs","",""],[5,"atof","",""],[5,"atoi","",""],[5,"strtod","",""],[5,"strtol","",""],[5,"strtoul","",""],[5,"calloc","",""],[5,"malloc","",""],[5,"realloc","",""],[5,"free","",""],[5,"exit","","Exits the running program in a possibly dangerous manner."],[5,"_exit","",""],[5,"atexit","",""],[5,"system","",""],[5,"getenv","",""],[5,"rand","",""],[5,"srand","",""],[0,"string","libc::funcs::c95",""],[5,"strcpy","libc::funcs::c95::string",""],[5,"strncpy","",""],[5,"strcat","",""],[5,"strncat","",""],[5,"strcmp","",""],[5,"strncmp","",""],[5,"strcoll","",""],[5,"strchr","",""],[5,"strrchr","",""],[5,"strspn","",""],[5,"strcspn","",""],[5,"strpbrk","",""],[5,"strstr","",""],[5,"strlen","",""],[5,"strerror","",""],[5,"strtok","",""],[5,"strxfrm","",""],[5,"wcslen","",""],[5,"memcmp","",""],[5,"memchr","",""],[0,"posix88","libc::funcs",""],[0,"stat_","libc::funcs::posix88",""],[5,"chmod","libc::funcs::posix88::stat_",""],[5,"fchmod","",""],[5,"fstat","",""],[5,"mkdir","",""],[5,"mkfifo","",""],[5,"stat","",""],[0,"stdio","libc::funcs::posix88",""],[5,"popen","libc::funcs::posix88::stdio",""],[5,"pclose","",""],[5,"fdopen","",""],[5,"fileno","",""],[0,"fcntl","libc::funcs::posix88",""],[5,"open","libc::funcs::posix88::fcntl",""],[5,"creat","",""],[5,"fcntl","",""],[0,"dirent","libc::funcs::posix88",""],[5,"opendir","libc::funcs::posix88::dirent",""],[5,"readdir_r","",""],[5,"closedir","",""],[5,"rewinddir","",""],[5,"seekdir","",""],[5,"telldir","",""],[0,"unistd","libc::funcs::posix88",""],[5,"access","libc::funcs::posix88::unistd",""],[5,"alarm","",""],[5,"chdir","",""],[5,"chown","",""],[5,"close","",""],[5,"dup","",""],[5,"dup2","",""],[5,"execv","",""],[5,"execve","",""],[5,"execvp","",""],[5,"fork","",""],[5,"fpathconf","",""],[5,"getcwd","",""],[5,"getegid","",""],[5,"geteuid","",""],[5,"getgid","",""],[5,"getgroups","",""],[5,"getlogin","",""],[5,"getopt","",""],[5,"getpgrp","",""],[5,"getpid","",""],[5,"getppid","",""],[5,"getuid","",""],[5,"getsid","",""],[5,"isatty","",""],[5,"link","",""],[5,"lseek","",""],[5,"pathconf","",""],[5,"pause","",""],[5,"pipe","",""],[5,"read","",""],[5,"rmdir","",""],[5,"setgid","",""],[5,"setpgid","",""],[5,"setsid","",""],[5,"setuid","",""],[5,"sleep","",""],[5,"usleep","",""],[5,"nanosleep","",""],[5,"sysconf","",""],[5,"tcgetpgrp","",""],[5,"ttyname","",""],[5,"unlink","",""],[5,"write","",""],[5,"pread","",""],[5,"pwrite","",""],[5,"utime","",""],[17,"_PC_NAME_MAX","",""],[0,"signal","libc::funcs::posix88",""],[5,"kill","libc::funcs::posix88::signal",""],[0,"mman","libc::funcs::posix88",""],[5,"mlock","libc::funcs::posix88::mman",""],[5,"munlock","",""],[5,"mlockall","",""],[5,"munlockall","",""],[5,"mmap","",""],[5,"munmap","",""],[5,"mprotect","",""],[5,"msync","",""],[5,"shm_open","",""],[5,"shm_unlink","",""],[0,"net","libc::funcs::posix88",""],[5,"if_nametoindex","libc::funcs::posix88::net",""],[0,"posix01","libc::funcs",""],[0,"stat_","libc::funcs::posix01",""],[5,"lstat","libc::funcs::posix01::stat_",""],[0,"unistd","libc::funcs::posix01",""],[5,"readlink","libc::funcs::posix01::unistd",""],[5,"fsync","",""],[5,"setenv","",""],[5,"unsetenv","",""],[5,"putenv","",""],[5,"symlink","",""],[5,"ftruncate","",""],[0,"signal","libc::funcs::posix01",""],[5,"signal","libc::funcs::posix01::signal",""],[0,"glob","libc::funcs::posix01",""],[5,"glob","libc::funcs::posix01::glob",""],[5,"globfree","",""],[0,"mman","libc::funcs::posix01",""],[5,"posix_madvise","libc::funcs::posix01::mman",""],[0,"bsd43","libc::funcs",""],[5,"socket","libc::funcs::bsd43",""],[5,"connect","",""],[5,"bind","",""],[5,"listen","",""],[5,"accept","",""],[5,"getpeername","",""],[5,"getsockname","",""],[5,"setsockopt","",""],[5,"recv","",""],[5,"send","",""],[5,"recvfrom","",""],[5,"sendto","",""],[5,"getifaddrs","",""],[5,"freeifaddrs","",""],[5,"shutdown","",""],[0,"bsd44","libc::funcs",""],[5,"ioctl","libc::funcs::bsd44",""],[5,"sysctl","",""],[5,"sysctlbyname","",""],[5,"sysctlnametomib","",""],[5,"getdtablesize","",""],[5,"madvise","",""],[5,"mincore","",""],[0,"extra","libc::funcs",""],[5,"_NSGetExecutablePath","libc::funcs::extra",""]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"mach_timebase_info"]]};

searchIndex['encoding_index_tests'] = {"items":[[0,"","encoding_index_tests","Macros and utilities for testing indices."],[14,"single_byte_tests!","","Makes a common test suite for single-byte indices."],[14,"multi_byte_tests!","","Makes a common test suite for multi-byte indices."],[14,"multi_byte_range_tests!","","Makes a common test suite for multi-byte range indices."]],"paths":[]};

initSearch(searchIndex);
