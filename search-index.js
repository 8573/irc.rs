var searchIndex = {};
searchIndex['irc'] = {"items":[[0,"","irc","A simple, thread-safe IRC library.",null,null],[0,"client","","A simple, thread-safe IRC client library.",null,null],[0,"conn","irc::client","Thread-safe connections on IrcStreams.",null,null],[3,"Connection","irc::client::conn","A thread-safe connection.",null,null],[4,"NetStream","","An abstraction over different networked streams.",null,null],[13,"UnsecuredTcpStream","","An unsecured TcpStream.",0,null],[13,"SslTcpStream","","An SSL-secured TcpStream.\nThis is only available when compiled with SSL support.",0,null],[6,"NetConnection","","A Connection over a buffered NetStream.",null,null],[11,"connect","","Creates a thread-safe TCP connection to the specified server.",1,{"inputs":[{"name":"connection"},{"name":"str"},{"name":"u16"}],"output":{"name":"result"}}],[11,"connect_ssl","","Creates a thread-safe TCP connection to the specified server over SSL.\nIf the library is compiled without SSL support, this method panics.",1,{"inputs":[{"name":"connection"},{"name":"str"},{"name":"u16"}],"output":{"name":"result"}}],[11,"reconnect","","Reconnects to the specified server, dropping the current connection.",1,{"inputs":[{"name":"connection"},{"name":"str"},{"name":"u16"}],"output":{"name":"result"}}],[11,"new","","Creates a new connection from an IrcReader and an IrcWriter.",1,{"inputs":[{"name":"connection"},{"name":"t"},{"name":"u"}],"output":{"name":"connection"}}],[11,"send","","Sends a Message over this connection.",1,{"inputs":[{"name":"connection"},{"name":"m"},{"name":"str"}],"output":{"name":"result"}}],[11,"recv","","Receives a single line from this connection.",1,{"inputs":[{"name":"connection"},{"name":"str"}],"output":{"name":"result"}}],[11,"reader","","Acquires the Reader lock.",1,{"inputs":[{"name":"connection"}],"output":{"name":"mutexguard"}}],[11,"writer","","Acquires the Writer lock.",1,{"inputs":[{"name":"connection"}],"output":{"name":"mutexguard"}}],[11,"read","","",0,null],[11,"write","","",0,null],[11,"flush","","",0,{"inputs":[{"name":"netstream"}],"output":{"name":"result"}}],[0,"data","irc::client","Data related to IRC functionality.",null,null],[0,"kinds","irc::client::data","Trait definitions of appropriate Writers and Buffers for use with this library.",null,null],[8,"IrcWrite","irc::client::data::kinds","Trait describing all possible Writers for this library.",null,null],[8,"IrcRead","","Trait describing all possible Readers for this library.",null,null],[0,"caps","irc::client::data","Enumeration of all supported IRCv3 capability extensions.",null,null],[4,"Capability","irc::client::data::caps","List of all supported IRCv3 capability extensions from the\n[IRCv3 specifications](http://ircv3.net/irc/).",null,null],[13,"MultiPrefix","","[multi-prefix](http://ircv3.net/specs/extensions/multi-prefix-3.1.html)",2,null],[13,"Sasl","","[sasl](http://ircv3.net/specs/extensions/sasl-3.1.html)",2,null],[13,"AccountNotify","","[account-notify](http://ircv3.net/specs/extensions/account-notify-3.1.html)",2,null],[13,"AwayNotify","","[away-notify](http://ircv3.net/specs/extensions/away-notify-3.1.html)",2,null],[13,"ExtendedJoin","","[extended-join](http://ircv3.net/specs/extensions/extended-join-3.1.html)",2,null],[13,"Metadata","","[metadata](http://ircv3.net/specs/core/metadata-3.2.html)",2,null],[13,"MetadataNotify","","[metadata-notify](http://ircv3.net/specs/core/metadata-3.2.html)",2,null],[13,"Monitor","","[monitor](http://ircv3.net/specs/core/monitor-3.2.html)",2,null],[13,"AccountTag","","[account-tag](http://ircv3.net/specs/extensions/account-tag-3.2.html)",2,null],[13,"Batch","","[batch](http://ircv3.net/specs/extensions/batch-3.2.html)",2,null],[13,"CapNotify","","[cap-notify](http://ircv3.net/specs/extensions/cap-notify-3.2.html)",2,null],[13,"ChgHost","","[chghost](http://ircv3.net/specs/extensions/chghost-3.2.html)",2,null],[13,"EchoMessage","","[echo-message](http://ircv3.net/specs/extensions/echo-message-3.2.html)",2,null],[13,"InviteNotify","","[invite-notify](http://ircv3.net/specs/extensions/invite-notify-3.2.html)",2,null],[13,"ServerTime","","[server-time](http://ircv3.net/specs/extensions/server-time-3.2.html)",2,null],[13,"UserhostInNames","","[userhost-in-names](http://ircv3.net/specs/extensions/userhost-in-names-3.2.html)",2,null],[13,"Custom","","Custom IRCv3 capability extensions",2,null],[4,"NegotiationVersion","","List of IRCv3 capability negotiation versions.",null,null],[13,"V301","","[IRCv3.1](http://ircv3.net/specs/core/capability-negotiation-3.1.html)",3,null],[13,"V302","","[IRCv3.2](http://ircv3.net/specs/core/capability-negotiation-3.2.html)",3,null],[11,"eq","","",2,{"inputs":[{"name":"capability"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"capability"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"capability"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",2,{"inputs":[{"name":"capability"}],"output":{"name":"str"}}],[0,"command","irc::client::data","Enumeration of all available client commands.",null,null],[4,"Command","irc::client::data::command","List of all client commands as defined in [RFC 2812](http://tools.ietf.org/html/rfc2812). This\nalso includes commands from the\n[capabilities extension](https://tools.ietf.org/html/draft-mitchell-irc-capabilities-01).\nAdditionally, this includes some common additional commands from popular IRCds.",null,null],[13,"PASS","","PASS :password",4,null],[13,"NICK","","NICK :nickname",4,null],[13,"USER","","USER user mode * :realname",4,null],[13,"OPER","","OPER name :password",4,null],[13,"MODE","","MODE nickname modes\nMODE channel modes [modeparams]",4,null],[13,"SERVICE","","SERVICE nickname reserved distribution type reserved :info",4,null],[13,"QUIT","","QUIT :comment",4,null],[13,"SQUIT","","SQUIT server :comment",4,null],[13,"JOIN","","JOIN chanlist [chankeys]",4,null],[13,"PART","","PART chanlist :[comment]",4,null],[13,"TOPIC","","TOPIC channel :[topic]",4,null],[13,"NAMES","","NAMES [chanlist :[target]]",4,null],[13,"LIST","","LIST [chanlist :[target]]",4,null],[13,"INVITE","","INVITE nickname channel",4,null],[13,"KICK","","KICK chanlist userlist :[comment]",4,null],[13,"PRIVMSG","","PRIVMSG msgtarget :message",4,null],[13,"NOTICE","","NOTICE msgtarget :message",4,null],[13,"MOTD","","MOTD :[target]",4,null],[13,"LUSERS","","LUSERS [mask :[target]]",4,null],[13,"VERSION","","VERSION :[target]",4,null],[13,"STATS","","STATS [query :[target]]",4,null],[13,"LINKS","","LINKS [[remote server] server :mask]",4,null],[13,"TIME","","TIME :[target]",4,null],[13,"CONNECT","","CONNECT target server port :[remote server]",4,null],[13,"TRACE","","TRACE :[target]",4,null],[13,"ADMIN","","ADMIN :[target]",4,null],[13,"INFO","","INFO :[target]",4,null],[13,"SERVLIST","","SERVLIST [mask :[type]]",4,null],[13,"SQUERY","","SQUERY servicename text",4,null],[13,"WHO","","WHO [mask [\"o\"]]",4,null],[13,"WHOIS","","WHOIS [target] masklist",4,null],[13,"WHOWAS","","WHOWAS nicklist [count :[target]]",4,null],[13,"KILL","","KILL nickname :comment",4,null],[13,"PING","","PING server1 :[server2]",4,null],[13,"PONG","","PONG server :[server2]",4,null],[13,"ERROR","","ERROR :message",4,null],[13,"AWAY","","AWAY :[message]",4,null],[13,"REHASH","","REHASH",4,null],[13,"DIE","","DIE",4,null],[13,"RESTART","","RESTART",4,null],[13,"SUMMON","","SUMMON user [target :[channel]]",4,null],[13,"USERS","","USERS :[target]",4,null],[13,"WALLOPS","","WALLOPS :Text to be sent",4,null],[13,"USERHOST","","USERHOST space-separated nicklist",4,null],[13,"ISON","","ISON space-separated nicklist",4,null],[13,"SAJOIN","","SAJOIN nickname channel",4,null],[13,"SAMODE","","SAMODE target modes [modeparams]",4,null],[13,"SANICK","","SANICK old nickname new nickname",4,null],[13,"SAPART","","SAPART nickname :comment",4,null],[13,"SAQUIT","","SAQUIT nickname :comment",4,null],[13,"NICKSERV","","NICKSERV message",4,null],[13,"CHANSERV","","CHANSERV message",4,null],[13,"OPERSERV","","OPERSERV message",4,null],[13,"BOTSERV","","BOTSERV message",4,null],[13,"HOSTSERV","","HOSTSERV message",4,null],[13,"MEMOSERV","","MEMOSERV message",4,null],[13,"CAP","","CAP [*] COMMAND [*] :[param]",4,null],[13,"AUTHENTICATE","","AUTHENTICATE data",4,null],[13,"ACCOUNT","","ACCOUNT [account name]",4,null],[13,"METADATA","","METADATA target COMMAND [params] :[param]",4,null],[13,"MONITOR","","MONITOR command [nicklist]",4,null],[13,"BATCH","","BATCH (+/-)reference-tag [type [params]]",4,null],[13,"CHGHOST","","CHGHOST user host",4,null],[4,"CapSubCommand","","A list of all of the subcommands for the capabilities extension.",null,null],[13,"LS","","Requests a list of the server's capabilities.",5,null],[13,"LIST","","Requests a list of the server's capabilities.",5,null],[13,"REQ","","Requests specific capabilities blindly.",5,null],[13,"ACK","","Acknowledges capabilities.",5,null],[13,"NAK","","Does not acknowledge certain capabilities.",5,null],[13,"END","","Ends the capability negotiation before registration.",5,null],[13,"NEW","","Signals that new capabilities are now being offered.",5,null],[13,"DEL","","Signasl that the specified capabilities are cancelled and no longer available.",5,null],[4,"MetadataSubCommand","","A list of all the subcommands for the\n[metadata extension](http://ircv3.net/specs/core/metadata-3.2.html).",null,null],[13,"GET","","Looks up the value for some keys.",6,null],[13,"LIST","","Lists all of the metadata keys and values.",6,null],[13,"SET","","Sets the value for some key.",6,null],[13,"CLEAR","","Removes all metadata.",6,null],[4,"BatchSubCommand","","[batch extension](http://ircv3.net/specs/extensions/batch-3.2.html).",null,null],[13,"NETSPLIT","","[NETSPLIT](http://ircv3.net/specs/extensions/batch/netsplit.html)",7,null],[13,"NETJOIN","","[NETJOIN](http://ircv3.net/specs/extensions/batch/netsplit.html)",7,null],[13,"CUSTOM","","Vendor-specific BATCH subcommands.",7,null],[11,"eq","","",4,{"inputs":[{"name":"command"},{"name":"command"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"command"},{"name":"command"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into","","Converts a Command into a Message.",4,{"inputs":[{"name":"command"}],"output":{"name":"message"}}],[11,"from","","",8,{"inputs":[{"name":"result"},{"name":"message"}],"output":{"name":"result"}}],[11,"from","","Converts a Message into a Command.",8,{"inputs":[{"name":"result"},{"name":"message"}],"output":{"name":"result"}}],[11,"from_message_io","","Converts a potential Message result into a potential Command result.",4,{"inputs":[{"name":"command"},{"name":"result"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"capsubcommand"},{"name":"capsubcommand"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"capsubcommand"},{"name":"capsubcommand"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"capsubcommand"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"capsubcommand"}],"output":{"name":"capsubcommand"}}],[11,"to_str","","Gets the string that corresponds to this subcommand.",5,{"inputs":[{"name":"capsubcommand"}],"output":{"name":"str"}}],[11,"from_str","","",5,{"inputs":[{"name":"capsubcommand"},{"name":"str"}],"output":{"name":"stdresult"}}],[11,"eq","","",6,{"inputs":[{"name":"metadatasubcommand"},{"name":"metadatasubcommand"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"metadatasubcommand"},{"name":"metadatasubcommand"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"metadatasubcommand"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"metadatasubcommand"}],"output":{"name":"metadatasubcommand"}}],[11,"to_str","","Gets the string that corresponds to this subcommand.",6,{"inputs":[{"name":"metadatasubcommand"}],"output":{"name":"str"}}],[11,"from_str","","",6,{"inputs":[{"name":"metadatasubcommand"},{"name":"str"}],"output":{"name":"stdresult"}}],[11,"eq","","",7,{"inputs":[{"name":"batchsubcommand"},{"name":"batchsubcommand"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"batchsubcommand"},{"name":"batchsubcommand"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"batchsubcommand"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"batchsubcommand"}],"output":{"name":"batchsubcommand"}}],[11,"to_str","","Gets the string that corresponds to this subcommand.",7,{"inputs":[{"name":"batchsubcommand"}],"output":{"name":"str"}}],[11,"from_str","","",7,{"inputs":[{"name":"batchsubcommand"},{"name":"str"}],"output":{"name":"stdresult"}}],[0,"config","irc::client::data","JSON configuration files using libserialize.",null,null],[3,"Config","irc::client::data::config","Configuration data.",null,null],[12,"owners","","A list of the owners of the bot by nickname.",9,null],[12,"nickname","","The bot's nickname.",9,null],[12,"nick_password","","The bot's NICKSERV password.",9,null],[12,"alt_nicks","","Alternative nicknames for the bots, if the default is taken.",9,null],[12,"username","","The bot's username.",9,null],[12,"realname","","The bot's real name.",9,null],[12,"server","","The server to connect to.",9,null],[12,"port","","The port to connect on.",9,null],[12,"password","","The password to connect to the server.",9,null],[12,"use_ssl","","Whether or not to use SSL.\nBots will automatically panic if this is enabled without SSL support.",9,null],[12,"encoding","","The encoding type used for this connection.\nThis is typically UTF-8, but could be something else.",9,null],[12,"channels","","A list of channels to join on connection.",9,null],[12,"umodes","","User modes to set on connect. Example: \"+RB-x\"",9,null],[12,"user_info","","The text that'll be sent in response to CTCP USERINFO requests.",9,null],[12,"options","","A map of additional options to be stored in config.",9,null],[11,"fmt","","",9,{"inputs":[{"name":"config"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"config"},{"name":"config"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"config"},{"name":"config"}],"output":{"name":"bool"}}],[11,"default","","",9,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"encode","","",9,{"inputs":[{"name":"config"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",9,{"inputs":[{"name":"config"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"load","","Loads a JSON configuration from the desired path.",9,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"result"}}],[11,"save","","Saves a JSON configuration to the desired path.",9,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"result"}}],[11,"is_owner","","Determines whether or not the nickname provided is the owner of the bot.",9,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"bool"}}],[11,"nickname","","Gets the nickname specified in the configuration.\nThis will panic if not specified.",9,{"inputs":[{"name":"config"}],"output":{"name":"str"}}],[11,"nick_password","","Gets the bot's nickserv password specified in the configuration.\nThis defaults to an empty string when not specified.",9,{"inputs":[{"name":"config"}],"output":{"name":"str"}}],[11,"get_alternate_nicknames","","Gets the alternate nicknames specified in the configuration.\nThis defaults to an empty vector when not specified.",9,{"inputs":[{"name":"config"}],"output":{"name":"vec"}}],[11,"username","","Gets the username specified in the configuration.\nThis defaults to the user's nickname when not specified.",9,{"inputs":[{"name":"config"}],"output":{"name":"str"}}],[11,"real_name","","Gets the real name specified in the configuration.\nThis defaults to the user's nickname when not specified.",9,{"inputs":[{"name":"config"}],"output":{"name":"str"}}],[11,"server","","Gets the address of the server specified in the configuration.\nThis panics when not specified.",9,{"inputs":[{"name":"config"}],"output":{"name":"str"}}],[11,"port","","Gets the port of the server specified in the configuration.\nThis defaults to 6667 (or 6697 if use_ssl is specified as true) when not specified.",9,{"inputs":[{"name":"config"}],"output":{"name":"u16"}}],[11,"password","","Gets the server password specified in the configuration.\nThis defaults to a blank string when not specified.",9,{"inputs":[{"name":"config"}],"output":{"name":"str"}}],[11,"use_ssl","","Gets whether or not to use SSL with this connection.\nThis defaults to false when not specified.",9,{"inputs":[{"name":"config"}],"output":{"name":"bool"}}],[11,"encoding","","Gets the encoding to use for this connection. This requires the encode feature to work.\nThis defaults to UTF-8 when not specified.",9,{"inputs":[{"name":"config"}],"output":{"name":"str"}}],[11,"channels","","Gets the channels to join upon connection.\nThis defaults to an empty vector if it's not specified.",9,{"inputs":[{"name":"config"}],"output":{"name":"vec"}}],[11,"umodes","","Gets the user modes to set on connect specified in the configuration.\nThis defaults to an empty string when not specified.",9,{"inputs":[{"name":"config"}],"output":{"name":"str"}}],[11,"user_info","","Gets the string to be sent in response to CTCP USERINFO requests.\nThis defaults to an empty string when not specified.",9,{"inputs":[{"name":"config"}],"output":{"name":"str"}}],[11,"get_option","","Looks up the specified string in the options map.\nThis uses indexing, and thus panics when the string is not present.\nThis will also panic if used and there are no options.",9,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"str"}}],[0,"message","irc::client::data","Messages to and from the server.",null,null],[3,"Message","irc::client::data::message","IRC Message data.",null,null],[12,"tags","","Message tags as defined by [IRCv3.2](http://ircv3.net/specs/core/message-tags-3.2.html).",10,null],[12,"prefix","","The message prefix (or source) as defined by [RFC 2812](http://tools.ietf.org/html/rfc2812).",10,null],[12,"command","","The IRC command as defined by [RFC 2812](http://tools.ietf.org/html/rfc2812).",10,null],[12,"args","","The command arguments.",10,null],[12,"suffix","","The message suffix as defined by [RFC 2812](http://tools.ietf.org/html/rfc2812).\nThis is the only part of the message that is allowed to contain spaces.",10,null],[3,"Tag","","A message tag as defined by [IRCv3.2](http://ircv3.net/specs/core/message-tags-3.2.html).",null,null],[11,"fmt","","",10,{"inputs":[{"name":"message"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"message"},{"name":"message"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"message"},{"name":"message"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"message"}],"output":{"name":"message"}}],[11,"new","","Creates a new Message.",10,{"inputs":[{"name":"message"},{"name":"option"},{"name":"str"},{"name":"option"},{"name":"option"}],"output":{"name":"message"}}],[11,"with_tags","","Creates a new Message optionally including IRCv3.2 message tags.",10,{"inputs":[{"name":"message"},{"name":"option"},{"name":"option"},{"name":"str"},{"name":"option"},{"name":"option"}],"output":{"name":"message"}}],[11,"from_owned","","Creates a new Message from already owned data.",10,{"inputs":[{"name":"message"},{"name":"option"},{"name":"string"},{"name":"option"},{"name":"option"}],"output":{"name":"message"}}],[11,"get_source_nickname","","Gets the nickname of the message source, if it exists.",10,{"inputs":[{"name":"message"}],"output":{"name":"option"}}],[11,"into_string","","Converts a Message into a String according to the IRC protocol.",10,{"inputs":[{"name":"message"}],"output":{"name":"string"}}],[11,"from_str","","",10,{"inputs":[{"name":"message"},{"name":"str"}],"output":{"name":"result"}}],[11,"from","","",10,{"inputs":[{"name":"message"},{"name":"str"}],"output":{"name":"message"}}],[11,"fmt","","",11,{"inputs":[{"name":"tag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"tag"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"tag"}],"output":{"name":"tag"}}],[0,"response","irc::client::data","Enumeration of all the possible server responses.",null,null],[4,"Response","irc::client::data::response","List of all server responses as defined in\n[RFC 2812](http://tools.ietf.org/html/rfc2812).\nAll commands are documented with their expected form from the RFC.",null,null],[13,"RPL_WELCOME","","001 Welcome to the Internet Relay Network <nick>!<user>@<host>",12,null],[13,"RPL_YOURHOST","","002 Your host is <servername>, running version <ver>",12,null],[13,"RPL_CREATED","","003 This server was created <date>",12,null],[13,"RPL_MYINFO","","004 <servername> <version> <available user modes> available channel modes>",12,null],[13,"RPL_BOUNCE","","005 Try server <server name>, port <port number>",12,null],[13,"RPL_USERHOST","","302 :*1<reply> *( \" \" <reply> )",12,null],[13,"RPL_ISON","","303 :*1<nick> *( \" \" <nick> )",12,null],[13,"RPL_AWAY","","301 <nick> :<away message>",12,null],[13,"RPL_UNAWAY","","305 :You are no longer marked as being away",12,null],[13,"RPL_NOWAWAY","","306 :You have been marked as being away",12,null],[13,"RPL_WHOISUSER","","311 <nick> <user> <host> * :<real name>",12,null],[13,"RPL_WHOISSERVER","","312 <nick> <server> :<server info>",12,null],[13,"RPL_WHOISOPERATOR","","313 <nick> :is an IRC operator",12,null],[13,"RPL_WHOISIDLE","","317 <nick> <integer> :seconds idle",12,null],[13,"RPL_ENDOFWHOIS","","318 <nick> :End of WHOIS list",12,null],[13,"RPL_WHOISCHANNELS","","319 <nick> :*( ( \"@\" / \"+\" ) <channel> \" \" )",12,null],[13,"RPL_WHOWASUSER","","314 <nick> <user> <host> * :<real name>",12,null],[13,"RPL_ENDOFWHOWAS","","369 <nick> :End of WHOWAS",12,null],[13,"RPL_LISTSTART","","Obsolete. Not used.",12,null],[13,"RPL_LIST","","322 <channel> <# visible> :<topic>",12,null],[13,"RPL_LISTEND","","323 :End of LIST",12,null],[13,"RPL_UNIQOPIS","","325 <channel> <nickname>",12,null],[13,"RPL_CHANNELMODEIS","","324 <channel> <mode> <mode params>",12,null],[13,"RPL_NOTOPIC","","331 <channel> :No topic is set",12,null],[13,"RPL_TOPIC","","332 <channel> :<topic>",12,null],[13,"RPL_INVITING","","341 <channel> <nick>",12,null],[13,"RPL_SUMMONING","","342 <user> :Summoning user to IRC",12,null],[13,"RPL_INVITELIST","","346 <channel> <invitemask>",12,null],[13,"RPL_ENDOFINVITELIST","","347 <channel> :End of channel invite list",12,null],[13,"RPL_EXCEPTLIST","","348 <channel> <exceptionmask>",12,null],[13,"RPL_ENDOFEXCEPTLIST","","349 <channel> :End of channel exception list",12,null],[13,"RPL_VERSION","","351 <version>.<debuglevel> <server> :<comments>",12,null],[13,"RPL_WHOREPLY","","352 <channel> <user> <host> <server> <nick> ( \"H\" / \"G\" > [\"*\"] [ ( \"@\" / \"+\" ) ]\n:<hopcount> <real name> *",12,null],[13,"RPL_ENDOFWHO","","315 <name> :End of WHO list",12,null],[13,"RPL_NAMREPLY","","353 ( \"=\" / \"*\" / \"@\" ) <channel> :[ \"@\" / \"+\" ] <nick> *( \" \" [ \"@\" / \"+\" ] <nick> )",12,null],[13,"RPL_ENDOFNAMES","","366 <channel> :End of NAMES list",12,null],[13,"RPL_LINKS","","364 <mask> <server> :<hopcount> <server info>",12,null],[13,"RPL_ENDOFLINKS","","365 <mask> :End of LINKS list",12,null],[13,"RPL_BANLIST","","367 <channel> <banmask>",12,null],[13,"RPL_ENDOFBANLIST","","368 <channel> :End of channel ban list",12,null],[13,"RPL_INFO","","371 :<string>",12,null],[13,"RPL_ENDOFINFO","","374 :End of INFO list",12,null],[13,"RPL_MOTDSTART","","375 :- <server> Message of the day -",12,null],[13,"RPL_MOTD","","372 :- <text>",12,null],[13,"RPL_ENDOFMOTD","","376 :End of MOTD command",12,null],[13,"RPL_YOUREOPER","","381 :You are now an IRC operator",12,null],[13,"RPL_REHASHING","","382 <config file> :Rehashing",12,null],[13,"RPL_YOURESERVICE","","383 You are service <servicename>",12,null],[13,"RPL_TIME","","391 <server> :<string showing server's local time>",12,null],[13,"RPL_USERSSTART","","392 :UserID   Terminal  Host",12,null],[13,"RPL_USERS","","393 :<username> <ttyline> <hostname>",12,null],[13,"RPL_ENDOFUSERS","","394 :End of users",12,null],[13,"RPL_NOUSERS","","395 :Nobody logged in",12,null],[13,"RPL_TRACELINK","","200 Link <version & debug level> <destination> <next server> V<protocol version>\n<link uptime in seconds> <backstream sendq> <upstream sendq> *",12,null],[13,"RPL_TRACECONNECTING","","201 Try. <class> <server>",12,null],[13,"RPL_TRACEHANDSHAKE","","202 H.S. <class> <server>",12,null],[13,"RPL_TRACEUKNOWN","","203 ???? <class> [<client IP address in dot form>]",12,null],[13,"RPL_TRACEOPERATOR","","204 Oper <class> <nick>",12,null],[13,"RPL_TRACEUSER","","205 User <class> <nick>",12,null],[13,"RPL_TRACESERVER","","206 Serv <class> <int>S <int>C <server> <nick!user|*!*>@<host|server> V<protocol version>",12,null],[13,"RPL_TRACESERVICE","","207 Service <class> <name> <type> <active type>",12,null],[13,"RPL_TRACENEWTYPE","","208 <newtype> 0 <client name>",12,null],[13,"RPL_TRACECLASS","","209 Class <class> <count>",12,null],[13,"RPL_TRACERECONNECT","","Unused.",12,null],[13,"RPL_TRACELOG","","261 File <logfile> <debug level>",12,null],[13,"RPL_TRACEEND","","262 <server name> <version & debug level> :End of TRACE",12,null],[13,"RPL_STATSLINKINFO","","211 <linkname> <sendq> <sent messages> <sent Kbytes> <received messages> <received Kbytes>\n<time open> *",12,null],[13,"RPL_STATSCOMMANDS","","212 <command> <count> <byte count> <remote count>",12,null],[13,"RPL_ENDOFSTATS","","219 <stats letter> :End of STATS report",12,null],[13,"RPL_STATSUPTIME","","242 :Server Up %d days %d:%02d:%02d",12,null],[13,"RPL_STATSOLINE","","O <hostmask> * <name>",12,null],[13,"RPL_UMODEIS","","221 <user mode string>",12,null],[13,"RPL_SERVLIST","","234 <name> <server> <mask> <type> <hopcount> <info>",12,null],[13,"RPL_SERVLISTEND","","235 <mask> <type> :End of service listing",12,null],[13,"RPL_LUSERCLIENT","","251 :There are <integer> users and <integer> services on <integer> servers",12,null],[13,"RPL_LUSEROP","","252 <integer> :operator(s) online",12,null],[13,"RPL_LUSERUNKNOWN","","253 <integer> :unknown connection(s)",12,null],[13,"RPL_LUSERCHANNELS","","254 <integer> :channels formed",12,null],[13,"RPL_LUSERME","","255 :I have <integer> clients and <integer> servers",12,null],[13,"RPL_ADMINME","","256 <server> :Administrative info",12,null],[13,"RPL_ADMINLOC1","","257 :<admin info>",12,null],[13,"RPL_ADMINLOC2","","258 :<admin info>",12,null],[13,"RPL_ADMINEMAIL","","259 :<admin info>",12,null],[13,"RPL_TRYAGAIN","","263 <command> :Please wait a while and try again.",12,null],[13,"RPL_MONONLINE","","730 <nick> :target[,target2]*",12,null],[13,"RPL_MONOFFLINE","","731 <nick> :target[,target2]*",12,null],[13,"RPL_MONLIST","","732 <nick> :target[,target2]*",12,null],[13,"RPL_ENDOFMONLIST","","733 <nick> :End of MONITOR list",12,null],[13,"RPL_WHOISKEYVALUE","","760 <target> <key> <visibility> :<value>",12,null],[13,"RPL_KEYVALUE","","761 <target> <key> <visibility> :[<value>]",12,null],[13,"RPL_METADATAEND","","762 :end of metadata",12,null],[13,"RPL_LOGGEDIN","","900 <nick> <nick>!<ident>@<host> <account> :You are now logged in as <user>",12,null],[13,"RPL_LOGGEDOUT","","901 <nick> <nick>!<ident>@<host> :You are now logged out",12,null],[13,"RPL_SASLSUCCESS","","903 <nick> :SASL authentication successful",12,null],[13,"RPL_SASLMECHS","","908 <nick> <mechanisms> :are available SASL mechanisms",12,null],[13,"ERR_NOSUCHNICK","","401 <nickname> :No such nick/channel",12,null],[13,"ERR_NOSUCHSERVER","","402 <server name> :No such server",12,null],[13,"ERR_NOSUCHCHANNEL","","403 <channel name> :No such channel",12,null],[13,"ERR_CANNOTSENDTOCHAN","","404 <channel name> :Cannot send to channel",12,null],[13,"ERR_TOOMANYCHANNELS","","405 <channel name> :You have joined too many channels",12,null],[13,"ERR_WASNOSUCHNICK","","406 <nickname> :There was no such nickname",12,null],[13,"ERR_TOOMANYTARGETS","","407 <target> :<error code> recipients. <abort message>",12,null],[13,"ERR_NOSUCHSERVICE","","408 <service name> :No such service",12,null],[13,"ERR_NOORIGIN","","409 :No origin specified",12,null],[13,"ERR_NORECIPIENT","","411 :No recipient given (<command>)",12,null],[13,"ERR_NOTEXTTOSEND","","412 :No text to send",12,null],[13,"ERR_NOTOPLEVEL","","413 <mask> :No toplevel domain specified",12,null],[13,"ERR_WILDTOPLEVEL","","414 <mask> :Wildcard in toplevel domain",12,null],[13,"ERR_BADMASK","","415 <mask> :Bad Server/host mask",12,null],[13,"ERR_UNKNOWNCOMMAND","","421 <command> :Unknown command",12,null],[13,"ERR_NOMOTD","","422 :MOTD File is missing",12,null],[13,"ERR_NOADMININFO","","423 <server> :No administrative info available",12,null],[13,"ERR_FILEERROR","","424 :File error doing <file op> on <file>",12,null],[13,"ERR_NONICKNAMEGIVEN","","431 :No nickname given",12,null],[13,"ERR_ERRONEOUSNICKNAME","","432 <nick> :Erroneous nickname\"",12,null],[13,"ERR_NICKNAMEINUSE","","433 <nick> :Nickname is already in use",12,null],[13,"ERR_NICKCOLLISION","","436 <nick> :Nickname collision KILL from <user>@<host>",12,null],[13,"ERR_UNAVAILRESOURCE","","437 <nick/channel> :Nick/channel is temporarily unavailable",12,null],[13,"ERR_USERNOTINCHANNEL","","441 <nick> <channel> :They aren't on that channel",12,null],[13,"ERR_NOTONCHANNEL","","442 <channel> :You're not on that channel",12,null],[13,"ERR_USERONCHANNEL","","443 <user> <channel> :is already on channel",12,null],[13,"ERR_NOLOGIN","","444 <user> :User not logged in",12,null],[13,"ERR_SUMMONDISABLED","","445 :SUMMON has been disabled",12,null],[13,"ERR_USERSDISABLED","","446 :USERS has been disabled",12,null],[13,"ERR_NOTREGISTERED","","451 :You have not registered",12,null],[13,"ERR_NEEDMOREPARAMS","","461 <command> :Not enough parameters",12,null],[13,"ERR_ALREADYREGISTRED","","462 :Unauthorized command (already registered)",12,null],[13,"ERR_NOPERMFORHOST","","463 :Your host isn't among the privileged",12,null],[13,"ERR_PASSWDMISMATCH","","464 :Password incorrect",12,null],[13,"ERR_YOUREBANNEDCREEP","","465 :You are banned from this server",12,null],[13,"ERR_YOUWILLBEBANNED","","466",12,null],[13,"ERR_KEYSET","","467 <channel> :Channel key already set",12,null],[13,"ERR_CHANNELISFULL","","471 <channel> :Cannot join channel (+l)",12,null],[13,"ERR_UNKNOWNMODE","","472 <char> :is unknown mode char to me for <channel>",12,null],[13,"ERR_INVITEONLYCHAN","","473 <channel> :Cannot join channel (+i)",12,null],[13,"ERR_BANNEDFROMCHAN","","474 <channel> :Cannot join channel (+b)",12,null],[13,"ERR_BADCHANNELKEY","","475 <channel> :Cannot join channel (+k)",12,null],[13,"ERR_BADCHANMASK","","476 <channel> :Bad Channel Mask",12,null],[13,"ERR_NOCHANMODES","","477 <channel> :Channel doesn't support modes",12,null],[13,"ERR_BANLISTFULL","","478 <channel> <char> :Channel list is full",12,null],[13,"ERR_NOPRIVILEGES","","481 :Permission Denied- You're not an IRC operator",12,null],[13,"ERR_CHANOPRIVSNEEDED","","482 <channel> :You're not channel operator",12,null],[13,"ERR_CANTKILLSERVER","","483 :You can't kill a server!",12,null],[13,"ERR_RESTRICTED","","484 :Your connection is restricted!",12,null],[13,"ERR_UNIQOPPRIVSNEEDED","","485 :You're not the original channel operator",12,null],[13,"ERR_NOOPERHOST","","491 :No O-lines for your host",12,null],[13,"ERR_UMODEUNKNOWNFLAG","","501 :Unknown MODE flag",12,null],[13,"ERR_USERSDONTMATCH","","502 :Cannot change mode for other users",12,null],[13,"ERR_MONLISTFULL","","734 <nick> <limit> <targets> :Monitor list is full.",12,null],[13,"ERR_METADATALIMIT","","764 <target> :metadata limit reached",12,null],[13,"ERR_TARGETINVALID","","765 <target> :invalid metadata target",12,null],[13,"ERR_NOMATCHINGKEY","","766 <key> :no matching key",12,null],[13,"ERR_KEYINVALID","","767 <key> :invalid metadata key",12,null],[13,"ERR_KEYNOTSET","","768 <target> <key> :key not set",12,null],[13,"ERR_KEYNOPERMISSION","","769 <target> <key> :permission denied",12,null],[13,"ERR_NICKLOCKED","","902 <nick> :You must use a nick assigned to you.",12,null],[13,"ERR_SASLFAIL","","904 <nick> :SASL authentication failed",12,null],[13,"ERR_SASLTOOLONG","","905 <nick> :SASL message too long",12,null],[13,"ERR_SASLABORT","","906 <nick> :SASL authentication aborted",12,null],[13,"ERR_SASLALREADY","","907 <nick> :You have already authenticated using SASL",12,null],[11,"eq","","",12,{"inputs":[{"name":"response"},{"name":"response"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"response"},{"name":"response"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"response"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"response"}],"output":{"name":"response"}}],[11,"from_message","","Gets a response from a message.",12,{"inputs":[{"name":"response"},{"name":"message"}],"output":{"name":"option"}}],[11,"is_error","","Determines whether or not this response is an error response.",12,{"inputs":[{"name":"response"}],"output":{"name":"bool"}}],[11,"from_str","","",12,{"inputs":[{"name":"response"},{"name":"str"}],"output":{"name":"result"}}],[0,"user","irc::client::data","Data for tracking user information.",null,null],[3,"User","irc::client::data::user","IRC User data.",null,null],[4,"AccessLevel","","The user's access level.",null,null],[13,"Owner","","The channel owner (~).",13,null],[13,"Admin","","A channel administrator (&).",13,null],[13,"Oper","","A channel operator (@),",13,null],[13,"HalfOp","","A channel half-oper (%),",13,null],[13,"Voice","","A user with voice (+),",13,null],[13,"Member","","A normal user,",13,null],[11,"fmt","","",14,{"inputs":[{"name":"user"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"user"}],"output":{"name":"user"}}],[11,"new","","Creates a new User.",14,{"inputs":[{"name":"user"},{"name":"str"}],"output":{"name":"user"}}],[11,"get_nickname","","Gets the nickname of the user.",14,{"inputs":[{"name":"user"}],"output":{"name":"str"}}],[11,"get_username","","Gets the username of the user, if it's known.\nThis requires the IRCv3.2 extension `userhost-in-name`.",14,{"inputs":[{"name":"user"}],"output":{"name":"option"}}],[11,"get_hostname","","Gets the hostname of the user, if it's known.\nThis requires the IRCv3.2 extension `userhost-in-name`.",14,{"inputs":[{"name":"user"}],"output":{"name":"option"}}],[11,"highest_access_level","","Gets the user's highest access level.",14,{"inputs":[{"name":"user"}],"output":{"name":"accesslevel"}}],[11,"access_levels","","Gets all the user's access levels.",14,{"inputs":[{"name":"user"}],"output":{"name":"vec"}}],[11,"update_access_level","","Updates the user's access level.",14,{"inputs":[{"name":"user"},{"name":"str"}],"output":null}],[11,"eq","","",14,{"inputs":[{"name":"user"},{"name":"user"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"accesslevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"accesslevel"}],"output":{"name":"accesslevel"}}],[11,"eq","","",13,{"inputs":[{"name":"accesslevel"},{"name":"accesslevel"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"accesslevel"},{"name":"accesslevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"accesslevel"},{"name":"accesslevel"}],"output":{"name":"option"}}],[11,"from_str","","",13,{"inputs":[{"name":"accesslevel"},{"name":"str"}],"output":{"name":"result"}}],[0,"server","irc::client","Interface for working with IRC Servers.",null,null],[3,"IrcServer","irc::client::server","A thread-safe implementation of an IRC Server connection.",null,null],[3,"ServerIterator","","An Iterator over an IrcServer's incoming Messages.",null,null],[0,"utils","","Utilities and shortcuts for working with IRC servers.",null,null],[8,"ServerExt","irc::client::server::utils","Extensions for Server capabilities that make it easier to work directly with the protocol.",null,null],[11,"send_cap_ls","","Sends a request for a list of server capabilities for a specific IRCv3 version.",15,{"inputs":[{"name":"serverext"},{"name":"negotiationversion"}],"output":{"name":"result"}}],[11,"send_cap_req","","Sends an IRCv3 capabilities request for the specified extensions.",15,null],[11,"identify","","Sends a CAP END, NICK and USER to identify.",15,{"inputs":[{"name":"serverext"}],"output":{"name":"result"}}],[11,"send_sasl","","Sends a SASL AUTHENTICATE message with the specified data.",15,{"inputs":[{"name":"serverext"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_sasl_plain","","Sends a SASL AUTHENTICATE request to use the PLAIN mechanism.",15,{"inputs":[{"name":"serverext"}],"output":{"name":"result"}}],[11,"send_sasl_external","","Sends a SASL AUTHENTICATE request to use the EXTERNAL mechanism.",15,{"inputs":[{"name":"serverext"}],"output":{"name":"result"}}],[11,"send_sasl_abort","","Sends a SASL AUTHENTICATE request to abort authentication.",15,{"inputs":[{"name":"serverext"}],"output":{"name":"result"}}],[11,"send_pong","","Sends a PONG with the specified message.",15,{"inputs":[{"name":"serverext"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_join","","Joins the specified channel or chanlist.",15,{"inputs":[{"name":"serverext"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_oper","","Attempts to oper up using the specified username and password.",15,{"inputs":[{"name":"serverext"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_privmsg","","Sends a message to the specified target.",15,{"inputs":[{"name":"serverext"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_notice","","Sends a notice to the specified target.",15,{"inputs":[{"name":"serverext"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_topic","","Sets the topic of a channel or requests the current one.\nIf `topic` is an empty string, it won't be included in the message.",15,{"inputs":[{"name":"serverext"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_kill","","Kills the target with the provided message.",15,{"inputs":[{"name":"serverext"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_kick","","Kicks the listed nicknames from the listed channels with a comment.\nIf `message` is an empty string, it won't be included in the message.",15,{"inputs":[{"name":"serverext"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_mode","","Changes the mode of the target.\nIf `modeparmas` is an empty string, it won't be included in the message.",15,{"inputs":[{"name":"serverext"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_samode","","Changes the mode of the target by force.\nIf `modeparams` is an empty string, it won't be included in the message.",15,{"inputs":[{"name":"serverext"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_sanick","","Forces a user to change from the old nickname to the new nickname.",15,{"inputs":[{"name":"serverext"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_invite","","Invites a user to the specified channel.",15,{"inputs":[{"name":"serverext"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_quit","","Quits the server entirely with a message.\nThis defaults to `Powered by Rust.` if none is specified.",15,{"inputs":[{"name":"serverext"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_ctcp","","Sends a CTCP-escaped message to the specified target.\nThis requires the CTCP feature to be enabled.",15,{"inputs":[{"name":"serverext"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_action","","Sends an action command to the specified target.\nThis requires the CTCP feature to be enabled.",15,{"inputs":[{"name":"serverext"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_finger","","Sends a finger request to the specified target.\nThis requires the CTCP feature to be enabled.",15,{"inputs":[{"name":"serverext"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_version","","Sends a version request to the specified target.\nThis requires the CTCP feature to be enabled.",15,{"inputs":[{"name":"serverext"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_source","","Sends a source request to the specified target.\nThis requires the CTCP feature to be enabled.",15,{"inputs":[{"name":"serverext"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_user_info","","Sends a user info request to the specified target.\nThis requires the CTCP feature to be enabled.",15,{"inputs":[{"name":"serverext"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_ctcp_ping","","Sends a finger request to the specified target.\nThis requires the CTCP feature to be enabled.",15,{"inputs":[{"name":"serverext"},{"name":"str"}],"output":{"name":"result"}}],[11,"send_time","","Sends a time request to the specified target.\nThis requires the CTCP feature to be enabled.",15,{"inputs":[{"name":"serverext"},{"name":"str"}],"output":{"name":"result"}}],[6,"NetIrcServer","irc::client::server","An IrcServer over a buffered NetStream.",null,null],[6,"ServerCmdIterator","","An Iterator over an IrcServer's incoming Commands.",null,null],[8,"Server","","Trait describing core Server functionality.",null,null],[10,"config","","Gets the configuration being used with this Server.",16,{"inputs":[{"name":"server"}],"output":{"name":"config"}}],[10,"send","","Sends a Command to this Server.",16,{"inputs":[{"name":"server"},{"name":"m"}],"output":{"name":"result"}}],[10,"iter","","Gets an Iterator over Messages received by this Server.",16,{"inputs":[{"name":"server"}],"output":{"name":"serveriterator"}}],[10,"iter_cmd","","Gets an Iterator over Commands received by this Server.",16,{"inputs":[{"name":"server"}],"output":{"name":"servercmditerator"}}],[10,"list_users","","Gets a list of Users in the specified channel. This will be none if the channel is not\nbeing tracked, or if tracking is not supported altogether. For best results, be sure to\nrequest `multi-prefix` support from the server.",16,{"inputs":[{"name":"server"},{"name":"str"}],"output":{"name":"option"}}],[11,"new","","Creates a new IRC Server connection from the configuration at the specified path,\nconnecting immediately.",17,{"inputs":[{"name":"ircserver"},{"name":"p"}],"output":{"name":"result"}}],[11,"from_config","","Creates a new IRC server connection from the specified configuration, connecting\nimmediately.",17,{"inputs":[{"name":"ircserver"},{"name":"config"}],"output":{"name":"result"}}],[11,"reconnect","","Reconnects to the IRC server.",17,{"inputs":[{"name":"ircserver"}],"output":{"name":"result"}}],[11,"config","","",17,{"inputs":[{"name":"ircserver"}],"output":{"name":"config"}}],[11,"send","","",17,{"inputs":[{"name":"ircserver"},{"name":"m"}],"output":{"name":"result"}}],[11,"iter","","",17,{"inputs":[{"name":"ircserver"}],"output":{"name":"serveriterator"}}],[11,"iter_cmd","","",17,{"inputs":[{"name":"ircserver"}],"output":{"name":"servercmditerator"}}],[11,"list_users","","",17,{"inputs":[{"name":"ircserver"},{"name":"str"}],"output":{"name":"option"}}],[11,"from_connection","","Creates an IRC server from the specified configuration, and any arbitrary Connection.",17,{"inputs":[{"name":"ircserver"},{"name":"config"},{"name":"connection"}],"output":{"name":"ircserver"}}],[11,"conn","","Gets a reference to the IRC server's connection.",17,{"inputs":[{"name":"ircserver"}],"output":{"name":"connection"}}],[11,"new","","Creates a new ServerIterator for the desired IrcServer.",18,{"inputs":[{"name":"serveriterator"},{"name":"ircserver"}],"output":{"name":"serveriterator"}}],[11,"next","","",18,{"inputs":[{"name":"serveriterator"}],"output":{"name":"option"}}],[0,"prelude","irc::client","A client-side IRC prelude, re-exporting all the necessary basics.",null,null],[0,"server","irc","A simple, thread-safe IRC server library.\nThe server module is currently unimplimented. Visit \nhttps://github.com/aatxe/irc/issues/22 to contribute!",null,null]],"paths":[[4,"NetStream"],[3,"Connection"],[4,"Capability"],[4,"NegotiationVersion"],[4,"Command"],[4,"CapSubCommand"],[4,"MetadataSubCommand"],[4,"BatchSubCommand"],[6,"Result"],[3,"Config"],[3,"Message"],[3,"Tag"],[4,"Response"],[4,"AccessLevel"],[3,"User"],[8,"ServerExt"],[8,"Server"],[3,"IrcServer"],[3,"ServerIterator"]]};
searchIndex['openssl'] = {"items":[[0,"","openssl","",null,null],[0,"asn1","","",null,null],[3,"Asn1Time","openssl::asn1","",null,null],[11,"new","","Wraps existing ASN1_TIME and takes ownership",0,null],[11,"days_from_now","","Creates a new time on specified interval in days from now",0,{"inputs":[{"name":"asn1time"},{"name":"u32"}],"output":{"name":"result"}}],[11,"get_handle","","Returns raw handle",0,null],[11,"drop","","",0,{"inputs":[{"name":"asn1time"}],"output":null}],[0,"bn","openssl","",null,null],[3,"BigNum","openssl::bn","",null,null],[4,"RNGProperty","","",null,null],[13,"MsbMaybeZero","","",1,null],[13,"MsbOne","","",1,null],[13,"TwoMsbOne","","",1,null],[0,"unchecked","","",null,null],[11,"clone","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"bignum"}}],[11,"neg","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"bignum"}}],[11,"clone","","",1,{"inputs":[{"name":"rngproperty"}],"output":{"name":"rngproperty"}}],[11,"new","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"new_from","","",2,{"inputs":[{"name":"bignum"},{"name":"u64"}],"output":{"name":"result"}}],[11,"from_dec_str","","",2,{"inputs":[{"name":"bignum"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_hex_str","","",2,{"inputs":[{"name":"bignum"},{"name":"str"}],"output":{"name":"result"}}],[11,"new_from_slice","","",2,null],[11,"checked_sqr","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_nnmod","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_add","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_sub","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_mul","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_sqr","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_exp","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_exp","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_inv","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"add_word","","",2,{"inputs":[{"name":"bignum"},{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"sub_word","","",2,{"inputs":[{"name":"bignum"},{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"mul_word","","",2,{"inputs":[{"name":"bignum"},{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"div_word","","",2,{"inputs":[{"name":"bignum"},{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"mod_word","","",2,{"inputs":[{"name":"bignum"},{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"checked_gcd","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_generate_prime","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"},{"name":"bool"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"is_prime","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"is_prime_fast","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_new_random","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"},{"name":"rngproperty"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_new_pseudo_random","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"},{"name":"rngproperty"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_rand_in_range","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_pseudo_rand_in_range","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"set_bit","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"clear_bit","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"is_bit_set","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"mask_bits","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"checked_shl1","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_shr1","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_add","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_sub","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mul","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_div","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_shl","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"checked_shr","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"negate","","",2,{"inputs":[{"name":"bignum"}],"output":null}],[11,"abs_cmp","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"ordering"}}],[11,"is_negative","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"bool"}}],[11,"num_bits","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"i32"}}],[11,"num_bytes","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"i32"}}],[11,"to_vec","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"vec"}}],[11,"to_dec_str","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"string"}}],[11,"to_hex_str","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"string"}}],[11,"fmt","","",2,{"inputs":[{"name":"bignum"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"option"}}],[11,"drop","","",2,{"inputs":[{"name":"bignum"}],"output":null}],[0,"bio","openssl","",null,null],[3,"MemBio","openssl::bio","",null,null],[11,"drop","","",3,{"inputs":[{"name":"membio"}],"output":null}],[11,"new","","Creates a new owned memory based BIO",3,{"inputs":[{"name":"membio"}],"output":{"name":"result"}}],[11,"borrowed","","Returns a \"borrow\", i.e. it has no ownership",3,null],[11,"unwrap","","Consumes current bio and returns wrapped value\nNote that data ownership is lost and\nshould be managed manually",3,null],[11,"get_handle","","Temporarily gets wrapped value",3,null],[11,"set_eof","","Sets the BIO's EOF state.",3,{"inputs":[{"name":"membio"},{"name":"bool"}],"output":null}],[11,"read","","",3,null],[11,"write","","",3,null],[11,"flush","","",3,{"inputs":[{"name":"membio"}],"output":{"name":"result"}}],[0,"crypto","openssl","",null,null],[0,"hash","openssl::crypto","",null,null],[3,"Hasher","openssl::crypto::hash","Provides message digest (hash) computation.",null,null],[4,"Type","","Message digest (hash) type.",null,null],[13,"MD5","","",4,null],[13,"SHA1","","",4,null],[13,"SHA224","","",4,null],[13,"SHA256","","",4,null],[13,"SHA384","","",4,null],[13,"SHA512","","",4,null],[13,"RIPEMD160","","",4,null],[5,"hash","","Computes the hash of the `data` with the hash `t`.",null,null],[11,"clone","","",4,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[11,"md_len","","Returns the length of the message digest.",4,{"inputs":[{"name":"type"}],"output":{"name":"usize"}}],[11,"evp_md","","Internal interface subject to removal.",4,null],[11,"new","","Creates a new `Hasher` with the specified hash type.",5,{"inputs":[{"name":"hasher"},{"name":"type"}],"output":{"name":"hasher"}}],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",5,{"inputs":[{"name":"hasher"}],"output":{"name":"vec"}}],[11,"write","","",5,null],[11,"flush","","",5,{"inputs":[{"name":"hasher"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"hasher"}],"output":{"name":"hasher"}}],[11,"drop","","",5,{"inputs":[{"name":"hasher"}],"output":null}],[0,"hmac","openssl::crypto","",null,null],[3,"HMAC","openssl::crypto::hmac","Provides HMAC computation.",null,null],[5,"hmac","","Computes the HMAC of the `data` with the hash `t` and `key`.",null,null],[11,"new","","Creates a new `HMAC` with the specified hash type using the `key`.",6,null],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",6,{"inputs":[{"name":"hmac"}],"output":{"name":"vec"}}],[11,"write","","",6,null],[11,"flush","","",6,{"inputs":[{"name":"hmac"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"hmac"}],"output":{"name":"hmac"}}],[11,"drop","","",6,{"inputs":[{"name":"hmac"}],"output":null}],[0,"pkcs5","openssl::crypto","",null,null],[3,"KeyIvPair","openssl::crypto::pkcs5","",null,null],[12,"key","","",7,null],[12,"iv","","",7,null],[5,"evp_bytes_to_key_pbkdf1_compatible","","Derives a key and an IV from various parameters.",null,null],[5,"pbkdf2_hmac_sha1","","Derives a key from a password and salt using the PBKDF2-HMAC-SHA1 algorithm.",null,null],[11,"fmt","","",7,{"inputs":[{"name":"keyivpair"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",7,null],[11,"eq","","",7,{"inputs":[{"name":"keyivpair"},{"name":"keyivpair"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"keyivpair"},{"name":"keyivpair"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"keyivpair"}],"output":{"name":"keyivpair"}}],[0,"pkey","openssl::crypto","",null,null],[3,"PKey","openssl::crypto::pkey","",null,null],[4,"Parts","","",null,null],[13,"Neither","","",8,null],[13,"Public","","",8,null],[13,"Both","","",8,null],[4,"Role","","Represents a role an asymmetric key might be appropriate for.",null,null],[13,"Encrypt","","",9,null],[13,"Decrypt","","",9,null],[13,"Sign","","",9,null],[13,"Verify","","",9,null],[4,"EncryptionPadding","","Type of encryption padding to use.",null,null],[13,"OAEP","","",10,null],[13,"PKCS1v15","","",10,null],[11,"clone","","",8,{"inputs":[{"name":"parts"}],"output":{"name":"parts"}}],[11,"clone","","",9,{"inputs":[{"name":"role"}],"output":{"name":"role"}}],[11,"clone","","",10,{"inputs":[{"name":"encryptionpadding"}],"output":{"name":"encryptionpadding"}}],[11,"new","","",11,{"inputs":[{"name":"pkey"}],"output":{"name":"pkey"}}],[11,"from_handle","","",11,null],[11,"private_key_from_pem","","Reads private key from PEM, takes ownership of handle",11,{"inputs":[{"name":"pkey"},{"name":"r"}],"output":{"name":"result"}}],[11,"gen","","",11,{"inputs":[{"name":"pkey"},{"name":"usize"}],"output":null}],[11,"save_pub","","Returns a serialized form of the public key, suitable for load_pub().",11,{"inputs":[{"name":"pkey"}],"output":{"name":"vec"}}],[11,"load_pub","","Loads a serialized form of the public key, as produced by save_pub().",11,null],[11,"save_priv","","Returns a serialized form of the public and private keys, suitable for\nload_priv().",11,{"inputs":[{"name":"pkey"}],"output":{"name":"vec"}}],[11,"load_priv","","Loads a serialized form of the public and private keys, as produced by\nsave_priv().",11,null],[11,"write_pem","","Stores private key as a PEM",11,{"inputs":[{"name":"pkey"},{"name":"w"}],"output":{"name":"result"}}],[11,"write_pub_pem","","Stores public key as a PEM",11,{"inputs":[{"name":"pkey"},{"name":"w"}],"output":{"name":"result"}}],[11,"size","","Returns the size of the public key modulus.",11,{"inputs":[{"name":"pkey"}],"output":{"name":"usize"}}],[11,"can","","Returns whether this pkey object can perform the specified role.",11,{"inputs":[{"name":"pkey"},{"name":"role"}],"output":{"name":"bool"}}],[11,"max_data","","Returns the maximum amount of data that can be encrypted by an encrypt()\ncall.",11,{"inputs":[{"name":"pkey"}],"output":{"name":"usize"}}],[11,"encrypt_with_padding","","",11,null],[11,"decrypt_with_padding","","",11,null],[11,"encrypt","","Encrypts data using OAEP padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"decrypt","","Decrypts data, expecting OAEP padding, returning the decrypted data.",11,null],[11,"sign","","Signs data, using OpenSSL's default scheme and adding sha256 ASN.1 information to the\nsignature.\nThe bytes to sign must be the result of a sha256 hashing;\nreturns the signature.",11,null],[11,"verify","","Verifies a signature s (using OpenSSL's default scheme and sha256) on the SHA256 hash of a\nmessage.\nReturns true if the signature is valid, and false otherwise.",11,null],[11,"sign_with_hash","","Signs data, using OpenSSL's default scheme and add ASN.1 information for the given hash type to the\nsignature.\nThe bytes to sign must be the result of this type of hashing;\nreturns the signature.",11,null],[11,"verify_with_hash","","",11,null],[11,"get_handle","","",11,null],[11,"public_eq","","",11,{"inputs":[{"name":"pkey"},{"name":"pkey"}],"output":{"name":"bool"}}],[11,"drop","","",11,{"inputs":[{"name":"pkey"}],"output":null}],[0,"rand","openssl::crypto","",null,null],[5,"rand_bytes","openssl::crypto::rand","",null,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[0,"symm","openssl::crypto","",null,null],[3,"Crypter","openssl::crypto::symm","Represents a symmetric cipher context.",null,null],[4,"Mode","","",null,null],[13,"Encrypt","","",12,null],[13,"Decrypt","","",12,null],[4,"Type","","",null,null],[13,"AES_128_ECB","","",13,null],[13,"AES_128_CBC","","",13,null],[13,"AES_256_ECB","","",13,null],[13,"AES_256_CBC","","",13,null],[13,"RC4_128","","",13,null],[5,"encrypt","","Encrypts data, using the specified crypter type in encrypt mode with the\nspecified key and iv; returns the resulting (encrypted) data.",null,null],[5,"decrypt","","Decrypts data, using the specified crypter type in decrypt mode with the\nspecified key and iv; returns the resulting (decrypted) data.",null,null],[11,"clone","","",12,{"inputs":[{"name":"mode"}],"output":{"name":"mode"}}],[11,"clone","","",13,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[11,"new","","",14,{"inputs":[{"name":"crypter"},{"name":"type"}],"output":{"name":"crypter"}}],[11,"pad","","Enables or disables padding. If padding is disabled, total amount of\ndata encrypted must be a multiple of block size.",14,{"inputs":[{"name":"crypter"},{"name":"bool"}],"output":null}],[11,"init","","Initializes this crypter.",14,null],[11,"update","","Update this crypter with more data to encrypt or decrypt. Returns\nencrypted or decrypted bytes.",14,null],[11,"finalize","","Finish crypting. Returns the remaining partial block of output, if any.",14,{"inputs":[{"name":"crypter"}],"output":{"name":"vec"}}],[11,"drop","","",14,{"inputs":[{"name":"crypter"}],"output":null}],[0,"memcmp","openssl::crypto","",null,null],[5,"eq","openssl::crypto::memcmp","Returns `true` iff `a` and `b` contain the same bytes.",null,null],[0,"ssl","openssl","",null,null],[3,"SslContextOptions","openssl::ssl","",null,null],[3,"SslVerifyMode","","",null,null],[3,"SslContext","","An SSL context object",null,null],[3,"Ssl","","",null,null],[3,"SslStream","","A stream wrapper which handles SSL encryption for an underlying stream.",null,null],[4,"SslMethod","","Determines the SSL method supported",null,null],[13,"Sslv23","","Support the SSLv2, SSLv3 and TLSv1 protocols.",15,null],[13,"Sslv3","","Only support the SSLv3 protocol.",15,null],[13,"Tlsv1","","Only support the TLSv1 protocol.",15,null],[4,"MaybeSslStream","","A utility type to help in cases where the use of SSL is decided at runtime.",null,null],[13,"Ssl","","A connection using SSL",16,null],[13,"Normal","","A connection not using SSL",16,null],[5,"init","","Manually initialize SSL.\nIt is optional to call this function and safe to do so more than once.",null,{"inputs":[],"output":null}],[0,"error","","",null,null],[4,"SslError","openssl::ssl::error","An SSL error",null,null],[13,"StreamError","","The underlying stream reported an error",17,null],[13,"SslSessionClosed","","The SSL session has been closed by the other end",17,null],[13,"OpenSslErrors","","An error in the OpenSSL library",17,null],[4,"OpensslError","","An error from the OpenSSL library",null,null],[13,"UnknownError","","An unknown error",18,null],[12,"library","openssl::ssl::error::OpensslError","The library reporting the error",18,null],[12,"function","","The function reporting the error",18,null],[12,"reason","","The reason for the error",18,null],[11,"fmt","openssl::ssl::error","",17,{"inputs":[{"name":"sslerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"sslerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",17,{"inputs":[{"name":"sslerror"}],"output":{"name":"str"}}],[11,"cause","","",17,{"inputs":[{"name":"sslerror"}],"output":{"name":"option"}}],[11,"eq","","",18,{"inputs":[{"name":"opensslerror"},{"name":"opensslerror"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"opensslerror"},{"name":"opensslerror"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"opensslerror"}],"output":{"name":"opensslerror"}}],[11,"fmt","","",18,{"inputs":[{"name":"opensslerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Creates a new `OpenSslErrors` with the current contents of the error\nstack.",17,{"inputs":[{"name":"sslerror"}],"output":{"name":"sslerror"}}],[11,"from_error","","Creates an `SslError` from the raw numeric error code.",17,{"inputs":[{"name":"sslerror"},{"name":"c_ulong"}],"output":{"name":"sslerror"}}],[6,"VerifyCallback","openssl::ssl","The signature of functions that can be used to manually verify certificates",null,null],[6,"VerifyCallbackData","","The signature of functions that can be used to manually verify certificates\nwhen user-data should be carried for all verification process",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLV2","","",null,null],[17,"SSL_OP_NO_SSLV3","","",null,null],[17,"SSL_OP_NO_DTLSV1","","",null,null],[17,"SSL_OP_NO_TLSV1","","",null,null],[17,"SSL_OP_NO_DTLSV1_2","","",null,null],[17,"SSL_OP_NO_TLSV1_2","","",null,null],[17,"SSL_OP_NO_TLSV1_1","","",null,null],[17,"SSL_OP_NETSCAPE_CA_DN_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_CRYPTOPRO_TLSEXT_BUG","","",null,null],[17,"SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG","","",null,null],[17,"SSL_OP_MSIE_SSLV2_RSA_PADDING","","",null,null],[17,"SSL_OP_PKCS1_CHECK_1","","",null,null],[17,"SSL_OP_PKCS1_CHECK_2","","",null,null],[17,"SSL_OP_EPHEMERAL_RSA","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_SSL_MASK","","",null,null],[17,"SSL_VERIFY_PEER","","Verify that the server's certificate is trusted",null,null],[17,"SSL_VERIFY_NONE","","Do not verify the server's certificate",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","Terminate handshake if client did not return a certificate.\nUse together with SSL_VERIFY_PEER.",null,null],[8,"IntoSsl","","",null,null],[10,"into_ssl","","",19,{"inputs":[{"name":"intossl"}],"output":{"name":"result"}}],[11,"hash","","",20,null],[11,"cmp","","",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"option"}}],[11,"lt","","",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"le","","",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"gt","","",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"ge","","",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"eq","","",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",20,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"all","","Returns the set containing all flags.",20,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",20,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"u64"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"u64"}],"output":{"name":"sslcontextoptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",20,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"sub","","Returns the set difference of the two sets of flags.",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"not","","Returns the complement of this set of flags.",20,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"from_iter","","",20,{"inputs":[{"name":"sslcontextoptions"},{"name":"t"}],"output":{"name":"sslcontextoptions"}}],[11,"eq","","",15,{"inputs":[{"name":"sslmethod"},{"name":"sslmethod"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"sslmethod"},{"name":"sslmethod"}],"output":{"name":"bool"}}],[11,"hash","","",15,null],[11,"fmt","","",15,{"inputs":[{"name":"sslmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"sslmethod"}],"output":{"name":"sslmethod"}}],[11,"is_dtls","","",15,{"inputs":[{"name":"sslmethod"}],"output":{"name":"bool"}}],[11,"is_dtlsv1","","",15,{"inputs":[{"name":"sslmethod"}],"output":{"name":"bool"}}],[11,"is_dtlsv1_2","","",15,{"inputs":[{"name":"sslmethod"}],"output":{"name":"bool"}}],[11,"hash","","",21,null],[11,"cmp","","",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"option"}}],[11,"lt","","",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"le","","",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"gt","","",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"ge","","",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"eq","","",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"fmt","","",21,{"inputs":[{"name":"sslverifymode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",21,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"all","","Returns the set containing all flags.",21,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",21,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"i32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",21,{"inputs":[{"name":"sslverifymode"},{"name":"i32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",21,{"inputs":[{"name":"sslverifymode"},{"name":"i32"}],"output":{"name":"sslverifymode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",21,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",21,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"sub","","Returns the set difference of the two sets of flags.",21,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"not","","Returns the complement of this set of flags.",21,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"from_iter","","",21,{"inputs":[{"name":"sslverifymode"},{"name":"t"}],"output":{"name":"sslverifymode"}}],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",22,{"inputs":[{"name":"mutex"},{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",22,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",22,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",22,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"from","alloc::boxed","",23,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",23,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",23,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",23,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",24,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",25,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",26,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","","",27,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",28,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",29,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"is","openssl","Returns true if the boxed type is the same as `T`",30,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",30,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",30,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",30,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"into_ascii_uppercase","collections::string","",31,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"into_ascii_lowercase","","",31,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"into_ascii_uppercase","collections::vec","",32,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"into_ascii_lowercase","","",32,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"next","std::ascii","",33,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",33,null],[11,"next_back","","",33,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"shl","core::num","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",34,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",34,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",34,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",34,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",34,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",34,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",34,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",34,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",34,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",34,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",34,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",34,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"clone","std::thread::local","",35,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",35,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",36,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",36,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"new","std::thread::local::imp","",37,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"get","","",37,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",38,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",38,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",38,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread::scoped_tls::imp","",39,{"inputs":[{"name":"keyinner"}],"output":{"name":"keyinner"}}],[11,"set","","",39,null],[11,"get","","",39,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",40,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",40,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",40,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",40,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"scoped","","Spawns a new child thread that must be joined within a given\nscope, and returns a `JoinGuard`.",40,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle's token available if it is not already.",41,null],[11,"name","","Gets the thread's name.",41,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",41,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",41,{"inputs":[{"name":"thread"},{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",42,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",42,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"thread","","Extracts a handle to the thread this guard will join on.",43,{"inputs":[{"name":"joinguard"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish, returning the result of the\nthread's calculation.",43,{"inputs":[{"name":"joinguard"}],"output":{"name":"t"}}],[11,"drop","","",43,null],[11,"clone","std::collections::hash::table","",44,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",45,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",46,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",46,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",46,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",47,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",47,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",47,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",48,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",48,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",45,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",45,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",45,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",45,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",45,{"inputs":[{"name":"bucket"},{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit's initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",45,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",45,null],[11,"next","","",48,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",48,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",48,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key's hash,\ninto this bucket in the hashtable. Note how `self` is 'moved' into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",48,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",47,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",47,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the 'ideal' location\nas determined by the key's hash stored in it.",47,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",47,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",47,null],[11,"take","","Removes this bucket's key and value from the hashtable.",47,null],[11,"replace","","",47,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",47,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",47,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",47,null],[11,"expect_full","","",49,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",50,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",50,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",51,{"inputs":[{"name":"rawtable"},{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable's capacity, similar to a vector's.",51,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",51,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",51,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",51,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",51,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",51,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",52,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",52,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",53,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"len","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",55,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"len","","",55,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"len","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",57,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"len","","",57,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",57,null],[11,"clone","","",51,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",51,null],[11,"clone","std::collections::hash::map","",58,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",59,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",59,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",59,{"inputs":[{"name":"hashmap"},{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Creates an empty hashmap which will use the given hasher to hash keys.",59,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",59,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",59,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",59,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",59,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&'a K`.",59,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&'a V`.",59,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&'a K, &'a V)`.",59,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&'a K, &'a mut V)`.",59,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",59,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",59,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",59,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",59,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",59,null],[11,"get","","Returns a reference to the value corresponding to the key.",59,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",59,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",59,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",59,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",59,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",59,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",59,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",59,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"index","","",59,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",60,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",61,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",62,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",59,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",60,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",60,null],[11,"len","","",60,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",63,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"len","","",63,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",64,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"len","","",64,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",61,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"len","","",61,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",62,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"len","","",62,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",65,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"len","","",65,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",66,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",66,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",66,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",67,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",67,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",67,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry's old value",67,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",67,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it",68,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",59,{"inputs":[{"name":"hashmap"},{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",59,null],[11,"clone","","",69,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",69,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"hasher","","",69,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",69,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",70,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",70,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",70,{"inputs":[{"name":"hashset"},{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hash_state","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",70,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",70,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",70,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",70,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",70,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &'a T.",70,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",70,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",70,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",70,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",70,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",70,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",70,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",70,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",70,null],[11,"contains","","Returns `true` if the set contains a value.",70,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",70,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",70,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",70,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",70,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",70,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"eq","","",70,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",70,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",70,{"inputs":[{"name":"hashset"},{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",70,null],[11,"default","","",70,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",70,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",71,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",71,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"len","","",71,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",72,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"len","","",72,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",73,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"len","","",73,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",74,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",74,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"clone","","",75,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",75,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"clone","","",76,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",76,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"clone","","",77,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",77,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"hasher","std::collections::hash::state","",78,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",78,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",78,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"clone","collections::linked_list","",79,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",80,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",81,{"inputs":[{"name":"rawlink"},{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",81,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",82,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",82,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",82,null],[11,"iter","","Provides a forward iterator.",82,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",82,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",82,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",82,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",82,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",82,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",82,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",82,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",82,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",82,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",82,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",82,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",82,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",82,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",82,null],[11,"next","","",79,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",79,null],[11,"next_back","","",79,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",83,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"next_back","","",83,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",83,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",83,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",80,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"next_back","","",80,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",82,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",82,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",82,null],[11,"extend","","",82,null],[11,"eq","","",82,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",82,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",82,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",82,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",82,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",82,null],[11,"clone","collections::vec_deque","",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",84,null],[11,"default","","",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",84,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",84,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",84,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",84,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",84,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",84,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",84,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",84,null],[11,"iter","","Returns a front-to-back iterator.",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",84,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",84,null],[11,"len","","Returns the number of elements in the `VecDeque`.",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Creates a draining iterator that clears the `VecDeque` and iterates over\nthe removed items from start to end.",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",84,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",84,null],[11,"push_back","","Appends an element to the back of a buffer",84,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_back_remove","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",84,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",84,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",84,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",84,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",84,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",84,null],[11,"retain","","Retains only the elements specified by the predicate.",84,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",84,null],[11,"clone","","",85,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",85,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",85,null],[11,"next_back","","",85,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"indexable","","",85,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",85,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next","","",86,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",86,null],[11,"next_back","","",86,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",87,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",87,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",87,null],[11,"next_back","","",87,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",88,null],[11,"next","","",88,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",88,null],[11,"next_back","","",88,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",84,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",84,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",84,null],[11,"index","","",84,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",84,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",84,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",84,null],[11,"extend","","",84,null],[11,"fmt","","",84,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","collections::vec_map","",89,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"clone","","",89,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"clone_from","","",89,null],[11,"hash","","",89,null],[11,"new","","Creates an empty `VecMap`.",89,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"with_capacity","","Creates an empty `VecMap` with space for at least `capacity`\nelements before resizing.",89,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"vecmap"}}],[11,"capacity","","Returns the number of elements the `VecMap` can hold without\nreallocating.",89,{"inputs":[{"name":"vecmap"}],"output":{"name":"usize"}}],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long\nas all inserted keys are less than `len`.",89,null],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long as all inserted\nkeys are less than `len`.",89,null],[11,"keys","","Returns an iterator visiting all keys in ascending order of the keys.\nThe iterator's element type is `usize`.",89,{"inputs":[{"name":"vecmap"}],"output":{"name":"keys"}}],[11,"values","","Returns an iterator visiting all values in ascending order of the keys.\nThe iterator's element type is `&'r V`.",89,{"inputs":[{"name":"vecmap"}],"output":{"name":"values"}}],[11,"iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys.\nThe iterator's element type is `(usize, &'r V)`.",89,{"inputs":[{"name":"vecmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in ascending order of the keys,\nwith mutable references to the values.\nThe iterator's element type is `(usize, &'r mut V)`.",89,{"inputs":[{"name":"vecmap"}],"output":{"name":"itermut"}}],[11,"append","","Moves all elements from `other` into the map while overwriting existing keys.",89,null],[11,"split_off","","Splits the collection into two at the given key.",89,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"vecmap"}}],[11,"drain","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, emptying (but not consuming) the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`. Keeps the allocated memory for reuse.",89,{"inputs":[{"name":"vecmap"}],"output":{"name":"drain"}}],[11,"len","","Returns the number of elements in the map.",89,{"inputs":[{"name":"vecmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",89,{"inputs":[{"name":"vecmap"}],"output":{"name":"bool"}}],[11,"clear","","Clears the map, removing all key-value pairs.",89,null],[11,"get","","Returns a reference to the value corresponding to the key.",89,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",89,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",89,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",89,{"inputs":[{"name":"vecmap"},{"name":"usize"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",89,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",89,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"entry"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",90,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and\nreturns a mutable reference to the value in the entry.",90,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default\nfunction if empty, and returns a mutable reference to the value in the\nentry.",90,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.",91,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",92,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",92,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",92,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,\nand returns the entry's old value.",92,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",92,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"eq","","",89,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",89,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"option"}}],[11,"cmp","","",89,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"ordering"}}],[11,"fmt","","",89,{"inputs":[{"name":"vecmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",89,{"inputs":[{"name":"vecmap"},{"name":"i"}],"output":{"name":"vecmap"}}],[11,"into_iter","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, consuming the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`.",89,{"inputs":[{"name":"vecmap"}],"output":{"name":"intoiter"}}],[11,"extend","","",89,null],[11,"extend","","",89,null],[11,"index","","",89,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index","","",89,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",89,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",89,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"clone","","",93,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",93,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"next_back","","",93,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",94,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next_back","","",94,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",95,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",96,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"next","","",97,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"next_back","","",97,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"next","","",95,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next_back","","",95,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"next","","",96,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"next_back","","",96,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"next","","",98,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"next_back","","",98,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","collections::binary_heap","",99,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"default","","",99,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",99,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",99,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",99,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",99,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",99,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",99,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",99,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",99,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",99,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",99,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",99,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",99,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",99,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",99,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",99,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",99,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",99,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",99,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",99,null],[11,"drop","","",100,null],[11,"clone","","",101,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",101,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"next_back","","",101,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",102,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"next_back","","",102,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",103,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"next_back","","",103,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from_iter","","",99,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",99,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",99,null],[11,"extend","","",99,null],[11,"drop","std::dynamic_lib","",104,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",104,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",104,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",104,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",104,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",104,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",104,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",105,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"next","","",106,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"clone","","",107,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",107,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",107,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",107,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",108,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"fmt","","",109,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",109,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",110,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"len","","",110,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",111,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",111,null],[11,"len","","",111,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",112,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",112,null],[11,"cmp","","",112,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",112,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",112,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",112,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",112,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",112,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",112,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",113,null],[11,"fmt","","",114,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",114,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",114,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",112,{"inputs":[{"name":"cstring"},{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",112,{"inputs":[{"name":"cstring"},{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_ptr","","Retakes ownership of a CString that was transferred to C.",112,null],[11,"into_ptr","","Transfers ownership of the string to a C caller.",112,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",112,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",112,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",113,null],[11,"as_ptr","","Returns the inner pointer to this C string.",113,null],[11,"to_bytes","","Converts this C string to a byte slice.",113,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",113,null],[11,"to_str","","Yields a `&str` slice if the `CStr` contains valid UTF-8.",113,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow<str>`.",113,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",112,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",112,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",112,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",114,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",114,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",114,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",114,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",115,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"eq","std::ffi::c_str","",113,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",113,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",113,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",113,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"clone","std::ffi::os_str","",116,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",116,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",116,{"inputs":[{"name":"osstring"},{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",116,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",116,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&OsStr` slice.",116,null],[11,"from","","",116,{"inputs":[{"name":"osstring"},{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",116,{"inputs":[{"name":"osstring"},{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",116,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",117,{"inputs":[{"name":"osstr"},{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `OsStr` is valid unicode.",117,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow<str>`.",117,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",117,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",117,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",117,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"deref","","",116,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",116,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",116,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",116,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",116,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",116,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",116,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",116,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",116,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",116,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",116,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",116,null],[11,"eq","","",117,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",117,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",117,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",117,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",117,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",117,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",117,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",117,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",117,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"hash","","",117,null],[11,"fmt","","",117,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",116,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",117,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",117,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",116,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",31,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",118,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",119,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",119,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",119,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",120,null],[11,"eq","","",120,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",120,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",121,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",121,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",121,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",121,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",121,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",121,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",121,null],[11,"read_to_end","","",121,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",121,null],[11,"flush","","",121,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",121,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank net set of options ready for configuration.",118,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",118,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",118,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",118,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",118,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",118,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",118,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",122,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",122,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",122,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",122,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",122,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",119,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",119,null],[11,"is_dir","","Test whether this file type represents a directory.",120,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",120,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",120,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",123,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",124,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",124,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",124,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",124,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",125,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"metadata","std::path","",126,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","",126,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","",126,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","",126,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","",126,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","",126,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","",126,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","",126,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"new","std::fs","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",127,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",127,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",127,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",128,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",128,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",128,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",128,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",128,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",128,null],[11,"fill_buf","","",128,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",128,null],[11,"fmt","","",128,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",128,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",129,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",130,{"inputs":[{"name":"bufwriter"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",130,{"inputs":[{"name":"bufwriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",130,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",130,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",130,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",130,null],[11,"flush","","",130,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",130,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",130,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",129,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",129,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",115,{"inputs":[{"name":"error"},{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",129,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",129,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",131,{"inputs":[{"name":"linewriter"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",131,{"inputs":[{"name":"linewriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",131,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",131,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",131,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",131,null],[11,"flush","","",131,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",132,null],[11,"with_capacities","","Creates a new buffered stream with explicitly listed capacities for the\nreader/writer buffer.",133,{"inputs":[{"name":"bufstream"},{"name":"usize"},{"name":"usize"},{"name":"s"}],"output":{"name":"bufstream"}}],[11,"new","","Creates a new buffered stream with the default reader/writer buffer\ncapacities.",133,{"inputs":[{"name":"bufstream"},{"name":"s"}],"output":{"name":"bufstream"}}],[11,"get_ref","","Gets a reference to the underlying stream.",133,{"inputs":[{"name":"bufstream"}],"output":{"name":"s"}}],[11,"get_mut","","Gets a mutable reference to the underlying stream.",133,{"inputs":[{"name":"bufstream"}],"output":{"name":"s"}}],[11,"into_inner","","Unwraps this `BufStream`, returning the underlying stream.",133,{"inputs":[{"name":"bufstream"}],"output":{"name":"result"}}],[11,"fill_buf","","",133,{"inputs":[{"name":"bufstream"}],"output":{"name":"result"}}],[11,"consume","","",133,null],[11,"read","","",133,null],[11,"write","","",133,null],[11,"flush","","",133,{"inputs":[{"name":"bufstream"}],"output":{"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"bufstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::io::cursor","",134,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",134,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",134,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",134,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",134,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",134,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",134,null],[11,"seek","","",134,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"seek","","",134,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"seek","","",134,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",134,null],[11,"read","","",134,null],[11,"read","","",134,null],[11,"fill_buf","","",134,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",134,null],[11,"fill_buf","","",134,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",134,null],[11,"fill_buf","","",134,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",134,null],[11,"write","","",134,null],[11,"flush","","",134,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",134,null],[11,"flush","","",134,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",115,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",136,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",136,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",115,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",115,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",115,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",115,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",115,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",115,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",115,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",115,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",137,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",115,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",115,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",23,null],[11,"read_to_end","","",23,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",23,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","","",23,null],[11,"flush","","",23,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",23,null],[11,"write_fmt","","",23,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",23,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",23,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",23,null],[11,"read_until","","",23,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",23,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",32,null],[11,"write_all","","",32,null],[11,"flush","","",32,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"new","std::io::lazy","",138,null],[11,"get","","",138,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"read","std::io::util","",139,null],[11,"fill_buf","","",139,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",139,null],[11,"read","","",140,null],[11,"write","","",141,null],[11,"flush","","",141,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",142,null],[11,"write","","",143,null],[11,"flush","","",143,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",144,null],[11,"flush","","",144,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"write","","",145,null],[11,"flush","","",145,{"inputs":[{"name":"maybe"}],"output":{"name":"result"}}],[11,"read","","",145,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",146,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",146,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",146,null],[11,"read_to_end","","",146,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",146,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",147,null],[11,"read_to_end","","",147,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",147,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",147,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",148,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",148,null],[11,"flush","","",148,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",148,null],[11,"write_fmt","","",148,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",149,null],[11,"flush","","",149,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",150,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",150,null],[11,"flush","","",150,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",150,null],[11,"write_fmt","","",150,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",151,null],[11,"flush","","",151,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",152,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",152,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",152,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",153,null],[11,"flush","","",153,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",154,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",155,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",155,null],[11,"fill_buf","","",155,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",155,null],[11,"read","","",156,null],[11,"next","","",157,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",158,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",159,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",158,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",158,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",158,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",160,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",161,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",162,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",162,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",162,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",162,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",162,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",162,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",162,null],[11,"fmt","","",162,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",162,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",162,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",163,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",163,null],[11,"clone","","",163,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",163,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",164,{"inputs":[{"name":"ipv4addr"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",164,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address 0.0.0.0.",164,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",164,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",164,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",164,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",164,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",164,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",164,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",164,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",164,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",164,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",162,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",164,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",164,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",164,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",164,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",164,null],[11,"partial_cmp","","",164,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",164,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",164,{"inputs":[{"name":"ipv4addr"},{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",165,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",165,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address ::.",165,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",165,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",165,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",165,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",165,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",165,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",165,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address's multicast scope if the address is multicast.",165,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",165,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",165,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",165,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",165,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",165,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",165,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",165,null],[11,"partial_cmp","","",165,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",165,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",166,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",166,null],[11,"eq","","",166,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",166,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",166,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",166,{"inputs":[{"name":"socketaddr"},{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",166,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"port","","Returns the port number associated with this socket address.",166,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",167,{"inputs":[{"name":"socketaddrv4"},{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",167,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"port","","Returns the port number associated with this socket address.",167,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",168,{"inputs":[{"name":"socketaddrv6"},{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",168,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"port","","Returns the port number associated with this socket address.",168,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"flowinfo","","Returns scope ID associated with this address, corresponding to the\n`sin6_flowinfo` field in C.",168,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"scope_id","","Returns scope ID associated with this address, corresponding to the\n`sin6_scope_id` field in C.",168,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"fmt","","",166,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",167,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",167,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",168,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",168,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",167,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",168,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",167,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",168,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",167,null],[11,"hash","","",168,null],[11,"to_socket_addrs","","",166,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",167,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",168,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",169,{"inputs":[{"name":"tcpstream"},{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",169,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",169,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",169,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",169,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_nodelay","","Sets the nodelay flag on this connection to the boolean specified.",169,{"inputs":[{"name":"tcpstream"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_keepalive","","Sets the keepalive timeout to the timeout specified.",169,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",169,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",169,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",169,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",169,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",169,null],[11,"read_to_end","","",169,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",169,null],[11,"flush","","",169,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",169,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",170,{"inputs":[{"name":"tcplistener"},{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",170,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",170,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",170,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",170,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",171,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",170,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",172,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",172,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",172,null],[11,"local_addr","","Returns the socket address that this socket was created from.",172,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",172,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_broadcast","","Sets the broadcast flag on or off.",172,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_multicast_loop","","Sets the multicast loop flag to the specified value.",172,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"join_multicast","","Joins a multicast IP address (becomes a member of it).",172,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"leave_multicast","","Leaves a multicast IP address (drops membership from it).",172,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"set_multicast_time_to_live","","Sets the multicast TTL.",172,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"set_time_to_live","","Sets this socket's TTL.",172,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",172,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",172,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",172,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",172,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",172,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",162,{"inputs":[{"name":"ipaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",164,{"inputs":[{"name":"ipv4addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",165,{"inputs":[{"name":"ipv6addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",166,{"inputs":[{"name":"socketaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",173,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",173,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",173,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::net","",174,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",174,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",174,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",175,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"as_raw_fd","std::fs","",121,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",121,{"inputs":[{"name":"file"},{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",121,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",169,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",170,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",172,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",169,{"inputs":[{"name":"tcpstream"},{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",170,{"inputs":[{"name":"tcplistener"},{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",172,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",169,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",170,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",172,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",116,{"inputs":[{"name":"osstring"},{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",116,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",117,null],[11,"as_bytes","","",117,null],[11,"mode","std::fs","",119,{"inputs":[{"name":"permissions"}],"output":{"name":"u16"}}],[11,"set_mode","","",119,null],[11,"from_mode","","",119,{"inputs":[{"name":"permissions"},{"name":"u16"}],"output":{"name":"permissions"}}],[11,"mode","","",118,{"inputs":[{"name":"openoptions"},{"name":"u16"}],"output":{"name":"openoptions"}}],[11,"dev","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"i32"}}],[11,"ino","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"u16"}}],[11,"nlink","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"u16"}}],[11,"uid","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"i32"}}],[11,"size","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"i32"}}],[11,"blocks","","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"is_block_device","","",120,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",120,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",120,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",120,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",124,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",127,{"inputs":[{"name":"dirbuilder"},{"name":"u16"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",176,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",176,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"signal","","",177,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",178,{"inputs":[{"name":"stdio"},{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",179,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",180,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",181,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",179,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",180,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",181,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"eq","std::path","",182,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",182,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",182,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",182,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",182,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",182,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",182,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",182,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",182,null],[11,"fmt","","",182,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",182,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",182,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",183,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",183,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",183,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",183,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",183,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",183,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",183,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",183,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",184,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",184,null],[11,"clone","","",184,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",184,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",184,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",184,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",184,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",184,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"fmt","","",185,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",185,null],[11,"cmp","","",185,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",185,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",185,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",185,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",185,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",185,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",185,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",185,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",185,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",185,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",186,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",187,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",186,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",186,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",186,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",186,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",187,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",187,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",187,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",187,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",187,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",186,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",186,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",186,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",186,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",186,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"hash","","",188,null],[11,"clone","","",188,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",188,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",188,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",188,null],[11,"pop","","Truncate `self` to `self.parent()`.",188,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",188,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",188,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",188,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",188,{"inputs":[{"name":"pathbuf"},{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",188,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",188,{"inputs":[{"name":"pathbuf"},{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",188,{"inputs":[{"name":"pathbuf"},{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",188,null],[11,"fmt","","",188,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",126,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",126,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `Path` is valid unicode.",126,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow<str>`.",126,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",126,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",126,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",126,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",126,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",126,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",126,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",126,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",126,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",126,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",126,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",126,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",126,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",126,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",126,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",126,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",126,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path's components viewed as `OsStr` slices.",126,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",126,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"deref","","",188,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",188,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",188,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","","",126,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",188,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",188,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",188,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",188,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",188,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"hash","","",126,null],[11,"as_ref","","",126,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",126,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",189,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",189,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",126,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",126,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",126,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",126,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",117,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","","",116,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",31,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",188,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"write","std::process","",179,null],[11,"flush","","",179,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",180,null],[11,"read","","",181,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",176,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",176,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",176,null],[11,"env","","Inserts or updates an environment variable mapping.",176,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",176,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",176,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",176,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process's stdin handle (file descriptor 0).",176,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process's stdout handle (file descriptor 1).",176,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process's stderr handle (file descriptor 2).",176,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",176,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",176,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",176,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",176,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",190,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",190,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",190,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",178,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",178,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",178,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"fmt","","",177,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",177,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",177,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",177,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",177,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",177,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",191,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",191,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",191,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning a `Output`\ninstance.",191,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",192,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",192,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe's state\nflag.",192,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe's state\nflag.",192,{"inputs":[{"name":"signaltoken"},{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",193,null],[11,"new","std::sync::mpsc::oneshot","",194,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",194,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",194,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",194,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",194,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",194,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",194,null],[11,"drop_port","","",194,null],[11,"can_recv","","",194,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",194,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",194,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",194,null],[11,"eq","std::sync::mpsc::select","",195,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",195,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",196,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",196,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",196,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",197,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",197,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",197,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",197,null],[11,"drop","","",196,null],[11,"drop","","",197,null],[11,"next","","",198,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"new","std::sync::mpsc::shared","",199,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"postinit_lock","","",199,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",199,null],[11,"send","","",199,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",199,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",199,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",199,null],[11,"drop_chan","","",199,null],[11,"drop_port","","",199,null],[11,"can_recv","","",199,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",199,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",199,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",199,null],[11,"new","std::sync::mpsc::stream","",200,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",200,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",200,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",200,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",200,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",200,null],[11,"drop_port","","",200,null],[11,"can_recv","","",200,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",200,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",200,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",200,null],[11,"fmt","std::sync::mpsc::sync","",201,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",202,{"inputs":[{"name":"packet"},{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",202,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",202,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",202,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",202,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",202,null],[11,"drop_chan","","",202,null],[11,"drop_port","","",202,null],[11,"can_recv","","",202,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",202,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",202,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",202,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",203,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",203,null],[11,"pop","","Pops some data from this queue.",203,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",203,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",204,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",204,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",204,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",204,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",204,null],[11,"clone","std::sync::mpsc","",205,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",205,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",205,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",206,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",206,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",206,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",206,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",207,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",207,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",207,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",207,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",208,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",208,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",208,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",209,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",209,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",209,null],[11,"send","","Sends a value on this synchronous channel.",210,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",210,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",210,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",210,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",211,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",211,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",211,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",212,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",213,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",211,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",211,null],[11,"fmt","","",205,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",205,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",205,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",205,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",208,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",208,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",208,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",208,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",206,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",206,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",206,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",207,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",207,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",207,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",214,{"inputs":[{"name":"barrier"},{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",214,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the \"leader thread\".",215,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"new","std::sync::condvar","Creates a new condition variable which is ready to be waited on and\nnotified.",216,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",216,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",216,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",216,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",216,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",216,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",216,null],[11,"drop","","",216,null],[11,"new","","Creates a new condition variable",217,{"inputs":[{"name":"staticcondvar"}],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",217,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",217,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",217,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",217,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",217,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",217,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",217,null],[11,"get","std::sync::future","Get the value of the future.",218,{"inputs":[{"name":"future"}],"output":{"name":"a"}}],[11,"into_inner","","Gets the value from this future, forcing evaluation.",218,{"inputs":[{"name":"future"}],"output":{"name":"a"}}],[11,"get_ref","","Executes the future's closure and then returns a reference\nto the result.  The reference lasts as long as\nthe future.",218,{"inputs":[{"name":"future"}],"output":{"name":"a"}}],[11,"from_value","","Create a future from a value.",218,{"inputs":[{"name":"future"},{"name":"a"}],"output":{"name":"future"}}],[11,"from_fn","","Create a future from a function.",218,{"inputs":[{"name":"future"},{"name":"f"}],"output":{"name":"future"}}],[11,"from_receiver","","Create a future from a port",218,{"inputs":[{"name":"future"},{"name":"receiver"}],"output":{"name":"future"}}],[11,"spawn","","Create a future from a unique closure.",218,{"inputs":[{"name":"future"},{"name":"f"}],"output":{"name":"future"}}],[11,"drop","std::sync::mutex","",22,null],[11,"fmt","","",22,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",219,{"inputs":[{"name":"staticmutex"}],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",219,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",219,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",219,null],[11,"deref","","",220,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",220,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",220,null],[11,"new","std::sync::once","Creates a new `Once` value.",221,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",221,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock<T>` which is unlocked.",222,{"inputs":[{"name":"rwlock"},{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",222,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",222,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",222,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",222,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",222,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"drop","","",222,null],[11,"fmt","","",222,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rwlock.",223,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",223,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",223,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",223,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",223,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",223,null],[11,"deref","","",224,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",225,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",225,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",224,null],[11,"drop","","",225,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",226,{"inputs":[{"name":"semaphore"},{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",226,null],[11,"release","","Release a resource from this semaphore.",226,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",226,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",227,null],[11,"default","core::atomic","",228,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",229,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",230,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",231,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",232,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",228,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",228,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",228,null],[11,"swap","","Stores a value into the bool, returning the old value.",228,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",228,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",228,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",228,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",228,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",228,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",229,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",229,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",229,null],[11,"swap","","Stores a value into the isize, returning the old value.",229,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",229,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",229,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",229,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",229,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",229,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",229,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",230,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",230,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",230,null],[11,"swap","","Stores a value into the usize, returning the old value.",230,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",230,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",230,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",230,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",230,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",230,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",230,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",231,null],[11,"load","","Loads a value from the pointer.",231,null],[11,"store","","Stores a value into the pointer.",231,null],[11,"swap","","Stores a value into the pointer, returning the old value.",231,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",231,null],[11,"fmt","","",230,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",229,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",228,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",231,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::time::duration","",233,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",233,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",233,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",233,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",233,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",233,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",233,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",233,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",233,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",233,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Crates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",233,{"inputs":[{"name":"duration"},{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",233,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",233,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",233,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",233,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"secs","","Returns the number of whole seconds represented by this duration.",233,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",233,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"extra_nanos","","Returns the nanosecond precision represented by this duration.",233,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",233,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",233,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",233,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div","","",233,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",234,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",234,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",234,null],[11,"wait","","Waits for a signal on the specified mutex.",234,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",234,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",234,null],[11,"new","std::sys_common::mutex","Creates a new mutex for use.",235,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","Locks the mutex blocking the current thread until it is available.",235,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",235,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",235,null],[11,"destroy","","Deallocates all resources associated with this mutex.",235,null],[11,"next","std::sys_common::net","",236,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",236,null],[11,"connect","","",237,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",237,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"into_socket","","",237,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_nodelay","","",237,{"inputs":[{"name":"tcpstream"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_keepalive","","",237,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",237,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",237,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",237,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","",237,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",237,null],[11,"write","","",237,null],[11,"peer_addr","","",237,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",237,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",237,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",237,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",237,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",238,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",238,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"into_socket","","",238,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",238,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",238,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",238,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",238,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",239,{"inputs":[{"name":"udpsocket"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",239,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"into_socket","","",239,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",239,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",239,null],[11,"send_to","","",239,null],[11,"set_broadcast","","",239,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_multicast_loop","","",239,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"join_multicast","","",239,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"leave_multicast","","",239,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"multicast_time_to_live","","",239,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"time_to_live","","",239,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"duplicate","","",239,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",239,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",239,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",239,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","",239,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",239,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::poison","",240,{"inputs":[{"name":"flag"}],"output":{"name":"flag"}}],[11,"borrow","","",240,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",240,null],[11,"get","","",240,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",241,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",241,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",241,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",241,{"inputs":[{"name":"poisonerror"},{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",241,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",241,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",241,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",242,{"inputs":[{"name":"trylockerror"},{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",242,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",242,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",242,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",242,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",243,{"inputs":[{"name":"reentrantmutex"},{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",243,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",243,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",243,null],[11,"fmt","","",243,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",244,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",244,null],[11,"new","std::sys_common::rwlock","Creates a new reader-writer lock for use.",245,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",245,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",245,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",245,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",245,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",245,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",245,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",245,null],[11,"new","std::sys_common::thread_local","",246,{"inputs":[{"name":"statickey"},{"name":"option"}],"output":{"name":"statickey"}}],[11,"get","","Gets the value associated with this TLS key",246,null],[11,"set","","Sets this TLS key to a new value.",246,null],[11,"destroy","","Deallocates this OS TLS key.",246,null],[11,"new","","Creates a new managed OS TLS key.",247,{"inputs":[{"name":"key"},{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",247,null],[11,"set","","See StaticKey::set",247,null],[11,"drop","","",247,null],[11,"clone","std::sys_common::wtf8","",248,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",248,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",248,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",248,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",248,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",248,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",248,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",248,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",248,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",248,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",248,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",248,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",248,{"inputs":[{"name":"codepoint"},{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",248,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",248,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",248,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",249,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",249,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",249,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",249,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",249,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",249,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",249,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",249,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",249,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&str` slice.",250,{"inputs":[{"name":"wtf8"},{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",250,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b'\\xFF' otherwise.",250,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Returns an iterator for the string’s code points.",250,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&str` slice.",250,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&str` slice if the contents are well-formed in UTF-8.",250,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",250,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",249,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",249,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an new, empty WTF-8 string.",249,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates an new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",249,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",249,{"inputs":[{"name":"wtf8buf"},{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&str` slice.",249,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",249,null],[11,"as_slice","","",249,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",249,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",249,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",249,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",249,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",249,null],[11,"push","","Append a code point at the end of the string.",249,null],[11,"truncate","","Shortens a string to the specified length.",249,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",249,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",249,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",249,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",249,null],[11,"eq","","",250,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",250,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",250,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",250,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",250,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",250,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",250,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",250,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",250,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",250,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",250,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",250,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",251,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",251,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",251,null],[11,"clone","","",252,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",252,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",252,null],[11,"hash","","",248,null],[11,"hash","","",249,null],[11,"hash","","",250,null],[11,"is_ascii","","",250,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",250,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",250,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",250,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",250,null],[11,"make_ascii_lowercase","","",250,null],[11,"new","std::sys::condvar","",253,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","",253,null],[11,"notify_all","","",253,null],[11,"wait","","",253,null],[11,"wait_timeout","","",253,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",253,null],[11,"new","std::sys::fd","",254,{"inputs":[{"name":"filedesc"},{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",254,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",254,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",254,null],[11,"write","","",254,null],[11,"set_cloexec","","",254,null],[11,"drop","","",254,null],[11,"clone","std::sys::fs","",255,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",256,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",256,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",256,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",256,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",257,null],[11,"eq","","",257,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",257,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",257,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",258,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",258,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"file_type","","",258,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"as_raw_stat","std::fs","",122,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"readonly","std::sys::fs","",256,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",256,null],[11,"mode","","",256,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u16"}}],[11,"is_dir","","",257,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",257,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",257,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is","","",257,{"inputs":[{"name":"filetype"},{"name":"u16"}],"output":{"name":"bool"}}],[11,"next","","",259,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",260,null],[11,"path","","",261,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",261,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",261,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",261,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",261,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",255,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","",255,null],[11,"write","","",255,null],[11,"append","","",255,null],[11,"truncate","","",255,null],[11,"create","","",255,null],[11,"mode","","",255,null],[11,"open","","",262,{"inputs":[{"name":"file"},{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",262,{"inputs":[{"name":"file"},{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"file_attr","","",262,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",262,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",262,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",262,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",262,null],[11,"write","","",262,null],[11,"flush","","",262,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",262,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fd","","",262,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",262,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",263,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",263,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",263,null],[11,"fmt","","",262,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",264,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","",264,null],[11,"unlock","","",264,null],[11,"try_lock","","",264,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",264,null],[11,"uninitialized","","",265,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"reentrantmutex"}}],[11,"init","","",265,null],[11,"lock","","",265,null],[11,"try_lock","","",265,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",265,null],[11,"destroy","","",265,null],[11,"new","std::sys::net","",266,{"inputs":[{"name":"socket"},{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",266,null],[11,"duplicate","","",266,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",266,null],[11,"set_timeout","","",266,{"inputs":[{"name":"socket"},{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[11,"timeout","","",266,{"inputs":[{"name":"socket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"next","std::sys::os","",267,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",267,null],[11,"fmt","","",268,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",268,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",268,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",269,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",269,null],[11,"len","","",269,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",270,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",270,null],[11,"hash","std::sys::os_str","",271,null],[11,"clone","","",271,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",272,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",271,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",271,{"inputs":[{"name":"buf"},{"name":"string"}],"output":{"name":"buf"}}],[11,"as_slice","","",271,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",271,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",271,null],[11,"from_str","","",272,{"inputs":[{"name":"slice"},{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",272,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",272,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",272,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",273,{"inputs":[{"name":"anonpipe"},{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",273,null],[11,"write","","",273,null],[11,"raw","","",273,{"inputs":[{"name":"anonpipe"}],"output":{"name":"i32"}}],[11,"fd","","",273,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",273,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"clone","std::sys::process","",274,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"new","","",274,{"inputs":[{"name":"command"},{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",274,null],[11,"args","","",274,null],[11,"env","","",274,null],[11,"env_remove","","",274,null],[11,"env_clear","","",274,null],[11,"cwd","","",274,null],[11,"fmt","","",275,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",275,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",275,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",275,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",275,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",275,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",275,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","",276,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"spawn","","",276,{"inputs":[{"name":"process"},{"name":"command"},{"name":"stdio"},{"name":"stdio"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"id","","",276,{"inputs":[{"name":"process"}],"output":{"name":"u32"}}],[11,"wait","","",276,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"try_wait","","",276,{"inputs":[{"name":"process"}],"output":{"name":"option"}}],[11,"new","std::sys::rwlock","",277,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","",277,null],[11,"try_read","","",277,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",277,null],[11,"try_write","","",277,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",277,null],[11,"write_unlock","","",277,null],[11,"destroy","","",277,null],[11,"new","std::sys::stack_overflow","",278,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"drop","","",278,null],[11,"new","std::sys::thread","",279,{"inputs":[{"name":"thread"},{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",279,null],[11,"set_name","","",279,null],[11,"sleep","","",279,null],[11,"join","","",279,null],[11,"drop","","",279,null],[11,"now","std::sys::time::inner","",280,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"new","std::sys::stdio","",281,{"inputs":[{"name":"stdin"}],"output":{"name":"result"}}],[11,"read","","",281,null],[11,"new","","",282,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write","","",282,null],[11,"new","","",283,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write","","",283,null],[11,"write","","",283,null],[11,"flush","","",283,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"clone","std::rt::libunwind","",284,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"clone","","",285,{"inputs":[{"name":"_unwind_reason_code"}],"output":{"name":"_unwind_reason_code"}}],[11,"clone","std::rt::dwarf::eh","",286,{"inputs":[{"name":"ehcontext"}],"output":{"name":"ehcontext"}}],[11,"new","std::rt::dwarf","",287,null],[11,"read","","",287,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"t"}}],[11,"read_uleb128","","",287,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"u64"}}],[11,"read_sleb128","","",287,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"i64"}}],[11,"new","std::rand::os::imp","Create a new `OsRng`.",288,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",288,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",288,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",288,null],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",289,{"inputs":[{"name":"readerrng"},{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",289,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",289,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",289,null],[11,"clone","std::rand","",290,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",290,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",290,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",290,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",290,null],[11,"from_seed","","",290,null],[11,"reseed","","",291,null],[11,"clone","","",292,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",292,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",292,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",292,null],[11,"new","core::ptr","Creates a new `Unique`.",293,null],[11,"get","","Dereferences the content.",293,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",293,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",293,null],[11,"fmt","","",293,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",294,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc<T>` is unique.",294,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"result"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",294,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",294,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",294,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak<T>` values that share\nthe same inner value.",294,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc<T>` is\nunique.",294,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"make_unique","","Make a mutable reference from the given `Rc<T>`.",294,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",294,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",294,null],[11,"clone","","Makes a clone of the `Rc<T>`.",294,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",294,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",294,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",294,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",294,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",294,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",294,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",294,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",294,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",294,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",294,null],[11,"fmt","","",294,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",294,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",294,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",295,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",295,null],[11,"clone","","Makes a clone of the `Weak<T>`.",295,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",295,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","rustc_unicode::char","",296,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",297,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"next","","",298,{"inputs":[{"name":"casemappingiter"}],"output":{"name":"option"}}],[11,"fmt","openssl","",299,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",299,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",299,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",299,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",299,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",299,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",299,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",299,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",300,null],[11,"fmt","","",300,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",300,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",300,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",300,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",300,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"clone","collections::str","",301,{"inputs":[{"name":"decompositiontype"}],"output":{"name":"decompositiontype"}}],[11,"clone","","",302,{"inputs":[{"name":"decompositions"}],"output":{"name":"decompositions"}}],[11,"next","","",302,{"inputs":[{"name":"decompositions"}],"output":{"name":"option"}}],[11,"size_hint","","",302,null],[11,"clone","","",303,{"inputs":[{"name":"recompositionstate"}],"output":{"name":"recompositionstate"}}],[11,"clone","","",304,{"inputs":[{"name":"recompositions"}],"output":{"name":"recompositions"}}],[11,"next","","",304,{"inputs":[{"name":"recompositions"}],"output":{"name":"option"}}],[11,"clone","","",305,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",305,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",305,null],[11,"borrow","collections::string","",31,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",306,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",306,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",306,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",306,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",307,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",308,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",307,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",307,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",307,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",309,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",309,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",309,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",309,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",309,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",309,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",309,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",309,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",310,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",310,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",310,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",310,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",310,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",310,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",310,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",310,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",311,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",311,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",311,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",311,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",311,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",311,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",311,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",311,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",312,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",312,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",313,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",313,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",314,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",314,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",312,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",312,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",312,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",312,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",312,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",315,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",315,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",316,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",316,null],[11,"matching","","",316,null],[11,"use_early_reject","","",317,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",317,null],[11,"matching","","",317,null],[11,"fmt","core::simd","",318,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",318,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",319,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",319,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",320,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",320,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",321,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",321,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",322,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",322,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",323,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",323,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",324,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",324,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",325,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",325,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",326,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",326,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",327,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",327,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",328,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",328,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",328,null],[11,"finish","","",328,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",328,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",328,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"fmt","core::cmp","",329,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",329,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",329,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",329,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",329,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",329,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",329,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",32,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",32,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",32,null],[11,"from_raw_buf","","Creates a vector by copying the elements from a raw pointer.",32,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",32,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",32,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",32,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",32,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",32,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",32,null],[11,"as_slice","","Extracts a slice containing the entire vector.",32,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",32,null],[11,"set_len","","Sets the length of a vector.",32,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",32,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",32,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",32,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",32,null],[11,"push","","Appends an element to the back of a collection.",32,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it is empty.",32,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",32,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",32,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",32,null],[11,"len","","Returns the number of elements in the vector.",32,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",32,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"map_in_place","","Converts a `Vec<T>` to a `Vec<U>` where `T` and `U` have the same\nsize and in case they are not zero-sized the same minimal alignment.",32,{"inputs":[{"name":"vec"},{"name":"f"}],"output":{"name":"vec"}}],[11,"split_off","","Splits the collection into two at the given index.",32,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",32,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",32,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",32,null],[11,"clone","","",32,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",32,null],[11,"hash","","",32,null],[11,"index","","",32,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",32,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",32,null],[11,"index","","",32,null],[11,"index","","",32,null],[11,"index","","",32,null],[11,"index_mut","","",32,null],[11,"index_mut","","",32,null],[11,"index_mut","","",32,null],[11,"index_mut","","",32,null],[11,"deref","","",32,null],[11,"deref_mut","","",32,null],[11,"from_iter","","",32,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",32,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",32,null],[11,"extend","","",32,null],[11,"eq","","",32,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","collections::borrow","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",330,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"partial_cmp","","",32,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",32,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",32,null],[11,"default","","",32,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",32,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",32,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",32,null],[11,"from","","",32,null],[11,"from","","",32,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",330,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",32,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"into_inner","","Drops all items that have not yet been moved and returns the empty vector.",331,{"inputs":[{"name":"intoiter"}],"output":{"name":"vec"}}],[11,"next","","",331,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",331,null],[11,"count","","",331,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",331,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",331,null],[11,"next","","",332,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",332,null],[11,"next_back","","",332,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",332,null],[11,"drop","","",333,null],[11,"drop","","",334,null],[11,"clone","alloc::boxed","",335,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",336,null],[11,"make_place","","",336,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"intermediatebox"}}],[11,"finalize","","",336,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",23,{"inputs":[{"name":"box"},{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",335,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",336,null],[11,"new","","Allocates memory on the heap and then moves `x` into it.",23,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",23,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",23,null],[11,"default","","",23,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",23,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",23,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",23,null],[11,"clone","","",23,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",23,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",23,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",23,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",23,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",23,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",23,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",23,null],[11,"next_back","","",23,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",23,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",23,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",23,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"borrow","","",23,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",23,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow","alloc::rc","",294,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"borrow","alloc::arc","",337,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"borrow","collections::borrow","",330,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",330,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",330,null],[11,"into_owned","","Extracts the owned data.",330,null],[11,"deref","","",330,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",330,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",330,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",330,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",330,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",330,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",330,null],[11,"into_cow","","",330,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",330,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"clone","core::raw","",338,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",339,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"clone","core::fmt::rt::v1","",340,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",341,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",342,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",342,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",342,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",343,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",344,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"cmp","core::marker","",345,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",345,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"option"}}],[11,"lt","","",345,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"le","","",345,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"gt","","",345,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ge","","",345,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"eq","","",345,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ne","","",345,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"clone","","",345,{"inputs":[{"name":"nocopy"}],"output":{"name":"nocopy"}}],[11,"hash","","",346,null],[11,"eq","","",346,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",346,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",346,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",346,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",347,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",347,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",347,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",347,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",347,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",347,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",347,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",348,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",348,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",348,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",348,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",349,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",349,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",349,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",349,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",349,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",349,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",349,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",349,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",349,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",350,null],[11,"clone","","",350,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",351,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",351,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",351,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for a optional component of the borrowed data, e.g. an\nenum variant.",351,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",352,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for a optional component of the borrowed data, e.g.\nan enum variant.",352,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",353,null],[11,"deref","","",352,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",352,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",354,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",354,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",354,null],[11,"hash","core::option","",355,null],[11,"fmt","","",355,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",355,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",355,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",355,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",355,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",355,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",355,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",355,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",355,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",355,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",355,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",355,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",355,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",355,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",355,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",355,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",355,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",355,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",355,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",355,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",355,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",355,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",355,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",355,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",355,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",355,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",355,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",355,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",355,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",355,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",355,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",355,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",355,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",355,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",355,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",355,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",356,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",356,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",356,null],[11,"next_back","","",356,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",357,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",357,null],[11,"next_back","","",357,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",357,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",358,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",358,null],[11,"next_back","","",358,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",359,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",359,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",359,null],[11,"next_back","","",359,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",355,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"cmp","collections::string","",31,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",31,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",31,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",31,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",31,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",31,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",28,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",31,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",31,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_str","","Creates a new string buffer from the given string.",31,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from_utf8","","Returns the vector as a string buffer, if possible, taking care not to\ncopy it.",31,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a vector of bytes to a new UTF-8 string.\nAny invalid UTF-8 sequences are replaced with U+FFFD REPLACEMENT CHARACTER.",31,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",31,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",31,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",31,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a new `String` without checking if\nit contains valid UTF-8. This is unsafe because it assumes that\nthe UTF-8-ness of the vector has already been validated.",31,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",31,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",31,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",31,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",31,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",31,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",31,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",31,null],[11,"push","","Adds the given character to the end of the string.",31,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",31,null],[11,"truncate","","Shortens a string to the specified length.",31,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",31,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",31,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",31,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",31,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",31,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",31,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",31,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",31,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_slice","","Converts the string into `Box<str>`.",31,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",28,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",28,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",28,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",31,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",31,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",31,null],[11,"extend","","",31,null],[11,"extend","","",31,null],[11,"eq","","",31,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",31,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",31,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",330,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",330,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",330,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",330,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",31,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",330,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",330,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",31,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",31,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",31,null],[11,"add","","",31,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",31,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",31,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",31,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",31,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",31,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",31,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",31,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",31,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",31,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",31,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"eq","","",360,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",360,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",360,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",360,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"from_str","","",31,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"as_ref","","",31,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",31,null],[11,"from","","",31,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",330,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",330,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",31,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",31,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",31,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",31,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",361,null],[11,"next","","",361,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",361,null],[11,"next_back","","",361,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"clone","core::iter","",362,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",362,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",362,null],[11,"next_back","","",362,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"indexable","","",362,{"inputs":[{"name":"rev"}],"output":{"name":"usize"}}],[11,"idx","","",362,{"inputs":[{"name":"rev"},{"name":"usize"}],"output":{"name":"option"}}],[11,"fmt","","",363,{"inputs":[{"name":"minmaxresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",363,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"ne","","",363,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"clone","","",363,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"minmaxresult"}}],[11,"into_option","","`into_option` creates an `Option` of type `(T,T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise variant `Some(x,y)` is returned where `x <= y`.\nIf `MinMaxResult` has variant `OneElement(x)`, performing this operation\nwill make one clone of `x`.",363,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"option"}}],[11,"clone","","",364,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",364,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",364,null],[11,"next_back","","",364,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"indexable","","",364,{"inputs":[{"name":"cloned"}],"output":{"name":"usize"}}],[11,"idx","","",364,{"inputs":[{"name":"cloned"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",365,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",365,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",365,null],[11,"indexable","","",365,{"inputs":[{"name":"cycle"}],"output":{"name":"usize"}}],[11,"idx","","",365,{"inputs":[{"name":"cycle"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",366,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",366,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",366,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",366,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",366,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",366,null],[11,"next_back","","",366,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"indexable","","",366,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"idx","","",366,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",367,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",367,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",367,null],[11,"next_back","","",367,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"indexable","","",367,{"inputs":[{"name":"zip"}],"output":{"name":"usize"}}],[11,"idx","","",367,{"inputs":[{"name":"zip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",368,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",368,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",368,null],[11,"next_back","","",368,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"indexable","","",368,{"inputs":[{"name":"map"}],"output":{"name":"usize"}}],[11,"idx","","",368,{"inputs":[{"name":"map"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",369,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",369,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",369,null],[11,"next_back","","",369,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",370,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",370,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",370,null],[11,"next_back","","",370,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",371,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",371,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",371,null],[11,"nth","","",371,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",371,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",371,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"indexable","","",371,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"idx","","",371,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",372,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",372,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",372,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",372,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",372,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",372,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",372,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",372,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",373,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",373,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",373,null],[11,"clone","","",374,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",374,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",374,null],[11,"clone","","",375,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",375,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",375,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",375,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",375,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",375,null],[11,"indexable","","",375,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"idx","","",375,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",376,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",376,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",376,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",376,null],[11,"indexable","","",376,{"inputs":[{"name":"take"}],"output":{"name":"usize"}}],[11,"idx","","",376,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",377,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",377,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",377,null],[11,"clone","","",378,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",378,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",378,null],[11,"next_back","","",378,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",379,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",379,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",379,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",379,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",379,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",379,null],[11,"next_back","","",379,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"indexable","","",379,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"idx","","",379,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"reset_fuse","","Resets the `Fuse` such that the next call to `.next()` or\n`.next_back()` will call the underlying iterator again even if it\npreviously returned `None`.",379,null],[11,"clone","","",380,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",380,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",380,null],[11,"next_back","","",380,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"indexable","","",380,{"inputs":[{"name":"inspect"}],"output":{"name":"usize"}}],[11,"idx","","",380,{"inputs":[{"name":"inspect"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",381,{"inputs":[{"name":"unfold"}],"output":{"name":"unfold"}}],[11,"new","","Creates a new iterator with the specified closure as the \"iterator\nfunction\" and an initial state to eventually pass to the closure",381,{"inputs":[{"name":"unfold"},{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[11,"next","","",381,{"inputs":[{"name":"unfold"}],"output":{"name":"option"}}],[11,"size_hint","","",381,null],[11,"clone","","",382,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",383,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",384,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",382,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",382,null],[11,"clone","","",385,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",385,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",385,null],[11,"next_back","","",385,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",382,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",382,null],[11,"next","core::ops","",384,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",384,null],[11,"next_back","","",384,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",383,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",386,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",386,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",386,null],[11,"next_back","","",386,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"indexable","","",386,{"inputs":[{"name":"repeat"}],"output":{"name":"usize"}}],[11,"idx","","",386,{"inputs":[{"name":"repeat"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next","","",387,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",387,null],[11,"next_back","","",387,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",387,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",387,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",387,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",388,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",388,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",388,null],[11,"next_back","","",388,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",388,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::result","",389,null],[11,"fmt","","",389,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",389,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",389,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",389,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",389,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",389,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",389,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",389,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",389,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",389,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",389,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",389,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",389,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",389,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",389,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",389,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",389,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",389,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",389,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",389,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",389,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",389,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",389,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",389,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",389,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",389,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",389,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",389,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",389,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",389,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",389,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",389,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",390,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",390,null],[11,"next_back","","",390,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",390,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",391,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",391,null],[11,"next_back","","",391,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",392,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",392,null],[11,"next_back","","",392,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",389,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"clone","collections::slice","",393,{"inputs":[{"name":"elementswaps"}],"output":{"name":"elementswaps"}}],[11,"new","","Creates an `ElementSwaps` iterator for a sequence of `length` elements.",393,{"inputs":[{"name":"elementswaps"},{"name":"usize"}],"output":{"name":"elementswaps"}}],[11,"borrow","collections::vec","",32,null],[11,"borrow_mut","","",32,null],[11,"clone","collections::slice","",394,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"clone","","",395,{"inputs":[{"name":"sizedirection"}],"output":{"name":"sizedirection"}}],[11,"next","","",393,{"inputs":[{"name":"elementswaps"}],"output":{"name":"option"}}],[11,"size_hint","","",393,null],[11,"next","","",396,{"inputs":[{"name":"permutations"}],"output":{"name":"option"}}],[11,"size_hint","","",396,null],[11,"eq","core::ops","",397,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",397,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",397,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",397,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",384,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",384,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",384,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",384,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",383,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",383,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",383,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",383,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",398,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",398,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",398,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",398,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","openssl::ssl","",399,{"inputs":[{"name":"sslcontext"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",399,{"inputs":[{"name":"sslcontext"}],"output":null}],[11,"new","","Creates a new SSL context.",399,{"inputs":[{"name":"sslcontext"},{"name":"sslmethod"}],"output":{"name":"result"}}],[11,"set_verify","","Configures the certificate verification method for new connections.",399,{"inputs":[{"name":"sslcontext"},{"name":"sslverifymode"},{"name":"option"}],"output":null}],[11,"set_verify_with_data","","Configures the certificate verification method for new connections also\ncarrying supplied data.",399,{"inputs":[{"name":"sslcontext"},{"name":"sslverifymode"},{"name":"verifycallbackdata"},{"name":"t"}],"output":null}],[11,"set_verify_depth","","Sets verification depth",399,{"inputs":[{"name":"sslcontext"},{"name":"u32"}],"output":null}],[11,"set_read_ahead","","",399,{"inputs":[{"name":"sslcontext"},{"name":"u32"}],"output":null}],[11,"set_CA_file","","Specifies the file that contains trusted CA certificates.",399,{"inputs":[{"name":"sslcontext"},{"name":"p"}],"output":{"name":"result"}}],[11,"set_certificate_file","","Specifies the file that contains certificate",399,{"inputs":[{"name":"sslcontext"},{"name":"p"},{"name":"x509filetype"}],"output":{"name":"result"}}],[11,"set_certificate","","Specifies the certificate",399,{"inputs":[{"name":"sslcontext"},{"name":"x509"}],"output":{"name":"result"}}],[11,"add_extra_chain_cert","","Adds a certificate to the certificate chain presented together with the\ncertificate specified using set_certificate()",399,{"inputs":[{"name":"sslcontext"},{"name":"x509"}],"output":{"name":"result"}}],[11,"set_private_key_file","","Specifies the file that contains private key",399,{"inputs":[{"name":"sslcontext"},{"name":"p"},{"name":"x509filetype"}],"output":{"name":"result"}}],[11,"set_private_key","","Specifies the private key",399,{"inputs":[{"name":"sslcontext"},{"name":"pkey"}],"output":{"name":"result"}}],[11,"check_private_key","","Check consistency of private key and certificate",399,{"inputs":[{"name":"sslcontext"}],"output":{"name":"result"}}],[11,"set_cipher_list","","",399,{"inputs":[{"name":"sslcontext"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_options","","",399,{"inputs":[{"name":"sslcontext"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"get_options","","",399,{"inputs":[{"name":"sslcontext"}],"output":{"name":"sslcontextoptions"}}],[11,"clear_options","","",399,{"inputs":[{"name":"sslcontext"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"fmt","","",400,{"inputs":[{"name":"ssl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",400,{"inputs":[{"name":"ssl"}],"output":null}],[11,"new","","",400,{"inputs":[{"name":"ssl"},{"name":"sslcontext"}],"output":{"name":"result"}}],[11,"get_state_string","","",400,{"inputs":[{"name":"ssl"}],"output":{"name":"str"}}],[11,"get_state_string_long","","",400,{"inputs":[{"name":"ssl"}],"output":{"name":"str"}}],[11,"set_hostname","","Set the host name to be used with SNI (Server Name Indication).",400,{"inputs":[{"name":"ssl"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_peer_certificate","","",400,{"inputs":[{"name":"ssl"}],"output":{"name":"option"}}],[11,"pending","","pending() takes into account only bytes from the TLS/SSL record that is currently being processed (if any).",400,{"inputs":[{"name":"ssl"}],"output":{"name":"usize"}}],[11,"get_ssl_method","","",400,{"inputs":[{"name":"ssl"}],"output":{"name":"option"}}],[11,"clone","","",401,{"inputs":[{"name":"sslstream"}],"output":{"name":"sslstream"}}],[11,"try_clone","","Create a new independently owned handle to the underlying socket.",401,{"inputs":[{"name":"sslstream"}],"output":{"name":"result"}}],[11,"fmt","","",401,{"inputs":[{"name":"sslstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"connect","","Creates an SSL/TLS client operating over the provided stream.",401,{"inputs":[{"name":"sslstream"},{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"accept","","Creates an SSL/TLS server operating over the provided stream.",401,{"inputs":[{"name":"sslstream"},{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"connect_generic","","Creates an SSL/TLS client operating over the provided stream.",401,{"inputs":[{"name":"sslstream"},{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"accept_generic","","Creates an SSL/TLS server operating over the provided stream.",401,{"inputs":[{"name":"sslstream"},{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"new_server","","# Deprecated",401,{"inputs":[{"name":"sslstream"},{"name":"sslcontext"},{"name":"s"}],"output":{"name":"result"}}],[11,"new_server_from","","# Deprecated",401,{"inputs":[{"name":"sslstream"},{"name":"ssl"},{"name":"s"}],"output":{"name":"result"}}],[11,"new_from","","# Deprecated",401,{"inputs":[{"name":"sslstream"},{"name":"ssl"},{"name":"s"}],"output":{"name":"result"}}],[11,"new","","# Deprecated",401,{"inputs":[{"name":"sslstream"},{"name":"sslcontext"},{"name":"s"}],"output":{"name":"result"}}],[11,"get_ref","","Returns a reference to the underlying stream.",401,{"inputs":[{"name":"sslstream"}],"output":{"name":"s"}}],[11,"get_peer_certificate","","Return the certificate of the peer",401,{"inputs":[{"name":"sslstream"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the underlying stream.",401,{"inputs":[{"name":"sslstream"}],"output":{"name":"s"}}],[11,"get_compression","","Get the compression currently in use.  The result will be\neither None, indicating no compression is in use, or a string\nwith the compression name.",401,{"inputs":[{"name":"sslstream"}],"output":{"name":"option"}}],[11,"pending","","pending() takes into account only bytes from the TLS/SSL record that is currently being processed (if any).",401,{"inputs":[{"name":"sslstream"}],"output":{"name":"usize"}}],[11,"get_state_string","","",401,{"inputs":[{"name":"sslstream"}],"output":{"name":"str"}}],[11,"get_state_string_long","","",401,{"inputs":[{"name":"sslstream"}],"output":{"name":"str"}}],[11,"read","","",401,null],[11,"write","","",401,null],[11,"flush","","",401,{"inputs":[{"name":"sslstream"}],"output":{"name":"result"}}],[11,"into_ssl","","",400,{"inputs":[{"name":"ssl"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"maybesslstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",16,null],[11,"write","","",16,null],[11,"flush","","",16,{"inputs":[{"name":"maybesslstream"}],"output":{"name":"result"}}],[11,"get_ref","","Returns a reference to the underlying stream.",16,{"inputs":[{"name":"maybesslstream"}],"output":{"name":"s"}}],[11,"get_mut","","Returns a mutable reference to the underlying stream.",16,{"inputs":[{"name":"maybesslstream"}],"output":{"name":"s"}}],[0,"x509","openssl","",null,null],[3,"SslString","openssl::x509","",null,null],[3,"X509StoreContext","","",null,null],[3,"X509Generator","","Generator of private key/certificate pairs",null,null],[3,"X509","","A public key certificate",null,null],[3,"X509Name","","",null,null],[3,"X509NameEntry","","",null,null],[3,"X509Req","","A certificate signing request",null,null],[4,"X509FileType","","",null,null],[13,"PEM","","",402,null],[13,"ASN1","","",402,null],[13,"Default","","",402,null],[4,"X509ValidationError","","",null,null],[13,"X509UnableToGetIssuerCert","","",403,null],[13,"X509UnableToGetCrl","","",403,null],[13,"X509UnableToDecryptCertSignature","","",403,null],[13,"X509UnableToDecryptCrlSignature","","",403,null],[13,"X509UnableToDecodeIssuerPublicKey","","",403,null],[13,"X509CertSignatureFailure","","",403,null],[13,"X509CrlSignatureFailure","","",403,null],[13,"X509CertNotYetValid","","",403,null],[13,"X509CertHasExpired","","",403,null],[13,"X509CrlNotYetValid","","",403,null],[13,"X509CrlHasExpired","","",403,null],[13,"X509ErrorInCertNotBeforeField","","",403,null],[13,"X509ErrorInCertNotAfterField","","",403,null],[13,"X509ErrorInCrlLastUpdateField","","",403,null],[13,"X509ErrorInCrlNextUpdateField","","",403,null],[13,"X509OutOfMem","","",403,null],[13,"X509DepthZeroSelfSignedCert","","",403,null],[13,"X509SelfSignedCertInChain","","",403,null],[13,"X509UnableToGetIssuerCertLocally","","",403,null],[13,"X509UnableToVerifyLeafSignature","","",403,null],[13,"X509CertChainTooLong","","",403,null],[13,"X509CertRevoked","","",403,null],[13,"X509InvalidCA","","",403,null],[13,"X509PathLengthExceeded","","",403,null],[13,"X509InvalidPurpose","","",403,null],[13,"X509CertUntrusted","","",403,null],[13,"X509CertRejected","","",403,null],[13,"X509SubjectIssuerMismatch","","",403,null],[13,"X509AkidSkidMismatch","","",403,null],[13,"X509AkidIssuerSerialMismatch","","",403,null],[13,"X509KeyusageNoCertsign","","",403,null],[13,"X509UnableToGetCrlIssuer","","",403,null],[13,"X509UnhandledCriticalExtension","","",403,null],[13,"X509KeyusageNoCrlSign","","",403,null],[13,"X509UnhandledCriticalCrlExtension","","",403,null],[13,"X509InvalidNonCA","","",403,null],[13,"X509ProxyPathLengthExceeded","","",403,null],[13,"X509KeyusageNoDigitalSignature","","",403,null],[13,"X509ProxyCertificatesNotAllowed","","",403,null],[13,"X509InvalidExtension","","",403,null],[13,"X509InavlidPolicyExtension","","",403,null],[13,"X509NoExplicitPolicy","","",403,null],[13,"X509DifferentCrlScope","","",403,null],[13,"X509UnsupportedExtensionFeature","","",403,null],[13,"X509UnnestedResource","","",403,null],[13,"X509PermittedVolation","","",403,null],[13,"X509ExcludedViolation","","",403,null],[13,"X509SubtreeMinmax","","",403,null],[13,"X509UnsupportedConstraintType","","",403,null],[13,"X509UnsupportedConstraintSyntax","","",403,null],[13,"X509UnsupportedNameSyntax","","",403,null],[13,"X509CrlPathValidationError","","",403,null],[13,"X509ApplicationVerification","","",403,null],[13,"X509UnknownError","","",403,null],[0,"extension","","",null,null],[4,"ExtensionType","openssl::x509::extension","Type-only version of the `Extension` enum.",null,null],[13,"KeyUsage","","",404,null],[13,"ExtKeyUsage","","",404,null],[13,"SubjectAltName","","",404,null],[13,"IssuerAltName","","",404,null],[13,"OtherNid","","",404,null],[13,"OtherStr","","",404,null],[4,"Extension","","A X.509 v3 certificate extension.",null,null],[13,"KeyUsage","","The purposes of the key contained in the certificate",405,null],[13,"ExtKeyUsage","","The extended purposes of the key contained in the certificate",405,null],[13,"SubjectAltName","","Subject Alternative Names",405,null],[13,"IssuerAltName","","Issuer Alternative Names",405,null],[13,"OtherNid","","Arbitrary extensions by NID. See `man x509v3_config` for value syntax.",405,null],[13,"OtherStr","","Arbitrary extensions by OID string. See `man ASN1_generate_nconf` for value syntax.",405,null],[4,"KeyUsageOption","","",null,null],[13,"DigitalSignature","","",406,null],[13,"NonRepudiation","","",406,null],[13,"KeyEncipherment","","",406,null],[13,"DataEncipherment","","",406,null],[13,"KeyAgreement","","",406,null],[13,"KeyCertSign","","",406,null],[13,"CRLSign","","",406,null],[13,"EncipherOnly","","",406,null],[13,"DecipherOnly","","",406,null],[4,"ExtKeyUsageOption","","",null,null],[13,"ServerAuth","","",407,null],[13,"ClientAuth","","",407,null],[13,"CodeSigning","","",407,null],[13,"EmailProtection","","",407,null],[13,"TimeStamping","","",407,null],[13,"MsCodeInd","","",407,null],[13,"MsCodeCom","","",407,null],[13,"MsCtlSign","","",407,null],[13,"MsSgc","","",407,null],[13,"MsEfs","","",407,null],[13,"NsSgc","","",407,null],[13,"Other","","An arbitrary key usage by OID.",407,null],[4,"AltNameOption","","",null,null],[13,"Other","","The value is specified as OID;content. See `man ASN1_generate_nconf` for more information on the content syntax.",408,null],[13,"Email","","",408,null],[13,"DNS","","",408,null],[13,"Directory","","",408,null],[13,"URI","","",408,null],[13,"IPAddress","","",408,null],[13,"RegisteredID","","",408,null],[11,"eq","","",404,{"inputs":[{"name":"extensiontype"},{"name":"extensiontype"}],"output":{"name":"bool"}}],[11,"ne","","",404,{"inputs":[{"name":"extensiontype"},{"name":"extensiontype"}],"output":{"name":"bool"}}],[11,"hash","","",404,null],[11,"clone","","",404,{"inputs":[{"name":"extensiontype"}],"output":{"name":"extensiontype"}}],[11,"clone","","",405,{"inputs":[{"name":"extension"}],"output":{"name":"extension"}}],[11,"get_type","","",405,{"inputs":[{"name":"extension"}],"output":{"name":"extensiontype"}}],[11,"get_nid","","",404,{"inputs":[{"name":"extensiontype"}],"output":{"name":"option"}}],[11,"get_name","","",404,{"inputs":[{"name":"extensiontype"}],"output":{"name":"option"}}],[11,"to_string","","",405,{"inputs":[{"name":"extension"}],"output":{"name":"string"}}],[11,"clone","","",406,{"inputs":[{"name":"keyusageoption"}],"output":{"name":"keyusageoption"}}],[11,"fmt","","",406,{"inputs":[{"name":"keyusageoption"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",407,{"inputs":[{"name":"extkeyusageoption"}],"output":{"name":"extkeyusageoption"}}],[11,"fmt","","",407,{"inputs":[{"name":"extkeyusageoption"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",408,{"inputs":[{"name":"altnameoption"}],"output":{"name":"altnameoption"}}],[11,"fmt","","",408,{"inputs":[{"name":"altnameoption"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","openssl::x509","",409,{"inputs":[{"name":"sslstring"}],"output":null}],[11,"deref","","",409,{"inputs":[{"name":"sslstring"}],"output":{"name":"str"}}],[11,"fmt","","",409,{"inputs":[{"name":"sslstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",409,{"inputs":[{"name":"sslstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",402,{"inputs":[{"name":"x509filetype"}],"output":{"name":"x509filetype"}}],[11,"new","","",410,null],[11,"get_error","","",410,{"inputs":[{"name":"x509storecontext"}],"output":{"name":"option"}}],[11,"get_current_cert","","",410,{"inputs":[{"name":"x509storecontext"}],"output":{"name":"option"}}],[11,"new","","Creates a new generator with the following defaults:",411,{"inputs":[{"name":"x509generator"}],"output":{"name":"x509generator"}}],[11,"set_bitlength","","Sets desired bit length",411,{"inputs":[{"name":"x509generator"},{"name":"u32"}],"output":{"name":"x509generator"}}],[11,"set_valid_period","","Sets certificate validity period in days since today",411,{"inputs":[{"name":"x509generator"},{"name":"u32"}],"output":{"name":"x509generator"}}],[11,"set_CN","","(deprecated) Sets Common Name of certificate",411,{"inputs":[{"name":"x509generator"},{"name":"str"}],"output":{"name":"x509generator"}}],[11,"add_name","","Add attribute to the name of the certificate",411,{"inputs":[{"name":"x509generator"},{"name":"string"},{"name":"string"}],"output":{"name":"x509generator"}}],[11,"add_names","","Add multiple attributes to the name of the certificate",411,{"inputs":[{"name":"x509generator"},{"name":"i"}],"output":{"name":"x509generator"}}],[11,"set_usage","","(deprecated) Sets what for certificate could be used",411,null],[11,"set_ext_usage","","(deprecated) Sets allowed extended usage of certificate",411,null],[11,"add_extension","","Add an extension to a certificate",411,{"inputs":[{"name":"x509generator"},{"name":"extension"}],"output":{"name":"x509generator"}}],[11,"add_extensions","","Add multiple extensions to a certificate",411,{"inputs":[{"name":"x509generator"},{"name":"i"}],"output":{"name":"x509generator"}}],[11,"set_sign_hash","","",411,{"inputs":[{"name":"x509generator"},{"name":"type"}],"output":{"name":"x509generator"}}],[11,"generate","","Generates a private key and a self-signed certificate and returns them",411,{"inputs":[{"name":"x509generator"}],"output":{"name":"result"}}],[11,"sign","","Sets the certificate public-key, then self-sign and return it\nNote: That the bit-length of the private key is used (set_bitlength is ignored)",411,{"inputs":[{"name":"x509generator"},{"name":"pkey"}],"output":{"name":"result"}}],[11,"request","","Obtain a certificate signing request (CSR)",411,{"inputs":[{"name":"x509generator"},{"name":"pkey"}],"output":{"name":"result"}}],[11,"new","","Creates new from handle with desired ownership.",412,null],[11,"new_in_ctx","","Creates a new certificate from context. Doesn't take ownership\nof handle.",412,null],[11,"from_pem","","Reads certificate from PEM, takes ownership of handle",412,{"inputs":[{"name":"x509"},{"name":"r"}],"output":{"name":"result"}}],[11,"get_handle","","",412,null],[11,"subject_name","","",412,{"inputs":[{"name":"x509"}],"output":{"name":"x509name"}}],[11,"public_key","","",412,{"inputs":[{"name":"x509"}],"output":{"name":"pkey"}}],[11,"fingerprint","","Returns certificate fingerprint calculated using provided hash",412,{"inputs":[{"name":"x509"},{"name":"type"}],"output":{"name":"option"}}],[11,"write_pem","","Writes certificate as PEM",412,{"inputs":[{"name":"x509"},{"name":"w"}],"output":{"name":"result"}}],[11,"drop","","",412,{"inputs":[{"name":"x509"}],"output":null}],[11,"text_by_nid","","",413,{"inputs":[{"name":"x509name"},{"name":"nid"}],"output":{"name":"option"}}],[11,"new","","Creates new from handle",414,null],[11,"from_pem","","Reads CSR from PEM",414,{"inputs":[{"name":"x509req"},{"name":"r"}],"output":{"name":"result"}}],[11,"write_pem","","Writes CSR as PEM",414,{"inputs":[{"name":"x509req"},{"name":"w"}],"output":{"name":"result"}}],[11,"drop","","",414,{"inputs":[{"name":"x509req"}],"output":null}],[11,"clone","","",403,{"inputs":[{"name":"x509validationerror"}],"output":{"name":"x509validationerror"}}],[0,"nid","openssl","",null,null],[4,"Nid","openssl::nid","",null,null],[13,"Undefined","","",415,null],[13,"Rsadsi","","",415,null],[13,"Pkcs","","",415,null],[13,"MD2","","",415,null],[13,"MD4","","",415,null],[13,"MD5","","",415,null],[13,"RC4","","",415,null],[13,"RsaEncryption","","",415,null],[13,"RSA_MD2","","",415,null],[13,"RSA_MD5","","",415,null],[13,"PBE_MD2_DES","","",415,null],[13,"X500","","",415,null],[13,"x509","","",415,null],[13,"CN","","",415,null],[13,"C","","",415,null],[13,"L","","",415,null],[13,"ST","","",415,null],[13,"O","","",415,null],[13,"OU","","",415,null],[13,"RSA","","",415,null],[13,"Pkcs7","","",415,null],[13,"Pkcs7_data","","",415,null],[13,"Pkcs7_signedData","","",415,null],[13,"Pkcs7_envelopedData","","",415,null],[13,"Pkcs7_signedAndEnvelopedData","","",415,null],[13,"Pkcs7_digestData","","",415,null],[13,"Pkcs7_encryptedData","","",415,null],[13,"Pkcs3","","",415,null],[13,"DhKeyAgreement","","",415,null],[13,"DES_ECB","","",415,null],[13,"DES_CFB","","",415,null],[13,"DES_CBC","","",415,null],[13,"DES_EDE","","",415,null],[13,"DES_EDE3","","",415,null],[13,"IDEA_CBC","","",415,null],[13,"IDEA_CFB","","",415,null],[13,"IDEA_ECB","","",415,null],[13,"RC2_CBC","","",415,null],[13,"RC2_ECB","","",415,null],[13,"RC2_CFB","","",415,null],[13,"RC2_OFB","","",415,null],[13,"SHA","","",415,null],[13,"RSA_SHA","","",415,null],[13,"DES_EDE_CBC","","",415,null],[13,"DES_EDE3_CBC","","",415,null],[13,"DES_OFB","","",415,null],[13,"IDEA_OFB","","",415,null],[13,"Pkcs9","","",415,null],[13,"Email","","",415,null],[13,"UnstructuredName","","",415,null],[13,"ContentType","","",415,null],[13,"MessageDigest","","",415,null],[13,"SigningTime","","",415,null],[13,"CounterSignature","","",415,null],[13,"ChallengePassword","","",415,null],[13,"UnstructuredAddress","","",415,null],[13,"ExtendedCertificateAttributes","","",415,null],[13,"Netscape","","",415,null],[13,"NetscapeCertExtention","","",415,null],[13,"NetscapeDatatype","","",415,null],[13,"DES_EDE_CFB64","","",415,null],[13,"DES_EDE3_CFB64","","",415,null],[13,"DES_EDE_OFB64","","",415,null],[13,"DES_EDE3_OFB64","","",415,null],[13,"SHA1","","",415,null],[13,"RSA_SHA1","","",415,null],[13,"DSA_SHA","","",415,null],[13,"DSA_OLD","","",415,null],[13,"PBE_SHA1_RC2_64","","",415,null],[13,"PBKDF2","","",415,null],[13,"DSA_SHA1_OLD","","",415,null],[13,"NetscapeCertType","","",415,null],[13,"NetscapeBaseUrl","","",415,null],[13,"NetscapeRevocationUrl","","",415,null],[13,"NetscapeCARevocationUrl","","",415,null],[13,"NetscapeRenewalUrl","","",415,null],[13,"NetscapeCAPolicyUrl","","",415,null],[13,"NetscapeSSLServerName","","",415,null],[13,"NetscapeComment","","",415,null],[13,"NetscapeCertSequence","","",415,null],[13,"DESX_CBC","","",415,null],[13,"ID_CE","","",415,null],[13,"SubjectKeyIdentifier","","",415,null],[13,"KeyUsage","","",415,null],[13,"PrivateKeyUsagePeriod","","",415,null],[13,"SubjectAltName","","",415,null],[13,"IssuerAltName","","",415,null],[13,"BasicConstraints","","",415,null],[13,"CrlNumber","","",415,null],[13,"CertificatePolicies","","",415,null],[13,"AuthorityKeyIdentifier","","",415,null],[13,"BF_CBC","","",415,null],[13,"BF_ECB","","",415,null],[13,"BF_CFB","","",415,null],[13,"BF_OFB","","",415,null],[13,"MDC2","","",415,null],[13,"RSA_MDC2","","",415,null],[13,"RC4_40","","",415,null],[13,"RC2_40_CBC","","",415,null],[13,"G","","",415,null],[13,"S","","",415,null],[13,"I","","",415,null],[13,"UID","","",415,null],[13,"CrlDistributionPoints","","",415,null],[13,"RSA_NP_MD5","","",415,null],[13,"SN","","",415,null],[13,"T","","",415,null],[13,"D","","",415,null],[13,"CAST5_CBC","","",415,null],[13,"CAST5_ECB","","",415,null],[13,"CAST5_CFB","","",415,null],[13,"CAST5_OFB","","",415,null],[13,"PbeWithMD5AndCast5CBC","","",415,null],[13,"DSA_SHA1","","",415,null],[13,"MD5_SHA1","","",415,null],[13,"RSA_SHA1_2","","",415,null],[13,"DSA","","",415,null],[13,"RIPEMD160","","",415,null],[13,"RSA_RIPEMD160","","",415,null],[13,"RC5_CBC","","",415,null],[13,"RC5_ECB","","",415,null],[13,"RC5_CFB","","",415,null],[13,"RC5_OFB","","",415,null],[13,"RLE","","",415,null],[13,"ZLIB","","",415,null],[13,"ExtendedKeyUsage","","",415,null],[13,"PKIX","","",415,null],[13,"ID_KP","","",415,null],[13,"ServerAuth","","",415,null],[13,"ClientAuth","","",415,null],[13,"CodeSigning","","",415,null],[13,"EmailProtection","","",415,null],[13,"TimeStamping","","",415,null],[13,"MsCodeInd","","",415,null],[13,"MsCodeCom","","",415,null],[13,"MsCtlSigh","","",415,null],[13,"MsSGC","","",415,null],[13,"MsEFS","","",415,null],[13,"NsSGC","","",415,null],[13,"DeltaCRL","","",415,null],[13,"CRLReason","","",415,null],[13,"InvalidityDate","","",415,null],[13,"SXNetID","","",415,null],[13,"PBE_SHA1_RC4_128","","",415,null],[13,"PBE_SHA1_RC4_40","","",415,null],[13,"PBE_SHA1_3DES","","",415,null],[13,"PBE_SHA1_2DES","","",415,null],[13,"PBE_SHA1_RC2_128","","",415,null],[13,"PBE_SHA1_RC2_40","","",415,null],[13,"KeyBag","","",415,null],[13,"Pkcs8ShroudedKeyBag","","",415,null],[13,"CertBag","","",415,null],[13,"CrlBag","","",415,null],[13,"SecretBag","","",415,null],[13,"SafeContentsBag","","",415,null],[13,"FriendlyName","","",415,null],[13,"LocalKeyID","","",415,null],[13,"X509Certificate","","",415,null],[13,"SdsiCertificate","","",415,null],[13,"X509Crl","","",415,null],[13,"PBES2","","",415,null],[13,"PBMAC1","","",415,null],[13,"HmacWithSha1","","",415,null],[13,"ID_QT_CPS","","",415,null],[13,"ID_QT_UNOTICE","","",415,null],[13,"RC2_64_CBC","","",415,null],[13,"SMIMECaps","","",415,null],[11,"eq","","",415,{"inputs":[{"name":"nid"},{"name":"nid"}],"output":{"name":"bool"}}],[11,"ne","","",415,{"inputs":[{"name":"nid"},{"name":"nid"}],"output":{"name":"bool"}}],[11,"hash","","",415,null],[11,"clone","","",415,{"inputs":[{"name":"nid"}],"output":{"name":"nid"}}]],"paths":[[3,"Asn1Time"],[4,"RNGProperty"],[3,"BigNum"],[3,"MemBio"],[4,"Type"],[3,"Hasher"],[3,"HMAC"],[3,"KeyIvPair"],[4,"Parts"],[4,"Role"],[4,"EncryptionPadding"],[3,"PKey"],[4,"Mode"],[4,"Type"],[3,"Crypter"],[4,"SslMethod"],[4,"MaybeSslStream"],[4,"SslError"],[4,"OpensslError"],[8,"IntoSsl"],[3,"SslContextOptions"],[3,"SslVerifyMode"],[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"Error"],[3,"String"],[3,"Vec"],[3,"EscapeDefault"],[3,"Wrapping"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"JoinGuard"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"VecMap"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"IntoIter"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"Metadata"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"Path"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"InternalBufWriter"],[3,"BufStream"],[3,"Cursor"],[3,"Custom"],[4,"ErrorKind"],[4,"Repr"],[3,"Lazy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[4,"Maybe"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Future"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Condvar"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Condvar"],[3,"FileDesc"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"FileAttr"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[4,"ExitStatus"],[3,"Process"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"SteadyTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[4,"_Unwind_Action"],[4,"_Unwind_Reason_Code"],[3,"EHContext"],[3,"DwarfReader"],[3,"OsRng"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"Unique"],[3,"Rc"],[3,"Weak"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"CaseMappingIter"],[8,"Any"],[3,"TypeId"],[4,"DecompositionType"],[3,"Decompositions"],[4,"RecompositionState"],[3,"Recompositions"],[3,"Utf16Units"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"SipHasher"],[4,"Ordering"],[4,"Cow"],[3,"IntoIter"],[3,"Drain"],[3,"PartialVecNonZeroSized"],[3,"PartialVecZeroSized"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Arc"],[3,"Slice"],[3,"TraitObject"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"NoCopy"],[3,"PhantomData"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"ParseError"],[3,"Drain"],[3,"Rev"],[4,"MinMaxResult"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Unfold"],[3,"StepBy"],[3,"RangeFrom"],[3,"Range"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"ElementSwaps"],[4,"Direction"],[3,"SizeDirection"],[3,"Permutations"],[3,"RangeFull"],[3,"RangeTo"],[3,"SslContext"],[3,"Ssl"],[3,"SslStream"],[4,"X509FileType"],[4,"X509ValidationError"],[4,"ExtensionType"],[4,"Extension"],[4,"KeyUsageOption"],[4,"ExtKeyUsageOption"],[4,"AltNameOption"],[3,"SslString"],[3,"X509StoreContext"],[3,"X509Generator"],[3,"X509"],[3,"X509Name"],[3,"X509Req"],[4,"Nid"]]};
searchIndex['openssl_sys'] = {"items":[[0,"","openssl_sys","",null,null],[3,"EVP_MD_CTX","","",null,null],[3,"HMAC_CTX","","",null,null],[3,"X509V3_CTX","","",null,null],[3,"BIGNUM","","",null,null],[12,"d","","",0,null],[12,"top","","",0,null],[12,"dmax","","",0,null],[12,"neg","","",0,null],[12,"flags","","",0,null],[5,"init","","",null,{"inputs":[],"output":null}],[5,"SSL_CTX_set_options","","",null,null],[5,"SSL_CTX_get_options","","",null,null],[5,"SSL_CTX_clear_options","","",null,null],[5,"ASN1_INTEGER_set","","",null,null],[5,"ASN1_STRING_type_new","","",null,null],[5,"ASN1_TIME_free","","",null,null],[5,"BIO_ctrl","","",null,null],[5,"BIO_free_all","","",null,null],[5,"BIO_new","","",null,null],[5,"BIO_new_socket","","",null,null],[5,"BIO_read","","",null,null],[5,"BIO_write","","",null,null],[5,"BIO_s_mem","","",null,null],[5,"BN_new","","",null,null],[5,"BN_dup","","",null,null],[5,"BN_clear_free","","",null,null],[5,"BN_CTX_new","","",null,null],[5,"BN_CTX_free","","",null,null],[5,"BN_num_bits","","",null,null],[5,"BN_set_negative","","",null,null],[5,"BN_set_word","","",null,null],[5,"BN_add","","",null,null],[5,"BN_div","","",null,null],[5,"BN_exp","","",null,null],[5,"BN_gcd","","",null,null],[5,"BN_mod_add","","",null,null],[5,"BN_mod_exp","","",null,null],[5,"BN_mod_inverse","","",null,null],[5,"BN_mod_mul","","",null,null],[5,"BN_mod_sqr","","",null,null],[5,"BN_mod_sub","","",null,null],[5,"BN_mul","","",null,null],[5,"BN_nnmod","","",null,null],[5,"BN_add_word","","",null,null],[5,"BN_sub_word","","",null,null],[5,"BN_mul_word","","",null,null],[5,"BN_div_word","","",null,null],[5,"BN_mod_word","","",null,null],[5,"BN_sqr","","",null,null],[5,"BN_sub","","",null,null],[5,"BN_clear_bit","","",null,null],[5,"BN_is_bit_set","","",null,null],[5,"BN_lshift","","",null,null],[5,"BN_lshift1","","",null,null],[5,"BN_mask_bits","","",null,null],[5,"BN_rshift","","",null,null],[5,"BN_set_bit","","",null,null],[5,"BN_rshift1","","",null,null],[5,"BN_cmp","","",null,null],[5,"BN_ucmp","","",null,null],[5,"BN_generate_prime_ex","","",null,null],[5,"BN_is_prime_ex","","",null,null],[5,"BN_is_prime_fasttest_ex","","",null,null],[5,"BN_rand","","",null,null],[5,"BN_pseudo_rand","","",null,null],[5,"BN_rand_range","","",null,null],[5,"BN_pseudo_rand_range","","",null,null],[5,"BN_bin2bn","","",null,null],[5,"BN_bn2bin","","",null,null],[5,"BN_dec2bn","","",null,null],[5,"BN_bn2dec","","",null,null],[5,"BN_hex2bn","","",null,null],[5,"BN_bn2hex","","",null,null],[5,"CRYPTO_num_locks","","",null,null],[5,"CRYPTO_set_locking_callback","","",null,null],[5,"CRYPTO_free","","",null,null],[5,"CRYPTO_memcmp","","",null,null],[5,"ERR_get_error","","",null,null],[5,"ERR_lib_error_string","","",null,null],[5,"ERR_func_error_string","","",null,null],[5,"ERR_reason_error_string","","",null,null],[5,"ERR_load_crypto_strings","","",null,null],[5,"EVP_md5","","",null,null],[5,"EVP_ripemd160","","",null,null],[5,"EVP_sha1","","",null,null],[5,"EVP_sha224","","",null,null],[5,"EVP_sha256","","",null,null],[5,"EVP_sha384","","",null,null],[5,"EVP_sha512","","",null,null],[5,"EVP_aes_128_cbc","","",null,null],[5,"EVP_aes_128_ecb","","",null,null],[5,"EVP_aes_256_cbc","","",null,null],[5,"EVP_aes_256_ecb","","",null,null],[5,"EVP_rc4","","",null,null],[5,"EVP_BytesToKey","","",null,null],[5,"EVP_CIPHER_CTX_new","","",null,null],[5,"EVP_CIPHER_CTX_set_padding","","",null,null],[5,"EVP_CIPHER_CTX_free","","",null,null],[5,"EVP_CipherInit","","",null,null],[5,"EVP_CipherUpdate","","",null,null],[5,"EVP_CipherFinal","","",null,null],[5,"EVP_DigestInit","","",null,null],[5,"EVP_DigestInit_ex","","",null,null],[5,"EVP_DigestUpdate","","",null,null],[5,"EVP_DigestFinal","","",null,null],[5,"EVP_DigestFinal_ex","","",null,null],[5,"EVP_MD_CTX_create","","",null,null],[5,"EVP_MD_CTX_copy_ex","","",null,null],[5,"EVP_MD_CTX_destroy","","",null,null],[5,"EVP_PKEY_new","","",null,null],[5,"EVP_PKEY_free","","",null,null],[5,"EVP_PKEY_assign","","",null,null],[5,"EVP_PKEY_get1_RSA","","",null,null],[5,"EVP_PKEY_set1_RSA","","",null,null],[5,"EVP_PKEY_cmp","","",null,null],[5,"HMAC_CTX_init","","",null,null],[5,"HMAC_CTX_cleanup","","",null,null],[5,"HMAC_CTX_copy","","",null,null],[5,"HMAC_Init_ex","","",null,null],[5,"HMAC_Final","","",null,null],[5,"HMAC_Update","","",null,null],[5,"HMAC_Init_ex_shim","","Deprecated - use the non \"_shim\" version",null,null],[5,"HMAC_Final_shim","","Deprecated - use the non \"_shim\" version",null,null],[5,"HMAC_Update_shim","","Deprecated - use the non \"_shim\" version",null,null],[5,"PEM_read_bio_X509","","",null,null],[5,"PEM_read_bio_X509_REQ","","",null,null],[5,"PEM_read_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_PUBKEY","","",null,null],[5,"PEM_write_bio_X509","","",null,null],[5,"PEM_write_bio_X509_REQ","","",null,null],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",null,null],[5,"RAND_bytes","","",null,null],[5,"RSA_generate_key","","",null,null],[5,"RSA_private_decrypt","","",null,null],[5,"RSA_public_encrypt","","",null,null],[5,"RSA_sign","","",null,null],[5,"RSA_size","","",null,null],[5,"RSA_verify","","",null,null],[5,"SSL_library_init","","",null,null],[5,"SSL_load_error_strings","","",null,null],[5,"SSLv3_method","","",null,null],[5,"TLSv1_method","","",null,null],[5,"SSLv23_method","","",null,null],[5,"SSL_new","","",null,null],[5,"SSL_pending","","",null,null],[5,"SSL_free","","",null,null],[5,"SSL_set_bio","","",null,null],[5,"SSL_get_rbio","","",null,null],[5,"SSL_get_wbio","","",null,null],[5,"SSL_accept","","",null,null],[5,"SSL_connect","","",null,null],[5,"SSL_ctrl","","",null,null],[5,"SSL_get_error","","",null,null],[5,"SSL_read","","",null,null],[5,"SSL_write","","",null,null],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",null,null],[5,"SSL_get_SSL_CTX","","",null,null],[5,"SSL_get_current_compression","","",null,null],[5,"SSL_get_peer_certificate","","",null,null],[5,"SSL_get_ssl_method","","",null,null],[5,"SSL_state_string","","",null,null],[5,"SSL_state_string_long","","",null,null],[5,"SSL_COMP_get_name","","",null,null],[5,"SSL_CTX_new","","",null,null],[5,"SSL_CTX_free","","",null,null],[5,"SSL_CTX_set_verify","","",null,null],[5,"SSL_CTX_set_verify_depth","","",null,null],[5,"SSL_CTX_load_verify_locations","","",null,null],[5,"SSL_CTX_get_ex_new_index","","",null,null],[5,"SSL_CTX_set_ex_data","","",null,null],[5,"SSL_CTX_get_ex_data","","",null,null],[5,"SSL_CTX_use_certificate_file","","",null,null],[5,"SSL_CTX_use_certificate","","",null,null],[5,"SSL_CTX_use_PrivateKey_file","","",null,null],[5,"SSL_CTX_use_PrivateKey","","",null,null],[5,"SSL_CTX_check_private_key","","",null,null],[5,"SSL_CTX_set_cipher_list","","",null,null],[5,"SSL_CTX_ctrl","","",null,null],[5,"X509_add_ext","","",null,null],[5,"X509_digest","","",null,null],[5,"X509_free","","",null,null],[5,"X509_REQ_free","","",null,null],[5,"X509_get_serialNumber","","",null,null],[5,"X509_get_subject_name","","",null,null],[5,"X509_gmtime_adj","","",null,null],[5,"X509_new","","",null,null],[5,"X509_set_issuer_name","","",null,null],[5,"X509_set_notAfter","","",null,null],[5,"X509_set_notBefore","","",null,null],[5,"X509_set_version","","",null,null],[5,"X509_set_pubkey","","",null,null],[5,"X509_sign","","",null,null],[5,"X509_get_pubkey","","",null,null],[5,"X509_to_X509_REQ","","",null,null],[5,"X509_EXTENSION_free","","",null,null],[5,"X509_NAME_add_entry_by_txt","","",null,null],[5,"X509_NAME_get_index_by_NID","","",null,null],[5,"X509_NAME_get_entry","","",null,null],[5,"X509_NAME_ENTRY_get_data","","",null,null],[5,"ASN1_STRING_to_UTF8","","",null,null],[5,"X509_STORE_CTX_get_current_cert","","",null,null],[5,"X509_STORE_CTX_get_error","","",null,null],[5,"X509_STORE_CTX_get_ex_data","","",null,null],[5,"X509V3_EXT_conf_nid","","",null,null],[5,"X509V3_EXT_conf","","",null,null],[5,"X509V3_set_ctx","","",null,null],[5,"X509_REQ_add_extensions","","",null,null],[5,"X509_REQ_sign","","",null,null],[5,"i2d_RSA_PUBKEY","","",null,null],[5,"d2i_RSA_PUBKEY","","",null,null],[5,"i2d_RSAPrivateKey","","",null,null],[5,"d2i_RSAPrivateKey","","",null,null],[5,"BIO_eof","","",null,null],[5,"BIO_set_mem_eof_return","","",null,null],[5,"SSL_CTX_set_options_shim","","",null,null],[5,"SSL_CTX_get_options_shim","","",null,null],[5,"SSL_CTX_clear_options_shim","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"SSL_set_tlsext_host_name","","",null,null],[5,"X509_get_extensions","","",null,null],[0,"probe","","",null,null],[3,"ProbeResult","openssl_sys::probe","",null,null],[12,"cert_file","","",1,null],[12,"cert_dir","","",1,null],[5,"find_certs_dirs","","Probe the system for the directory in which CA certificates should likely be\nfound.",null,{"inputs":[],"output":{"name":"vec"}}],[5,"init_ssl_cert_env_vars","","",null,{"inputs":[],"output":null}],[5,"probe","","",null,{"inputs":[],"output":{"name":"proberesult"}}],[6,"ASN1_INTEGER","openssl_sys","",null,null],[6,"ASN1_STRING","","",null,null],[6,"ASN1_TIME","","",null,null],[6,"BIO","","",null,null],[6,"BIO_METHOD","","",null,null],[6,"BN_CTX","","",null,null],[6,"COMP_METHOD","","",null,null],[6,"CRYPTO_EX_DATA","","",null,null],[6,"ENGINE","","",null,null],[6,"EVP_CIPHER","","",null,null],[6,"EVP_CIPHER_CTX","","",null,null],[6,"EVP_MD","","",null,null],[6,"EVP_PKEY","","",null,null],[6,"EVP_PKEY_CTX","","",null,null],[6,"RSA","","",null,null],[6,"SSL","","",null,null],[6,"SSL_CTX","","",null,null],[6,"SSL_METHOD","","",null,null],[6,"X509","","",null,null],[6,"X509_CRL","","",null,null],[6,"X509_EXTENSION","","",null,null],[6,"X509_NAME","","",null,null],[6,"X509_NAME_ENTRY","","",null,null],[6,"X509_REQ","","",null,null],[6,"X509_STORE_CTX","","",null,null],[6,"stack_st_X509_EXTENSION","","",null,null],[6,"CRYPTO_EX_new","","",null,null],[6,"CRYPTO_EX_dup","","",null,null],[6,"CRYPTO_EX_free","","",null,null],[6,"PasswordCallback","","",null,null],[17,"BIO_CTRL_EOF","","",null,null],[17,"BIO_C_SET_BUF_MEM_EOF_RETURN","","",null,null],[17,"CRYPTO_LOCK","","",null,null],[17,"MBSTRING_ASC","","",null,null],[17,"MBSTRING_BMP","","",null,null],[17,"MBSTRING_FLAG","","",null,null],[17,"MBSTRING_UNIV","","",null,null],[17,"MBSTRING_UTF8","","",null,null],[17,"NID_ext_key_usage","","",null,null],[17,"NID_key_usage","","",null,null],[17,"PKCS5_SALT_LEN","","",null,null],[17,"SSL_CTRL_OPTIONS","","",null,null],[17,"SSL_CTRL_CLEAR_OPTIONS","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",null,null],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",null,null],[17,"SSL_CTRL_SET_READ_AHEAD","","",null,null],[17,"SSL_ERROR_NONE","","",null,null],[17,"SSL_ERROR_SSL","","",null,null],[17,"SSL_ERROR_SYSCALL","","",null,null],[17,"SSL_ERROR_WANT_ACCEPT","","",null,null],[17,"SSL_ERROR_WANT_CONNECT","","",null,null],[17,"SSL_ERROR_WANT_READ","","",null,null],[17,"SSL_ERROR_WANT_WRITE","","",null,null],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",null,null],[17,"SSL_ERROR_ZERO_RETURN","","",null,null],[17,"SSL_VERIFY_NONE","","",null,null],[17,"SSL_VERIFY_PEER","","",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",null,null],[17,"TLSEXT_NAMETYPE_host_name","","",null,null],[17,"SSL_TLSEXT_ERR_OK","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",null,null],[17,"SSL_TLSEXT_ERR_NOACK","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLv2","","",null,null],[17,"SSL_OP_NO_SSLv3","","",null,null],[17,"SSL_OP_NO_DTLSv1","","",null,null],[17,"SSL_OP_NO_TLSv1","","",null,null],[17,"SSL_OP_NO_DTLSv1_2","","",null,null],[17,"SSL_OP_NO_TLSv1_2","","",null,null],[17,"SSL_OP_NO_TLSv1_1","","",null,null],[17,"SSL_OP_NETSCAPE_CA_DN_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_CRYPTOPRO_TLSEXT_BUG","","",null,null],[17,"SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG","","",null,null],[17,"SSL_OP_MSIE_SSLV2_RSA_PADDING","","",null,null],[17,"SSL_OP_PKCS1_CHECK_1","","",null,null],[17,"SSL_OP_PKCS1_CHECK_2","","",null,null],[17,"SSL_OP_EPHEMERAL_RSA","","",null,null],[17,"V_ASN1_GENERALIZEDTIME","","",null,null],[17,"V_ASN1_UTCTIME","","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[17,"X509_FILETYPE_PEM","","",null,null],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",null,null],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",null,null],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",null,null],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CERT_REJECTED","","",null,null],[17,"X509_V_ERR_CERT_REVOKED","","",null,null],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CERT_UNTRUSTED","","",null,null],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",null,null],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",null,null],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",null,null],[17,"X509_V_ERR_INVALID_CA","","",null,null],[17,"X509_V_ERR_INVALID_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_NON_CA","","",null,null],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_PURPOSE","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",null,null],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",null,null],[17,"X509_V_ERR_OUT_OF_MEM","","",null,null],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",null,null],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",null,null],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",null,null],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",null,null],[17,"X509_V_ERR_SUBTREE_MINMAX","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",null,null],[17,"X509_V_OK","","",null,null],[11,"clone","","",2,{"inputs":[{"name":"evp_md_ctx"}],"output":{"name":"evp_md_ctx"}}],[11,"clone","","",3,{"inputs":[{"name":"hmac_ctx"}],"output":{"name":"hmac_ctx"}}],[11,"clone","","",4,{"inputs":[{"name":"x509v3_ctx"}],"output":{"name":"x509v3_ctx"}}],[11,"clone","","",0,{"inputs":[{"name":"bignum"}],"output":{"name":"bignum"}}]],"paths":[[3,"BIGNUM"],[3,"ProbeResult"],[3,"EVP_MD_CTX"],[3,"HMAC_CTX"],[3,"X509V3_CTX"]]};
searchIndex['rustc_serialize'] = {"items":[[0,"","rustc_serialize","Support code for encoding and decoding types.",null,null],[11,"encode","collections::string","",0,{"inputs":[{"name":"string"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"string"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::boxed","",1,{"inputs":[{"name":"box"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::rc","",2,{"inputs":[{"name":"rc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"rc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::borrow","",3,{"inputs":[{"name":"cow"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"cow"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec","",4,{"inputs":[{"name":"vec"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"vec"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::option","",5,{"inputs":[{"name":"option"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"option"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::marker","",6,{"inputs":[{"name":"phantomdata"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"phantomdata"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::path","",7,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::cell","",9,{"inputs":[{"name":"cell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",9,{"inputs":[{"name":"cell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",10,{"inputs":[{"name":"refcell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",10,{"inputs":[{"name":"refcell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::arc","",11,{"inputs":[{"name":"arc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",11,{"inputs":[{"name":"arc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::linked_list","",12,{"inputs":[{"name":"linkedlist"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",12,{"inputs":[{"name":"linkedlist"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec_deque","",13,{"inputs":[{"name":"vecdeque"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",13,{"inputs":[{"name":"vecdeque"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::map","",14,{"inputs":[{"name":"btreemap"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",14,{"inputs":[{"name":"btreemap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::set","",15,{"inputs":[{"name":"btreeset"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",15,{"inputs":[{"name":"btreeset"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",16,{"inputs":[{"name":"hashmap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::set","",17,{"inputs":[{"name":"hashset"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",17,{"inputs":[{"name":"hashset"},{"name":"d"}],"output":{"name":"result"}}],[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",18,null],[12,"newline","","Newline to use",18,null],[12,"pad","","True to pad output with `=` characters",18,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",18,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",19,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",19,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",20,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",20,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",21,null],[13,"InvalidBase64Length","","The input had an invalid length",21,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",22,{"inputs":[{"name":"tobase64"},{"name":"config"}],"output":{"name":"string"}}],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",23,{"inputs":[{"name":"frombase64"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"characterset"}],"output":{"name":"characterset"}}],[11,"clone","","",20,{"inputs":[{"name":"newline"}],"output":{"name":"newline"}}],[11,"clone","","",18,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"clone","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"frombase64error"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"str"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",24,null],[13,"InvalidHexLength","","The input had an invalid length",24,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",25,{"inputs":[{"name":"tohex"}],"output":{"name":"string"}}],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",26,{"inputs":[{"name":"fromhex"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"fromhexerror"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"str"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",27,null],[13,"U64","","",27,null],[13,"F64","","",27,null],[13,"String","","",27,null],[13,"Boolean","","",27,null],[13,"Array","","",27,null],[13,"Object","","",27,null],[13,"Null","","",27,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",28,null],[13,"InvalidNumber","","",28,null],[13,"EOFWhileParsingObject","","",28,null],[13,"EOFWhileParsingArray","","",28,null],[13,"EOFWhileParsingValue","","",28,null],[13,"EOFWhileParsingString","","",28,null],[13,"KeyMustBeAString","","",28,null],[13,"ExpectedColon","","",28,null],[13,"TrailingCharacters","","",28,null],[13,"TrailingComma","","",28,null],[13,"InvalidEscape","","",28,null],[13,"InvalidUnicodeCodePoint","","",28,null],[13,"LoneLeadingSurrogateInHexEscape","","",28,null],[13,"UnexpectedEndOfHexEscape","","",28,null],[13,"UnrecognizedHex","","",28,null],[13,"NotFourDigit","","",28,null],[13,"ControlCharacterInString","","",28,null],[13,"NotUtf8","","",28,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",29,null],[13,"IoError","","",29,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",30,null],[13,"ExpectedError","","",30,null],[13,"MissingFieldError","","",30,null],[13,"UnknownVariantError","","",30,null],[13,"ApplicationError","","",30,null],[13,"EOF","","",30,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",31,null],[13,"BadHashmapKey","","",31,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",32,null],[13,"ObjectEnd","","",32,null],[13,"ArrayStart","","",32,null],[13,"ArrayEnd","","",32,null],[13,"BooleanValue","","",32,null],[13,"I64Value","","",32,null],[13,"U64Value","","",32,null],[13,"F64Value","","",32,null],[13,"StringValue","","",32,null],[13,"NullValue","","",32,null],[13,"Error","","",32,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",33,null],[13,"Key","","",33,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",34,{"inputs":[{"name":"tojson"}],"output":{"name":"json"}}],[11,"fmt","","",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"eq","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"eq","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"errorcode"}],"output":{"name":"errorcode"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"parsererror"},{"name":"parsererror"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"self"}}],[11,"fmt","","",28,{"inputs":[{"name":"errorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"str"}}],[11,"cause","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"option"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",30,{"inputs":[{"name":"decodererror"},{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",29,{"inputs":[{"name":"parsererror"}],"output":{"name":"str"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",29,{"inputs":[{"name":"parsererror"},{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"str"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",31,{"inputs":[{"name":"encodererror"},{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[11,"emit_nil","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_usize","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"encoderesult"}}],[11,"emit_u64","","",35,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"encoderesult"}}],[11,"emit_u32","","",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"encoderesult"}}],[11,"emit_u16","","",35,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"encoderesult"}}],[11,"emit_u8","","",35,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"encoderesult"}}],[11,"emit_isize","","",35,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"encoderesult"}}],[11,"emit_i64","","",35,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"encoderesult"}}],[11,"emit_i32","","",35,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"encoderesult"}}],[11,"emit_i16","","",35,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"encoderesult"}}],[11,"emit_i8","","",35,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"encoderesult"}}],[11,"emit_bool","","",35,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"encoderesult"}}],[11,"emit_f64","","",35,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"encoderesult"}}],[11,"emit_f32","","",35,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"encoderesult"}}],[11,"emit_char","","",35,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"encoderesult"}}],[11,"emit_str","","",35,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"encoderesult"}}],[11,"emit_enum","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option_none","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_option_some","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq_elt","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_key","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_val","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"encode","","",27,{"inputs":[{"name":"json"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",27,{"inputs":[{"name":"json"},{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",27,{"inputs":[{"name":"json"}],"output":{"name":"prettyjson"}}],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",27,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"json"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"usize"}],"output":{"name":"json"}}],[11,"fmt","","",32,{"inputs":[{"name":"jsonevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"stackelement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"stackelement"}],"output":{"name":"stackelement"}}],[11,"eq","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"new","","",36,{"inputs":[{"name":"stack"}],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",36,{"inputs":[{"name":"stack"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the stack is empty.",36,{"inputs":[{"name":"stack"}],"output":{"name":"bool"}}],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",36,{"inputs":[{"name":"stack"},{"name":"usize"}],"output":{"name":"stackelement"}}],[11,"is_equal_to","","Compares this stack with an array of StackElements.",36,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"top","","Returns the top-most element (if any).",36,{"inputs":[{"name":"stack"}],"output":{"name":"option"}}],[11,"next","","",37,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[11,"new","","Creates the JSON parser.",37,{"inputs":[{"name":"parser"},{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",37,{"inputs":[{"name":"parser"}],"output":{"name":"stack"}}],[11,"new","","Create a JSON Builder.",38,{"inputs":[{"name":"builder"},{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",38,{"inputs":[{"name":"builder"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",39,{"inputs":[{"name":"decoder"},{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_usize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_isize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_bool","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_char","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_str","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_enum","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_variant","","",39,null],[11,"read_enum_variant_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_struct_variant","","",39,null],[11,"read_enum_struct_variant_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_option","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq_elt","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_key","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_val","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"error","","",39,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"decodererror"}}],[11,"to_json","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"to_json","collections::string","",0,{"inputs":[{"name":"string"}],"output":{"name":"json"}}],[11,"to_json","collections::vec","",4,{"inputs":[{"name":"vec"}],"output":{"name":"json"}}],[11,"to_json","collections::btree::map","",14,{"inputs":[{"name":"btreemap"}],"output":{"name":"json"}}],[11,"to_json","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"}],"output":{"name":"json"}}],[11,"to_json","core::option","",5,{"inputs":[{"name":"option"}],"output":{"name":"json"}}],[11,"fmt","rustc_serialize::json","Encodes a json value into a string",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",40,{"inputs":[{"name":"prettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",41,{"inputs":[{"name":"asjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"indent","","Set the indentation level for the emitted JSON",42,{"inputs":[{"name":"asprettyjson"},{"name":"u32"}],"output":{"name":"asprettyjson"}}],[11,"fmt","","Encodes a json value into a string",42,{"inputs":[{"name":"asprettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",43,null],[10,"read_nil","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_usize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_isize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_bool","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_char","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_str","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_enum","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_variant","","",43,null],[10,"read_enum_variant_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_struct_variant","","",43,null],[10,"read_enum_struct_variant_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_option","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq_elt","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_key","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_val","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"error","","",43,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"error"}}],[8,"Encoder","","",null,null],[16,"Error","","",44,null],[10,"emit_nil","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_usize","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"result"}}],[10,"emit_u64","","",44,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"result"}}],[10,"emit_u32","","",44,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[10,"emit_u16","","",44,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"result"}}],[10,"emit_u8","","",44,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"result"}}],[10,"emit_isize","","",44,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"result"}}],[10,"emit_i64","","",44,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"result"}}],[10,"emit_i32","","",44,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"result"}}],[10,"emit_i16","","",44,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"result"}}],[10,"emit_i8","","",44,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"result"}}],[10,"emit_bool","","",44,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"result"}}],[10,"emit_f64","","",44,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"result"}}],[10,"emit_f32","","",44,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"result"}}],[10,"emit_char","","",44,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"result"}}],[10,"emit_str","","",44,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"result"}}],[10,"emit_enum","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option_none","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_option_some","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq_elt","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_key","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_val","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[8,"Decodable","","",null,null],[10,"decode","","",45,{"inputs":[{"name":"decodable"},{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",46,{"inputs":[{"name":"encodable"},{"name":"s"}],"output":{"name":"result"}}],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",47,{"inputs":[{"name":"decoderhelpers"},{"name":"f"}],"output":{"name":"result"}}],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",48,null]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[4,"Cow"],[3,"Vec"],[4,"Option"],[3,"PhantomData"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex['time'] = {"items":[[0,"","time","Simple time handling.",null,null],[3,"Duration","","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10<sup>9</sup> - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"tmfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,{"inputs":[{"name":"duration"}],"output":{"name":"bool"}}],[11,"neg","","",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"add","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",4,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"div","","",4,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"fmt","","",4,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"timespec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"new","","",0,{"inputs":[{"name":"timespec"},{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,{"inputs":[{"name":"timespec"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"timespec"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"duration"}}],[11,"clone","","",5,{"inputs":[{"name":"precisetime"}],"output":{"name":"precisetime"}}],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",5,{"inputs":[{"name":"precisetime"}],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",5,{"inputs":[{"name":"precisetime"},{"name":"precisetime"}],"output":{"name":"duration"}}],[11,"fmt","","",6,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",6,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"fmt","","",6,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sub","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"duration"}}],[11,"sub","","",6,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"add","","",6,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"tm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"add","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"tm"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"tm"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"duration"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"ordering"}}],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,{"inputs":[{"name":"tm"}],"output":{"name":"timespec"}}],[11,"to_local","","Convert time to the local timezone",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"to_utc","","Convert time to the UTC",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"strftime","","Formats the time according to the format string.",1,{"inputs":[{"name":"tm"},{"name":"str"}],"output":{"name":"result"}}],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"clone","","",2,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",2,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"tmfmt"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex['encoding'] = {"items":[[0,"","encoding","# Encoding 0.2.32",null,null],[0,"types","","Interface to the character encoding.",null,null],[3,"CodecError","encoding::types","Error information from either encoder or decoder.",null,null],[12,"upto","","The byte position of the first remaining byte, with respect to the *current* input.\nFor the `finish` call, this should be no more than zero (since there is no input).\nIt can be negative if the remaining byte is in the prior inputs,\nas long as the remaining byte is not yet processed.\nThe caller should feed the bytes starting from this point again\nin order to continue encoding or decoding after an error.",0,null],[12,"cause","","A human-readable cause of the error.",0,null],[4,"DecoderTrap","","Trap, which handles decoder errors.",null,null],[13,"Strict","","Immediately fails on errors.\nCorresponds to WHATWG \"fatal\" error algorithm.",1,null],[13,"Replace","","Replaces an error with a U+FFFD (decoder).\nCorresponds to WHATWG \"replacement\" error algorithm.",1,null],[13,"Ignore","","Silently ignores an error, effectively replacing it with an empty sequence.",1,null],[13,"Call","","Calls given function to handle decoder errors.\nThe function is given the current decoder, input and output writer,\nand should return true only when it is fine to keep going.",1,null],[4,"EncoderTrap","","",null,null],[13,"Strict","","Immediately fails on errors.\nCorresponds to WHATWG \"fatal\" error algorithm.",2,null],[13,"Replace","","Replaces an error with `?` in given encoding.\nNote that this fails when `?` cannot be represented in given encoding.\nCorresponds to WHATWG \"URL\" error algorithms.",2,null],[13,"Ignore","","Silently ignores an error, effectively replacing it with an empty sequence.",2,null],[13,"NcrEscape","","Replaces an error with XML numeric character references (e.g. `&#1234;`).\nThe encoder trap fails when NCRs cannot be represented in given encoding.\nCorresponds to WHATWG \"<form>\" error algorithms.",2,null],[13,"Call","","Calls given function to handle encoder errors.\nThe function is given the current encoder, input and output writer,\nand should return true only when it is fine to keep going.",2,null],[5,"decode","","Determine the encoding by looking for a Byte Order Mark (BOM)\nand decoded a single string in memory.\nReturn the result and the used encoding.",null,null],[6,"EncodingRef","","A trait object using dynamic dispatch which is a sendable reference to the encoding,\nfor code where the encoding is not known at compile-time.",null,null],[6,"EncoderTrapFunc","","A type of the bare function in `EncoderTrap` values.",null,null],[6,"DecoderTrapFunc","","A type of the bare function in `DecoderTrap` values.",null,null],[8,"ByteWriter","","Byte writer used by encoders. In most cases this will be an owned vector of `u8`.",null,null],[11,"writer_hint","","Hints an expected lower bound on the length (in bytes) of the output\nuntil the next call to `writer_hint`,\nso that the writer can reserve the memory for writing.\n`RawEncoder`s are recommended but not required to call this method\nwith an appropriate estimate.\nBy default this method does nothing.",3,{"inputs":[{"name":"bytewriter"},{"name":"usize"}],"output":null}],[10,"write_byte","","Writes a single byte.",3,{"inputs":[{"name":"bytewriter"},{"name":"u8"}],"output":null}],[10,"write_bytes","","Writes a number of bytes.",3,null],[8,"StringWriter","","String writer used by decoders. In most cases this will be an owned string.",null,null],[11,"writer_hint","","Hints an expected lower bound on the length (in bytes) of the output\nuntil the next call to `writer_hint`,\nso that the writer can reserve the memory for writing.\n`RawDecoder`s are recommended but not required to call this method\nwith an appropriate estimate.\nBy default this method does nothing.",4,{"inputs":[{"name":"stringwriter"},{"name":"usize"}],"output":null}],[10,"write_char","","Writes a single character.",4,{"inputs":[{"name":"stringwriter"},{"name":"char"}],"output":null}],[10,"write_str","","Writes a string.",4,{"inputs":[{"name":"stringwriter"},{"name":"str"}],"output":null}],[8,"RawEncoder","","Encoder converting a Unicode string into a byte sequence.\nThis is a lower level interface, and normally `Encoding::encode` should be used instead.",null,null],[10,"from_self","","Creates a fresh `RawEncoder` instance which parameters are same as `self`.",5,{"inputs":[{"name":"rawencoder"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","Returns true if this encoding is compatible to ASCII,\ni.e. U+0000 through U+007F always map to bytes 00 through 7F and nothing else.",5,{"inputs":[{"name":"rawencoder"}],"output":{"name":"bool"}}],[10,"raw_feed","","Feeds given portion of string to the encoder,\npushes the an encoded byte sequence at the end of the given output,\nand returns a byte offset to the first unprocessed character\n(that can be zero when the first such character appeared in the prior calls to `raw_feed`)\nand optional error information (None means success).",5,null],[10,"raw_finish","","Finishes the encoder,\npushes the an encoded byte sequence at the end of the given output,\nand returns optional error information (None means success).\n`remaining` value of the error information, if any, is always an empty string.",5,{"inputs":[{"name":"rawencoder"},{"name":"bytewriter"}],"output":{"name":"option"}}],[8,"RawDecoder","","Decoder converting a byte sequence into a Unicode string.\nThis is a lower level interface, and normally `Encoding::decode` should be used instead.",null,null],[10,"from_self","","Creates a fresh `RawDecoder` instance which parameters are same as `self`.",6,{"inputs":[{"name":"rawdecoder"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","Returns true if this encoding is compatible to ASCII,\ni.e. bytes 00 through 7F always map to U+0000 through U+007F and nothing else.",6,{"inputs":[{"name":"rawdecoder"}],"output":{"name":"bool"}}],[10,"raw_feed","","Feeds given portion of byte sequence to the encoder,\npushes the a decoded string at the end of the given output,\nand returns an offset to the first unprocessed byte\n(that can be zero when the first such byte appeared in the prior calls to `raw_feed`)\nand optional error information (None means success).",6,null],[10,"raw_finish","","Finishes the decoder,\npushes the a decoded string at the end of the given output,\nand returns optional error information (None means success).",6,{"inputs":[{"name":"rawdecoder"},{"name":"stringwriter"}],"output":{"name":"option"}}],[8,"Encoding","","Character encoding.",null,null],[10,"name","","Returns the canonical name of given encoding.\nThis name is guaranteed to be unique across built-in encodings,\nbut it is not normative and would be at most arbitrary.",7,{"inputs":[{"name":"encoding"}],"output":{"name":"str"}}],[11,"whatwg_name","","Returns a name of given encoding defined in the WHATWG Encoding standard, if any.\nThis name often differs from `name` due to the compatibility reason.",7,{"inputs":[{"name":"encoding"}],"output":{"name":"option"}}],[10,"raw_encoder","","Creates a new encoder.",7,{"inputs":[{"name":"encoding"}],"output":{"name":"box"}}],[10,"raw_decoder","","Creates a new decoder.",7,{"inputs":[{"name":"encoding"}],"output":{"name":"box"}}],[11,"encode","","An easy-to-use interface to `RawEncoder`.\nOn the encoder error `trap` is called,\nwhich may return a replacement sequence to continue processing,\nor a failure to return the error.",7,{"inputs":[{"name":"encoding"},{"name":"str"},{"name":"encodertrap"}],"output":{"name":"result"}}],[11,"encode_to","","Encode into a `ByteWriter`.",7,{"inputs":[{"name":"encoding"},{"name":"str"},{"name":"encodertrap"},{"name":"bytewriter"}],"output":{"name":"result"}}],[11,"decode","","An easy-to-use interface to `RawDecoder`.\nOn the decoder error `trap` is called,\nwhich may return a replacement string to continue processing,\nor a failure to return the error.",7,null],[11,"decode_to","","Decode into a `StringWriter`.",7,null],[11,"writer_hint","collections::vec","",8,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":null}],[11,"write_byte","","",8,{"inputs":[{"name":"vec"},{"name":"u8"}],"output":null}],[11,"write_bytes","","",8,null],[11,"writer_hint","collections::string","",9,{"inputs":[{"name":"string"},{"name":"usize"}],"output":null}],[11,"write_char","","",9,{"inputs":[{"name":"string"},{"name":"char"}],"output":null}],[11,"write_str","","",9,{"inputs":[{"name":"string"},{"name":"str"}],"output":null}],[11,"trap","encoding::types","Handles a decoder error. May write to the output writer.\nReturns true only when it is fine to keep going.",1,null],[11,"clone","","",1,{"inputs":[{"name":"decodertrap"}],"output":{"name":"decodertrap"}}],[11,"trap","","Handles an encoder error. May write to the output writer.\nReturns true only when it is fine to keep going.",2,{"inputs":[{"name":"encodertrap"},{"name":"rawencoder"},{"name":"str"},{"name":"bytewriter"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"encodertrap"}],"output":{"name":"encodertrap"}}],[0,"codec","encoding","Codec implementations.",null,null],[0,"error","encoding::codec","A placeholder encoding that returns encoder/decoder error for every case.",null,null],[3,"ErrorEncoding","encoding::codec::error","An encoding that returns encoder/decoder error for every case.",null,null],[3,"ErrorEncoder","","An encoder that always returns error.",null,null],[3,"ErrorDecoder","","A decoder that always returns error.",null,null],[11,"clone","","",10,{"inputs":[{"name":"errorencoding"}],"output":{"name":"errorencoding"}}],[11,"name","","",10,{"inputs":[{"name":"errorencoding"}],"output":{"name":"str"}}],[11,"raw_encoder","","",10,{"inputs":[{"name":"errorencoding"}],"output":{"name":"box"}}],[11,"raw_decoder","","",10,{"inputs":[{"name":"errorencoding"}],"output":{"name":"box"}}],[11,"clone","","",11,{"inputs":[{"name":"errorencoder"}],"output":{"name":"errorencoder"}}],[11,"new","","",11,{"inputs":[{"name":"errorencoder"}],"output":{"name":"box"}}],[11,"from_self","","",11,{"inputs":[{"name":"errorencoder"}],"output":{"name":"box"}}],[11,"raw_feed","","",11,null],[11,"raw_finish","","",11,{"inputs":[{"name":"errorencoder"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"clone","","",12,{"inputs":[{"name":"errordecoder"}],"output":{"name":"errordecoder"}}],[11,"new","","",12,{"inputs":[{"name":"errordecoder"}],"output":{"name":"box"}}],[11,"from_self","","",12,{"inputs":[{"name":"errordecoder"}],"output":{"name":"box"}}],[11,"raw_feed","","",12,null],[11,"raw_finish","","",12,{"inputs":[{"name":"errordecoder"},{"name":"stringwriter"}],"output":{"name":"option"}}],[0,"ascii","encoding::codec","7-bit ASCII encoding.",null,null],[3,"ASCIIEncoding","encoding::codec::ascii","ASCII, also known as ISO/IEC 646:US.",null,null],[3,"ASCIIEncoder","","An encoder for ASCII.",null,null],[3,"ASCIIDecoder","","A decoder for ASCII.",null,null],[11,"clone","","",13,{"inputs":[{"name":"asciiencoding"}],"output":{"name":"asciiencoding"}}],[11,"name","","",13,{"inputs":[{"name":"asciiencoding"}],"output":{"name":"str"}}],[11,"raw_encoder","","",13,{"inputs":[{"name":"asciiencoding"}],"output":{"name":"box"}}],[11,"raw_decoder","","",13,{"inputs":[{"name":"asciiencoding"}],"output":{"name":"box"}}],[11,"clone","","",14,{"inputs":[{"name":"asciiencoder"}],"output":{"name":"asciiencoder"}}],[11,"new","","",14,{"inputs":[{"name":"asciiencoder"}],"output":{"name":"box"}}],[11,"from_self","","",14,{"inputs":[{"name":"asciiencoder"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",14,{"inputs":[{"name":"asciiencoder"}],"output":{"name":"bool"}}],[11,"raw_feed","","",14,null],[11,"raw_finish","","",14,{"inputs":[{"name":"asciiencoder"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"clone","","",15,{"inputs":[{"name":"asciidecoder"}],"output":{"name":"asciidecoder"}}],[11,"new","","",15,{"inputs":[{"name":"asciidecoder"}],"output":{"name":"box"}}],[11,"from_self","","",15,{"inputs":[{"name":"asciidecoder"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",15,{"inputs":[{"name":"asciidecoder"}],"output":{"name":"bool"}}],[11,"raw_feed","","",15,null],[11,"raw_finish","","",15,{"inputs":[{"name":"asciidecoder"},{"name":"stringwriter"}],"output":{"name":"option"}}],[0,"singlebyte","encoding::codec","Common codec implementation for single-byte encodings.",null,null],[3,"SingleByteEncoding","encoding::codec::singlebyte","A common framework for single-byte encodings based on ASCII.",null,null],[12,"name","","",16,null],[12,"whatwg_name","","",16,null],[12,"index_forward","","",16,null],[12,"index_backward","","",16,null],[3,"SingleByteEncoder","","An encoder for single-byte encodings based on ASCII.",null,null],[3,"SingleByteDecoder","","A decoder for single-byte encodings based on ASCII.",null,null],[0,"iso_8859_1","","Algorithmic mapping for ISO 8859-1.",null,null],[5,"forward","encoding::codec::singlebyte::iso_8859_1","",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[11,"clone","encoding::codec::singlebyte","",16,{"inputs":[{"name":"singlebyteencoding"}],"output":{"name":"singlebyteencoding"}}],[11,"name","","",16,{"inputs":[{"name":"singlebyteencoding"}],"output":{"name":"str"}}],[11,"whatwg_name","","",16,{"inputs":[{"name":"singlebyteencoding"}],"output":{"name":"option"}}],[11,"raw_encoder","","",16,{"inputs":[{"name":"singlebyteencoding"}],"output":{"name":"box"}}],[11,"raw_decoder","","",16,{"inputs":[{"name":"singlebyteencoding"}],"output":{"name":"box"}}],[11,"clone","","",17,{"inputs":[{"name":"singlebyteencoder"}],"output":{"name":"singlebyteencoder"}}],[11,"new","","",17,null],[11,"from_self","","",17,{"inputs":[{"name":"singlebyteencoder"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",17,{"inputs":[{"name":"singlebyteencoder"}],"output":{"name":"bool"}}],[11,"raw_feed","","",17,null],[11,"raw_finish","","",17,{"inputs":[{"name":"singlebyteencoder"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"clone","","",18,{"inputs":[{"name":"singlebytedecoder"}],"output":{"name":"singlebytedecoder"}}],[11,"new","","",18,null],[11,"from_self","","",18,{"inputs":[{"name":"singlebytedecoder"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",18,{"inputs":[{"name":"singlebytedecoder"}],"output":{"name":"bool"}}],[11,"raw_feed","","",18,null],[11,"raw_finish","","",18,{"inputs":[{"name":"singlebytedecoder"},{"name":"stringwriter"}],"output":{"name":"option"}}],[0,"utf_8","encoding::codec","UTF-8, the universal encoding.",null,null],[3,"UTF8Encoding","encoding::codec::utf_8","UTF-8 (UCS Transformation Format, 8-bit).",null,null],[3,"UTF8Encoder","","An encoder for UTF-8.",null,null],[3,"UTF8Decoder","","A decoder for UTF-8.",null,null],[5,"from_utf8","","Almost equivalent to `std::str::from_utf8`.\nThis function is provided for the fair benchmark against the stdlib's UTF-8 conversion\nfunctions, as rust-encoding always allocates a new string.",null,null],[11,"clone","","",19,{"inputs":[{"name":"utf8encoding"}],"output":{"name":"utf8encoding"}}],[11,"name","","",19,{"inputs":[{"name":"utf8encoding"}],"output":{"name":"str"}}],[11,"whatwg_name","","",19,{"inputs":[{"name":"utf8encoding"}],"output":{"name":"option"}}],[11,"raw_encoder","","",19,{"inputs":[{"name":"utf8encoding"}],"output":{"name":"box"}}],[11,"raw_decoder","","",19,{"inputs":[{"name":"utf8encoding"}],"output":{"name":"box"}}],[11,"clone","","",20,{"inputs":[{"name":"utf8encoder"}],"output":{"name":"utf8encoder"}}],[11,"new","","",20,{"inputs":[{"name":"utf8encoder"}],"output":{"name":"box"}}],[11,"from_self","","",20,{"inputs":[{"name":"utf8encoder"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",20,{"inputs":[{"name":"utf8encoder"}],"output":{"name":"bool"}}],[11,"raw_feed","","",20,null],[11,"raw_finish","","",20,{"inputs":[{"name":"utf8encoder"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"clone","","",21,{"inputs":[{"name":"utf8decoder"}],"output":{"name":"utf8decoder"}}],[11,"new","","",21,{"inputs":[{"name":"utf8decoder"}],"output":{"name":"box"}}],[11,"from_self","","",21,{"inputs":[{"name":"utf8decoder"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",21,{"inputs":[{"name":"utf8decoder"}],"output":{"name":"bool"}}],[11,"raw_feed","","",21,null],[11,"raw_finish","","",21,{"inputs":[{"name":"utf8decoder"},{"name":"stringwriter"}],"output":{"name":"option"}}],[0,"utf_16","encoding::codec","UTF-16.",null,null],[3,"Little","encoding::codec::utf_16","An implementation type for little endian.",null,null],[3,"Big","","An implementation type for big endian.",null,null],[3,"UTF16Encoding","","UTF-16 (UCS Transformation Format, 16-bit).",null,null],[3,"UTF16Encoder","","An encoder for UTF-16.",null,null],[3,"UTF16Decoder","","A decoder for UTF-16.",null,null],[6,"UTF16LEEncoding","","A type for UTF-16 in little endian.",null,null],[6,"UTF16BEEncoding","","A type for UTF-16 in big endian.",null,null],[17,"UTF_16LE_ENCODING","","An instance for UTF-16 in little endian.",null,null],[17,"UTF_16BE_ENCODING","","An instance for UTF-16 in big endian.",null,null],[11,"clone","","",22,{"inputs":[{"name":"little"}],"output":{"name":"little"}}],[11,"clone","","",23,{"inputs":[{"name":"big"}],"output":{"name":"big"}}],[11,"clone","","",24,{"inputs":[{"name":"utf16encoding"}],"output":{"name":"utf16encoding"}}],[11,"name","","",24,{"inputs":[{"name":"utf16encoding"}],"output":{"name":"str"}}],[11,"whatwg_name","","",24,{"inputs":[{"name":"utf16encoding"}],"output":{"name":"option"}}],[11,"raw_encoder","","",24,{"inputs":[{"name":"utf16encoding"}],"output":{"name":"box"}}],[11,"raw_decoder","","",24,{"inputs":[{"name":"utf16encoding"}],"output":{"name":"box"}}],[11,"clone","","",25,{"inputs":[{"name":"utf16encoder"}],"output":{"name":"utf16encoder"}}],[11,"from_self","","",25,{"inputs":[{"name":"utf16encoder"}],"output":{"name":"box"}}],[11,"raw_feed","","",25,null],[11,"raw_finish","","",25,{"inputs":[{"name":"utf16encoder"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"new","","",26,{"inputs":[{"name":"utf16decoder"}],"output":{"name":"box"}}],[11,"from_self","","",26,{"inputs":[{"name":"utf16decoder"}],"output":{"name":"box"}}],[11,"raw_feed","","",26,null],[11,"raw_finish","","",26,{"inputs":[{"name":"utf16decoder"},{"name":"stringwriter"}],"output":{"name":"option"}}],[0,"korean","encoding::codec","Legacy Korean encodings based on KS X 1001.",null,null],[3,"Windows949Encoding","encoding::codec::korean","Windows code page 949.",null,null],[3,"Windows949Encoder","","An encoder for Windows code page 949.",null,null],[11,"clone","","",27,{"inputs":[{"name":"windows949encoding"}],"output":{"name":"windows949encoding"}}],[11,"name","","",27,{"inputs":[{"name":"windows949encoding"}],"output":{"name":"str"}}],[11,"whatwg_name","","",27,{"inputs":[{"name":"windows949encoding"}],"output":{"name":"option"}}],[11,"raw_encoder","","",27,{"inputs":[{"name":"windows949encoding"}],"output":{"name":"box"}}],[11,"raw_decoder","","",27,{"inputs":[{"name":"windows949encoding"}],"output":{"name":"box"}}],[11,"clone","","",28,{"inputs":[{"name":"windows949encoder"}],"output":{"name":"windows949encoder"}}],[11,"new","","",28,{"inputs":[{"name":"windows949encoder"}],"output":{"name":"box"}}],[11,"from_self","","",28,{"inputs":[{"name":"windows949encoder"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",28,{"inputs":[{"name":"windows949encoder"}],"output":{"name":"bool"}}],[11,"raw_feed","","",28,null],[11,"raw_finish","","",28,{"inputs":[{"name":"windows949encoder"},{"name":"bytewriter"}],"output":{"name":"option"}}],[0,"japanese","encoding::codec","Legacy Japanese encodings based on JIS X 0208 and JIS X 0212.",null,null],[3,"EUCJPEncoding","encoding::codec::japanese","EUC-JP. (XXX with asymmetric JIS X 0212 support)",null,null],[3,"EUCJPEncoder","","An encoder for EUC-JP with unused G3 character set.",null,null],[3,"Windows31JEncoding","","Windows code page 932, i.e. Shift_JIS with IBM/NEC extensions.",null,null],[3,"Windows31JEncoder","","An encoder for Shift_JIS with IBM/NEC extensions.",null,null],[3,"ISO2022JPEncoding","","ISO-2022-JP.",null,null],[3,"ISO2022JPEncoder","","An encoder for ISO-2022-JP without JIS X 0212/0213 support.",null,null],[11,"clone","","",29,{"inputs":[{"name":"eucjpencoding"}],"output":{"name":"eucjpencoding"}}],[11,"name","","",29,{"inputs":[{"name":"eucjpencoding"}],"output":{"name":"str"}}],[11,"whatwg_name","","",29,{"inputs":[{"name":"eucjpencoding"}],"output":{"name":"option"}}],[11,"raw_encoder","","",29,{"inputs":[{"name":"eucjpencoding"}],"output":{"name":"box"}}],[11,"raw_decoder","","",29,{"inputs":[{"name":"eucjpencoding"}],"output":{"name":"box"}}],[11,"clone","","",30,{"inputs":[{"name":"eucjpencoder"}],"output":{"name":"eucjpencoder"}}],[11,"new","","",30,{"inputs":[{"name":"eucjpencoder"}],"output":{"name":"box"}}],[11,"from_self","","",30,{"inputs":[{"name":"eucjpencoder"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",30,{"inputs":[{"name":"eucjpencoder"}],"output":{"name":"bool"}}],[11,"raw_feed","","",30,null],[11,"raw_finish","","",30,{"inputs":[{"name":"eucjpencoder"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"clone","","",31,{"inputs":[{"name":"windows31jencoding"}],"output":{"name":"windows31jencoding"}}],[11,"name","","",31,{"inputs":[{"name":"windows31jencoding"}],"output":{"name":"str"}}],[11,"whatwg_name","","",31,{"inputs":[{"name":"windows31jencoding"}],"output":{"name":"option"}}],[11,"raw_encoder","","",31,{"inputs":[{"name":"windows31jencoding"}],"output":{"name":"box"}}],[11,"raw_decoder","","",31,{"inputs":[{"name":"windows31jencoding"}],"output":{"name":"box"}}],[11,"clone","","",32,{"inputs":[{"name":"windows31jencoder"}],"output":{"name":"windows31jencoder"}}],[11,"new","","",32,{"inputs":[{"name":"windows31jencoder"}],"output":{"name":"box"}}],[11,"from_self","","",32,{"inputs":[{"name":"windows31jencoder"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",32,{"inputs":[{"name":"windows31jencoder"}],"output":{"name":"bool"}}],[11,"raw_feed","","",32,null],[11,"raw_finish","","",32,{"inputs":[{"name":"windows31jencoder"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"clone","","",33,{"inputs":[{"name":"iso2022jpencoding"}],"output":{"name":"iso2022jpencoding"}}],[11,"name","","",33,{"inputs":[{"name":"iso2022jpencoding"}],"output":{"name":"str"}}],[11,"whatwg_name","","",33,{"inputs":[{"name":"iso2022jpencoding"}],"output":{"name":"option"}}],[11,"raw_encoder","","",33,{"inputs":[{"name":"iso2022jpencoding"}],"output":{"name":"box"}}],[11,"raw_decoder","","",33,{"inputs":[{"name":"iso2022jpencoding"}],"output":{"name":"box"}}],[11,"clone","","",34,{"inputs":[{"name":"iso2022jpencoder"}],"output":{"name":"iso2022jpencoder"}}],[11,"new","","",34,{"inputs":[{"name":"iso2022jpencoder"}],"output":{"name":"box"}}],[11,"from_self","","",34,{"inputs":[{"name":"iso2022jpencoder"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",34,{"inputs":[{"name":"iso2022jpencoder"}],"output":{"name":"bool"}}],[11,"raw_feed","","",34,null],[11,"raw_finish","","",34,{"inputs":[{"name":"iso2022jpencoder"},{"name":"bytewriter"}],"output":{"name":"option"}}],[0,"simpchinese","encoding::codec","Legacy simplified Chinese encodings based on GB 2312 and GB 18030.",null,null],[3,"GBK","encoding::codec::simpchinese","An implementation type for GBK.",null,null],[3,"GB18030","","An implementation type for GB18030.",null,null],[3,"GBEncoding","","GBK and GB 18030-2005.",null,null],[3,"GBEncoder","","An encoder for GBK and GB18030.",null,null],[3,"HZEncoding","","HZ. (RFC 1843)",null,null],[3,"HZEncoder","","An encoder for HZ.",null,null],[6,"GBKEncoding","","A type for GBK.",null,null],[6,"GB18030Encoding","","A type for GB18030.",null,null],[17,"GBK_ENCODING","","An instance for GBK.",null,null],[17,"GB18030_ENCODING","","An instance for GB18030.",null,null],[11,"clone","","",35,{"inputs":[{"name":"gbk"}],"output":{"name":"gbk"}}],[11,"clone","","",36,{"inputs":[{"name":"gb18030"}],"output":{"name":"gb18030"}}],[11,"clone","","",37,{"inputs":[{"name":"gbencoding"}],"output":{"name":"gbencoding"}}],[11,"name","","",37,{"inputs":[{"name":"gbencoding"}],"output":{"name":"str"}}],[11,"whatwg_name","","",37,{"inputs":[{"name":"gbencoding"}],"output":{"name":"option"}}],[11,"raw_encoder","","",37,{"inputs":[{"name":"gbencoding"}],"output":{"name":"box"}}],[11,"raw_decoder","","",37,{"inputs":[{"name":"gbencoding"}],"output":{"name":"box"}}],[11,"clone","","",38,{"inputs":[{"name":"gbencoder"}],"output":{"name":"gbencoder"}}],[11,"new","","",38,{"inputs":[{"name":"gbencoder"}],"output":{"name":"box"}}],[11,"from_self","","",38,{"inputs":[{"name":"gbencoder"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",38,{"inputs":[{"name":"gbencoder"}],"output":{"name":"bool"}}],[11,"raw_feed","","",38,null],[11,"raw_finish","","",38,{"inputs":[{"name":"gbencoder"},{"name":"bytewriter"}],"output":{"name":"option"}}],[11,"clone","","",39,{"inputs":[{"name":"hzencoding"}],"output":{"name":"hzencoding"}}],[11,"name","","",39,{"inputs":[{"name":"hzencoding"}],"output":{"name":"str"}}],[11,"whatwg_name","","",39,{"inputs":[{"name":"hzencoding"}],"output":{"name":"option"}}],[11,"raw_encoder","","",39,{"inputs":[{"name":"hzencoding"}],"output":{"name":"box"}}],[11,"raw_decoder","","",39,{"inputs":[{"name":"hzencoding"}],"output":{"name":"box"}}],[11,"clone","","",40,{"inputs":[{"name":"hzencoder"}],"output":{"name":"hzencoder"}}],[11,"new","","",40,{"inputs":[{"name":"hzencoder"}],"output":{"name":"box"}}],[11,"from_self","","",40,{"inputs":[{"name":"hzencoder"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",40,{"inputs":[{"name":"hzencoder"}],"output":{"name":"bool"}}],[11,"raw_feed","","",40,null],[11,"raw_finish","","",40,{"inputs":[{"name":"hzencoder"},{"name":"bytewriter"}],"output":{"name":"option"}}],[0,"tradchinese","encoding::codec","Legacy traditional Chinese encodings.",null,null],[3,"BigFive2003Encoding","encoding::codec::tradchinese","Big5-2003 with common extensions. (XXX with asymmetric HKSCS-2008 support)",null,null],[3,"BigFive2003Encoder","","An encoder for Big5-2003.",null,null],[11,"clone","","",41,{"inputs":[{"name":"bigfive2003encoding"}],"output":{"name":"bigfive2003encoding"}}],[11,"name","","",41,{"inputs":[{"name":"bigfive2003encoding"}],"output":{"name":"str"}}],[11,"whatwg_name","","",41,{"inputs":[{"name":"bigfive2003encoding"}],"output":{"name":"option"}}],[11,"raw_encoder","","",41,{"inputs":[{"name":"bigfive2003encoding"}],"output":{"name":"box"}}],[11,"raw_decoder","","",41,{"inputs":[{"name":"bigfive2003encoding"}],"output":{"name":"box"}}],[11,"clone","","",42,{"inputs":[{"name":"bigfive2003encoder"}],"output":{"name":"bigfive2003encoder"}}],[11,"new","","",42,{"inputs":[{"name":"bigfive2003encoder"}],"output":{"name":"box"}}],[11,"from_self","","",42,{"inputs":[{"name":"bigfive2003encoder"}],"output":{"name":"box"}}],[11,"is_ascii_compatible","","",42,{"inputs":[{"name":"bigfive2003encoder"}],"output":{"name":"bool"}}],[11,"raw_feed","","",42,null],[11,"raw_finish","","",42,{"inputs":[{"name":"bigfive2003encoder"},{"name":"bytewriter"}],"output":{"name":"option"}}],[0,"whatwg","encoding::codec","Asymmetric or special encoding constructions required by the WHATWG Encoding standard.",null,null],[3,"EncoderOnlyUTF8Encoding","encoding::codec::whatwg","Replacement encoding used to solve a particular attack vector due to mismatching server and\nclient supports for encodings. It is rarely useful outside.",null,null],[0,"x_user_defined","","Algorithmic mapping for `x-user-defined` encoding.",null,null],[5,"forward","encoding::codec::whatwg::x_user_defined","",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[11,"clone","encoding::codec::whatwg","",43,{"inputs":[{"name":"encoderonlyutf8encoding"}],"output":{"name":"encoderonlyutf8encoding"}}],[11,"name","","",43,{"inputs":[{"name":"encoderonlyutf8encoding"}],"output":{"name":"str"}}],[11,"whatwg_name","","",43,{"inputs":[{"name":"encoderonlyutf8encoding"}],"output":{"name":"option"}}],[11,"raw_encoder","","",43,{"inputs":[{"name":"encoderonlyutf8encoding"}],"output":{"name":"box"}}],[11,"raw_decoder","","",43,{"inputs":[{"name":"encoderonlyutf8encoding"}],"output":{"name":"box"}}],[0,"all","encoding","A list of all supported encodings. Useful for encodings fixed in the compile time.",null,null],[5,"encodings","encoding::all","Returns a list of references to the encodings available.",null,null],[0,"whatwg","","",null,null],[17,"X_USER_DEFINED","encoding::all::whatwg","",null,null],[17,"ISO_8859_8_I","","",null,null],[17,"REPLACEMENT","","",null,null],[17,"ERROR","encoding::all","",null,null],[17,"ASCII","","",null,null],[17,"IBM866","","",null,null],[17,"ISO_8859_1","","",null,null],[17,"ISO_8859_2","","",null,null],[17,"ISO_8859_3","","",null,null],[17,"ISO_8859_4","","",null,null],[17,"ISO_8859_5","","",null,null],[17,"ISO_8859_6","","",null,null],[17,"ISO_8859_7","","",null,null],[17,"ISO_8859_8","","",null,null],[17,"ISO_8859_10","","",null,null],[17,"ISO_8859_13","","",null,null],[17,"ISO_8859_14","","",null,null],[17,"ISO_8859_15","","",null,null],[17,"ISO_8859_16","","",null,null],[17,"KOI8_R","","",null,null],[17,"KOI8_U","","",null,null],[17,"MAC_ROMAN","","",null,null],[17,"WINDOWS_874","","",null,null],[17,"WINDOWS_1250","","",null,null],[17,"WINDOWS_1251","","",null,null],[17,"WINDOWS_1252","","",null,null],[17,"WINDOWS_1253","","",null,null],[17,"WINDOWS_1254","","",null,null],[17,"WINDOWS_1255","","",null,null],[17,"WINDOWS_1256","","",null,null],[17,"WINDOWS_1257","","",null,null],[17,"WINDOWS_1258","","",null,null],[17,"MAC_CYRILLIC","","",null,null],[17,"UTF_8","","",null,null],[17,"UTF_16LE","","",null,null],[17,"UTF_16BE","","",null,null],[17,"WINDOWS_949","","",null,null],[17,"EUC_JP","","",null,null],[17,"WINDOWS_31J","","",null,null],[17,"ISO_2022_JP","","",null,null],[17,"GBK","","",null,null],[17,"GB18030","","",null,null],[17,"HZ","","",null,null],[17,"BIG5_2003","","",null,null],[0,"label","encoding","An interface for retrieving an encoding (or a set of encodings) from a string/numeric label.",null,null],[5,"encoding_from_whatwg_label","encoding::label","Returns an encoding from given label, defined in the WHATWG Encoding standard, if any.\nImplements \"get an encoding\" algorithm: http://encoding.spec.whatwg.org/#concept-encoding-get",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encoding_from_windows_code_page","","Returns an encoding from Windows code page number.\nhttp://msdn.microsoft.com/en-us/library/windows/desktop/dd317756%28v=vs.85%29.aspx\nSometimes it can return a *superset* of the requested encoding, e.g. for several CJK encodings.",null,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}]],"paths":[[3,"CodecError"],[4,"DecoderTrap"],[4,"EncoderTrap"],[8,"ByteWriter"],[8,"StringWriter"],[8,"RawEncoder"],[8,"RawDecoder"],[8,"Encoding"],[3,"Vec"],[3,"String"],[3,"ErrorEncoding"],[3,"ErrorEncoder"],[3,"ErrorDecoder"],[3,"ASCIIEncoding"],[3,"ASCIIEncoder"],[3,"ASCIIDecoder"],[3,"SingleByteEncoding"],[3,"SingleByteEncoder"],[3,"SingleByteDecoder"],[3,"UTF8Encoding"],[3,"UTF8Encoder"],[3,"UTF8Decoder"],[3,"Little"],[3,"Big"],[3,"UTF16Encoding"],[3,"UTF16Encoder"],[3,"UTF16Decoder"],[3,"Windows949Encoding"],[3,"Windows949Encoder"],[3,"EUCJPEncoding"],[3,"EUCJPEncoder"],[3,"Windows31JEncoding"],[3,"Windows31JEncoder"],[3,"ISO2022JPEncoding"],[3,"ISO2022JPEncoder"],[3,"GBK"],[3,"GB18030"],[3,"GBEncoding"],[3,"GBEncoder"],[3,"HZEncoding"],[3,"HZEncoder"],[3,"BigFive2003Encoding"],[3,"BigFive2003Encoder"],[3,"EncoderOnlyUTF8Encoding"]]};
searchIndex['kernel32'] = {"items":[],"paths":[]};
searchIndex['encoding_index_korean'] = {"items":[[0,"","encoding_index_korean","Korean index tables for [rust-encoding](https://github.com/lifthrasiir/rust-encoding).",null,null],[0,"euc_kr","","KS X 1001 plus Unified Hangul Code.",null,null],[5,"forward","encoding_index_korean::euc_kr","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}]],"paths":[]};
searchIndex['encoding_index_singlebyte'] = {"items":[[0,"","encoding_index_singlebyte","Single-byte index tables for\n[rust-encoding](https://github.com/lifthrasiir/rust-encoding).",null,null],[0,"ibm866","","IBM code page 866.",null,null],[5,"forward","encoding_index_singlebyte::ibm866","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_2","encoding_index_singlebyte","ISO 8859-2.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_2","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_3","encoding_index_singlebyte","ISO 8859-3.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_3","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_4","encoding_index_singlebyte","ISO 8859-4.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_4","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_5","encoding_index_singlebyte","ISO 8859-5.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_5","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_6","encoding_index_singlebyte","ISO 8859-6.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_6","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_7","encoding_index_singlebyte","ISO 8859-7.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_7","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_8","encoding_index_singlebyte","ISO 8859-8 (either visual or logical).",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_8","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_10","encoding_index_singlebyte","ISO 8859-10.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_10","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_13","encoding_index_singlebyte","ISO 8859-13.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_13","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_14","encoding_index_singlebyte","ISO 8859-14.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_14","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_15","encoding_index_singlebyte","ISO 8859-15.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_15","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"iso_8859_16","encoding_index_singlebyte","ISO 8859-16.",null,null],[5,"forward","encoding_index_singlebyte::iso_8859_16","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"koi8_r","encoding_index_singlebyte","KOI8-R.",null,null],[5,"forward","encoding_index_singlebyte::koi8_r","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"koi8_u","encoding_index_singlebyte","KOI8-U.",null,null],[5,"forward","encoding_index_singlebyte::koi8_u","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"macintosh","encoding_index_singlebyte","MacRoman.",null,null],[5,"forward","encoding_index_singlebyte::macintosh","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_874","encoding_index_singlebyte","Windows code page 874.",null,null],[5,"forward","encoding_index_singlebyte::windows_874","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1250","encoding_index_singlebyte","Windows code page 1250.",null,null],[5,"forward","encoding_index_singlebyte::windows_1250","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1251","encoding_index_singlebyte","Windows code page 1251.",null,null],[5,"forward","encoding_index_singlebyte::windows_1251","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1252","encoding_index_singlebyte","Windows code page 1252.",null,null],[5,"forward","encoding_index_singlebyte::windows_1252","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1253","encoding_index_singlebyte","Windows code page 1253.",null,null],[5,"forward","encoding_index_singlebyte::windows_1253","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1254","encoding_index_singlebyte","Windows code page 1254.",null,null],[5,"forward","encoding_index_singlebyte::windows_1254","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1255","encoding_index_singlebyte","Windows code page 1254.",null,null],[5,"forward","encoding_index_singlebyte::windows_1255","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1256","encoding_index_singlebyte","Windows code page 1256.",null,null],[5,"forward","encoding_index_singlebyte::windows_1256","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1257","encoding_index_singlebyte","Windows code page 1257.",null,null],[5,"forward","encoding_index_singlebyte::windows_1257","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"windows_1258","encoding_index_singlebyte","Windows code page 1258.",null,null],[5,"forward","encoding_index_singlebyte::windows_1258","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[0,"x_mac_cyrillic","encoding_index_singlebyte","MacCyrillic.",null,null],[5,"forward","encoding_index_singlebyte::x_mac_cyrillic","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u8"}],"output":{"name":"u16"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}]],"paths":[]};
searchIndex['encoding_index_simpchinese'] = {"items":[[0,"","encoding_index_simpchinese","Simplified Chinese index tables for\n[rust-encoding](https://github.com/lifthrasiir/rust-encoding).",null,null],[0,"gb18030","","GB 18030 two-byte area.",null,null],[5,"forward","encoding_index_simpchinese::gb18030","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}],[0,"gb18030_ranges","encoding_index_simpchinese","GB 18030 four-byte area.",null,null],[5,"forward","encoding_index_simpchinese::gb18030_ranges","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}]],"paths":[]};
searchIndex['encoding_index_tradchinese'] = {"items":[[0,"","encoding_index_tradchinese","Traditional Chinese index tables for\n[rust-encoding](https://github.com/lifthrasiir/rust-encoding).",null,null],[0,"big5","","Big5 and HKSCS.",null,null],[5,"forward","encoding_index_tradchinese::big5","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}]],"paths":[]};
searchIndex['encoding_index_japanese'] = {"items":[[0,"","encoding_index_japanese","Japanese index tables for [rust-encoding](https://github.com/lifthrasiir/rust-encoding).",null,null],[0,"jis0208","","JIS X 0208 with common extensions.",null,null],[5,"forward","encoding_index_japanese::jis0208","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}],[5,"backward_remapped","","Returns the index shift_jis pointer for code point `code`.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}],[0,"jis0212","encoding_index_japanese","JIS X 0212.",null,null],[5,"forward","encoding_index_japanese::jis0212","Returns the index code point for pointer `code` in this index.",null,{"inputs":[{"name":"u16"}],"output":{"name":"u32"}}],[5,"backward","","Returns the index pointer for code point `code` in this index.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u16"}}]],"paths":[]};
searchIndex['winapi'] = {"items":[],"paths":[]};
searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries",null,null],[0,"types","","",null,null],[0,"common","libc::types","",null,null],[0,"c95","libc::types::common","",null,null],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C.",null,null],[13,"__variant1","","",0,null],[13,"__variant2","","",0,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[0,"c99","libc::types::common","",null,null],[6,"int8_t","libc::types::common::c99","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[0,"posix88","libc::types::common","",null,null],[4,"DIR","libc::types::common::posix88","",null,null],[4,"dirent_t","","",null,null],[0,"os","libc::types","",null,null],[0,"common","libc::types::os","",null,null],[0,"posix01","libc::types::os::common","",null,null],[3,"glob_t","libc::types::os::common::posix01","",null,null],[12,"gl_pathc","","",1,null],[12,"__unused1","","",1,null],[12,"gl_offs","","",1,null],[12,"__unused2","","",1,null],[12,"gl_pathv","","",1,null],[12,"__unused3","","",1,null],[12,"__unused4","","",1,null],[12,"__unused5","","",1,null],[12,"__unused6","","",1,null],[12,"__unused7","","",1,null],[12,"__unused8","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[4,"timezone","","",null,null],[6,"pthread_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sighandler_t","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",2,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[0,"bsd43","libc::types::os::common","",null,null],[3,"rusage","libc::types::os::common::bsd43","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[11,"clone","","",5,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[0,"bsd44","libc::types::os::common","",null,null],[3,"sockaddr","libc::types::os::common::bsd44","",null,null],[12,"sa_len","","",6,null],[12,"sa_family","","",6,null],[12,"sa_data","","",6,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",7,null],[12,"ss_family","","",7,null],[12,"__ss_pad1","","",7,null],[12,"__ss_align","","",7,null],[12,"__ss_pad2","","",7,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",8,null],[12,"sin_family","","",8,null],[12,"sin_port","","",8,null],[12,"sin_addr","","",8,null],[12,"sin_zero","","",8,null],[3,"in_addr","","",null,null],[12,"s_addr","","",9,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",10,null],[12,"sin6_family","","",10,null],[12,"sin6_port","","",10,null],[12,"sin6_flowinfo","","",10,null],[12,"sin6_addr","","",10,null],[12,"sin6_scope_id","","",10,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",11,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",12,null],[12,"imr_interface","","",12,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",13,null],[12,"ipv6mr_interface","","",13,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",14,null],[12,"ai_family","","",14,null],[12,"ai_socktype","","",14,null],[12,"ai_protocol","","",14,null],[12,"ai_addrlen","","",14,null],[12,"ai_canonname","","",14,null],[12,"ai_addr","","",14,null],[12,"ai_next","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",15,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",16,null],[12,"ifa_name","","",16,null],[12,"ifa_flags","","",16,null],[12,"ifa_addr","","",16,null],[12,"ifa_netmask","","",16,null],[12,"ifa_dstaddr","","",16,null],[12,"ifa_data","","",16,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"in_port_t","","",null,null],[6,"in_addr_t","","",null,null],[11,"clone","","",6,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",7,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",8,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",9,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",10,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",11,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",12,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",13,{"inputs":[{"name":"ip6_mreq"}],"output":{"name":"ip6_mreq"}}],[11,"clone","","",14,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",16,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[0,"arch","libc::types::os","",null,null],[0,"c95","libc::types::os::arch","",null,null],[6,"c_char","libc::types::os::arch::c95","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"wchar_t","","",null,null],[0,"c99","libc::types::os::arch","",null,null],[6,"c_longlong","libc::types::os::arch::c99","",null,null],[6,"c_ulonglong","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[0,"posix88","libc::types::os::arch","",null,null],[6,"off_t","libc::types::os::arch::posix88","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"mode_t","","",null,null],[6,"ssize_t","","",null,null],[0,"posix01","libc::types::os::arch","",null,null],[3,"stat","libc::types::os::arch::posix01","",null,null],[12,"st_dev","","",17,null],[12,"st_mode","","",17,null],[12,"st_nlink","","",17,null],[12,"st_ino","","",17,null],[12,"st_uid","","",17,null],[12,"st_gid","","",17,null],[12,"st_rdev","","",17,null],[12,"st_atime","","",17,null],[12,"st_atime_nsec","","",17,null],[12,"st_mtime","","",17,null],[12,"st_mtime_nsec","","",17,null],[12,"st_ctime","","",17,null],[12,"st_ctime_nsec","","",17,null],[12,"st_birthtime","","",17,null],[12,"st_birthtime_nsec","","",17,null],[12,"st_size","","",17,null],[12,"st_blocks","","",17,null],[12,"st_blksize","","",17,null],[12,"st_flags","","",17,null],[12,"st_gen","","",17,null],[12,"st_lspare","","",17,null],[12,"st_qspare","","",17,null],[3,"utimbuf","","",null,null],[12,"actime","","",18,null],[12,"modtime","","",18,null],[3,"pthread_attr_t","","",null,null],[12,"__sig","","",19,null],[12,"__opaque","","",19,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[11,"clone","","",17,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",18,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",19,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[0,"extra","libc::types::os::arch","",null,null],[3,"mach_timebase_info","libc::types::os::arch::extra","",null,null],[12,"numer","","",20,null],[12,"denom","","",20,null],[6,"mach_timebase_info_data_t","","",null,null],[11,"clone","","",20,{"inputs":[{"name":"mach_timebase_info"}],"output":{"name":"mach_timebase_info"}}],[0,"consts","libc","",null,null],[0,"os","libc::consts","",null,null],[0,"c95","libc::consts::os","",null,null],[17,"EXIT_FAILURE","libc::consts::os::c95","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[0,"posix88","libc::consts::os","",null,null],[17,"O_RDONLY","libc::consts::os::posix88","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[0,"posix01","libc::consts::os","",null,null],[17,"F_DUPFD","libc::consts::os::posix01","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"SIG_IGN","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[0,"bsd44","libc::consts::os","",null,null],[17,"MADV_NORMAL","libc::consts::os::bsd44","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[0,"extra","libc::consts::os","",null,null],[17,"O_DSYNC","libc::consts::os::extra","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"MAP_STACK","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"PATH_MAX","","",null,null],[0,"sysconf","libc::consts::os","",null,null],[17,"_SC_ARG_MAX","libc::consts::os::sysconf","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[0,"funcs","libc","",null,null],[0,"c95","libc::funcs","",null,null],[0,"ctype","libc::funcs::c95","",null,null],[5,"isalnum","libc::funcs::c95::ctype","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[0,"stdio","libc::funcs::c95","",null,null],[5,"fopen","libc::funcs::c95::stdio","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[0,"stdlib","libc::funcs::c95","",null,null],[5,"abs","libc::funcs::c95::stdlib","",null,null],[5,"labs","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[0,"string","libc::funcs::c95","",null,null],[5,"strcpy","libc::funcs::c95::string","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[0,"posix88","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix88","",null,null],[5,"chmod","libc::funcs::posix88::stat_","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"mkfifo","","",null,null],[5,"stat","","",null,null],[0,"stdio","libc::funcs::posix88","",null,null],[5,"popen","libc::funcs::posix88::stdio","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[0,"fcntl","libc::funcs::posix88","",null,null],[5,"open","libc::funcs::posix88::fcntl","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[0,"dirent","libc::funcs::posix88","",null,null],[5,"opendir","libc::funcs::posix88::dirent","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[0,"unistd","libc::funcs::posix88","",null,null],[5,"access","libc::funcs::posix88::unistd","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"getsid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"usleep","","",null,null],[5,"nanosleep","","",null,null],[5,"sysconf","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[0,"signal","libc::funcs::posix88","",null,null],[5,"kill","libc::funcs::posix88::signal","",null,null],[0,"mman","libc::funcs::posix88","",null,null],[5,"mlock","libc::funcs::posix88::mman","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mprotect","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,null],[5,"shm_unlink","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[0,"net","libc::funcs::posix88","",null,null],[5,"if_nametoindex","libc::funcs::posix88::net","",null,null],[0,"posix01","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix01","",null,null],[5,"lstat","libc::funcs::posix01::stat_","",null,null],[0,"unistd","libc::funcs::posix01","",null,null],[5,"readlink","libc::funcs::posix01::unistd","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"putenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[0,"signal","libc::funcs::posix01","",null,null],[5,"signal","libc::funcs::posix01::signal","",null,null],[0,"glob","libc::funcs::posix01","",null,null],[5,"glob","libc::funcs::posix01::glob","",null,null],[5,"globfree","","",null,null],[0,"mman","libc::funcs::posix01","",null,null],[5,"posix_madvise","libc::funcs::posix01::mman","",null,null],[0,"resource","libc::funcs::posix01","",null,null],[5,"getrlimit","libc::funcs::posix01::resource","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[0,"bsd43","libc::funcs","",null,null],[5,"socket","libc::funcs::bsd43","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"recv","","",null,null],[5,"send","","",null,null],[5,"recvfrom","","",null,null],[5,"sendto","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"shutdown","","",null,null],[0,"bsd44","libc::funcs","",null,null],[5,"ioctl","libc::funcs::bsd44","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"getdtablesize","","",null,null],[5,"madvise","","",null,null],[5,"mincore","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[0,"extra","libc::funcs","",null,null],[5,"_NSGetExecutablePath","libc::funcs::extra","",null,null]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"mach_timebase_info"]]};
searchIndex['lazy_static'] = {"items":[[0,"","lazy_static","A macro for declaring lazily evaluated statics.",null,null],[14,"lazy_static!","","",null,null]],"paths":[]};
searchIndex['gcc'] = {"items":[[0,"","gcc","A library for build scripts to compile custom C code",null,null],[3,"Config","","Extra configuration to pass to gcc.",null,null],[5,"compile_library","","Compile a library from the given set of input C files.",null,null],[0,"windows_registry","","A helper module to probe the Windows Registry when looking for\nwindows-specific tools.",null,null],[5,"find","gcc::windows_registry","Attempts to find a tool within an MSVC installation using the Windows\nregistry as a point to search from.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"option"}}],[11,"new","gcc","Construct a new instance of a blank set of configuration.",0,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"include","","Add a directory to the `-I` or include path for headers",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"define","","Specify a `-D` variable with an optional value.",0,{"inputs":[{"name":"config"},{"name":"str"},{"name":"option"}],"output":{"name":"config"}}],[11,"object","","Add an arbitrary object file to link in",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"flag","","Add an arbitrary flag to the invocation of the compiler",0,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"config"}}],[11,"file","","Add a file which will be compiled",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"cpp","","Set C++ support.",0,{"inputs":[{"name":"config"},{"name":"bool"}],"output":{"name":"config"}}],[11,"cpp_link_stdlib","","Set the standard library to link against when compiling with C++\nsupport.",0,{"inputs":[{"name":"config"},{"name":"option"}],"output":{"name":"config"}}],[11,"cpp_set_stdlib","","Force the C++ compiler to use the specified standard library.",0,{"inputs":[{"name":"config"},{"name":"option"}],"output":{"name":"config"}}],[11,"target","","Configures the target this configuration will be compiling for.",0,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"config"}}],[11,"host","","Configures the host assumed by this configuration.",0,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"config"}}],[11,"opt_level","","Configures the optimization level of the generated object files.",0,{"inputs":[{"name":"config"},{"name":"u32"}],"output":{"name":"config"}}],[11,"debug","","Configures whether the compiler will emit debug information when\ngenerating object files.",0,{"inputs":[{"name":"config"},{"name":"bool"}],"output":{"name":"config"}}],[11,"out_dir","","Configures the output directory where all object files and static\nlibraries will be located.",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"compiler","","Configures the compiler to be used to produce output.",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"archiver","","Configures the tool used to assemble archives.",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"cargo_metadata","","Define whether metadata should be emitted for cargo allowing it to\nautomatically link the binary. Defaults to `true`.",0,{"inputs":[{"name":"config"},{"name":"bool"}],"output":{"name":"config"}}],[11,"compile","","Run the compiler, generating the file `output`",0,{"inputs":[{"name":"config"},{"name":"str"}],"output":null}]],"paths":[[3,"Config"]]};
searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator.",null,null],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex['pkg_config'] = {"items":[[0,"","pkg_config","A build dependency for Cargo libraries to find system artifacts through the\n`pkg-config` utility.",null,null],[3,"Config","","",null,null],[3,"Library","","",null,null],[12,"libs","","",0,null],[12,"link_paths","","",0,null],[12,"frameworks","","",0,null],[12,"framework_paths","","",0,null],[12,"include_paths","","",0,null],[12,"version","","",0,null],[5,"target_supported","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"find_library","","Simple shortcut for using all default options for finding a library.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"fmt","","",0,{"inputs":[{"name":"library"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new set of configuration options which are all initially set\nto \"blank\".",1,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"statik","","Indicate whether the `--static` flag should be passed.",1,{"inputs":[{"name":"config"},{"name":"bool"}],"output":{"name":"config"}}],[11,"atleast_version","","Indicate that the library must be at least version `vers`.",1,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"config"}}],[11,"arg","","Add an argument to pass to pkg-config.",1,{"inputs":[{"name":"config"},{"name":"s"}],"output":{"name":"config"}}],[11,"find","","Run `pkg-config` to find the library `name`.",1,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_variable","","Run `pkg-config` to get the value of a variable from a package using\n--variable.",1,{"inputs":[{"name":"config"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"Library"],[3,"Config"]]};
searchIndex['encoding_index_tests'] = {"items":[[0,"","encoding_index_tests","Macros and utilities for testing indices.",null,null],[14,"single_byte_tests!","","Makes a common test suite for single-byte indices.",null,null],[14,"multi_byte_tests!","","Makes a common test suite for multi-byte indices.",null,null],[14,"multi_byte_range_tests!","","Makes a common test suite for multi-byte range indices.",null,null]],"paths":[]};
searchIndex['build'] = {"items":[[0,"","build","",null,null],[5,"link","","",null,{"inputs":[{"name":"str"},{"name":"bool"}],"output":null}]],"paths":[]};
initSearch(searchIndex);
